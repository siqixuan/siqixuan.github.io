<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>数据分析——NumPy学习</title>
      <link href="/2020/08/30/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E2%80%94%E2%80%94NumPy%E5%AD%A6%E4%B9%A0/"/>
      <url>/2020/08/30/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E2%80%94%E2%80%94NumPy%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="数据分析——NumPy学习"><a href="#数据分析——NumPy学习" class="headerlink" title="数据分析——NumPy学习"></a>数据分析——NumPy学习</h1><h2 id="NumPy练习与思考"><a href="#NumPy练习与思考" class="headerlink" title="NumPy练习与思考"></a>NumPy练习与思考</h2><p>1.如何将一维数组转换为列表？</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 使用ravel函数将二维数组转换为一维数组</span>In <span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">:</span> return_array1<span class="token operator">=</span>return_array<span class="token punctuation">.</span>ravel<span class="token punctuation">(</span><span class="token punctuation">)</span>In <span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">:</span> return_array1Out<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">:</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span> <span class="token number">0.003731</span><span class="token punctuation">,</span> <span class="token number">0.021066</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">0.004854</span><span class="token punctuation">,</span> <span class="token number">0.006098</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">0.00606</span> <span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">0.001838</span><span class="token punctuation">,</span><span class="token number">0.001842</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">0.016544</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">0.003738</span><span class="token punctuation">,</span> <span class="token number">0.003752</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">0.003087</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">0.000344</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">0.033391</span><span class="token punctuation">,</span> <span class="token number">0.007123</span><span class="token punctuation">,</span> <span class="token number">0.004597</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">0.024112</span><span class="token punctuation">,</span> <span class="token number">0.011704</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">0.029563</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">0.01457</span> <span class="token punctuation">,</span> <span class="token number">0.016129</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 使用tolist函数将一维数组转换为列表list</span>In <span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span>：return_array2<span class="token operator">=</span>return_array1<span class="token punctuation">.</span>tolist<span class="token punctuation">(</span><span class="token punctuation">)</span>In <span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span><span class="token punctuation">:</span> return_array2Out<span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token number">0.003731</span><span class="token punctuation">,</span><span class="token number">0.021066</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">0.004854</span><span class="token punctuation">,</span><span class="token number">0.006098</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">0.00606</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">0.001838</span><span class="token punctuation">,</span><span class="token number">0.001842</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">0.016544</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">0.003738</span><span class="token punctuation">,</span><span class="token number">0.003752</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">0.003087</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">0.000344</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">0.033391</span><span class="token punctuation">,</span><span class="token number">0.007123</span><span class="token punctuation">,</span><span class="token number">0.004597</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">0.024112</span><span class="token punctuation">,</span><span class="token number">0.011704</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">0.029563</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">0.01457</span><span class="token punctuation">,</span><span class="token number">0.016129</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>注意：</strong>NumPy的一维数组，1×n的数组和n×1的数组展现方式是完全一样的。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python入门教程</title>
      <link href="/2020/08/28/Python%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B/"/>
      <url>/2020/08/28/Python%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="Python入门教程"><a href="#Python入门教程" class="headerlink" title="Python入门教程"></a><strong>Python入门教程</strong></h1><h2 id="1-赋值"><a href="#1-赋值" class="headerlink" title="1.赋值"></a>1.赋值</h2><p>在Python中，每个变量在使用前都必须赋值，并且是运用等号（=）来给变量赋值。等号（=）运算符左边是一个变量，右边是存储在该变量中的值，即：变量=值。<br><strong>Python命名的规则</strong><br>Python的变量名可以用英文字母、数字和下划线构成，但要注意以下四个方面：</p><ul><li>可以单独用英文字母或下划线作为变量名，同时英文字母需要注意区分大小写；</li><li>数字不能单独用于表示变量，比如3不能作为变量名；</li><li>变量不能以数字开头，比如1a不能作为变量名，但是a1可以作为变量名；</li><li>变量的命名应该简洁易懂，对变量的命名尽可能运用该变量的英文名、英文缩写或者英文名的首字母；</li></ul><p><strong>例1.1变量的赋值：</strong></p><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span> rate <span class="token operator">=</span> <span class="token number">0.08</span>In <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">:</span> rateOut <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">0.08</span>rate <span class="token operator">=</span> <span class="token number">0.08</span>  <span class="token comment" spellcheck="true">#利率rate等于8%</span>r <span class="token operator">=</span> <span class="token number">0.08</span>      <span class="token comment" spellcheck="true">#利率r等于8%</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-数据类型"><a href="#2-数据类型" class="headerlink" title="2.数据类型"></a>2.数据类型</h2><p>Python典型的数据类型包括数字、字符串、布尔值与空值。重点介绍数字和字符串两种类型，数字包括整型（int）、长整型(long)、浮点型(float)和复数(complex)。</p><h3 id="2-1整型"><a href="#2-1整型" class="headerlink" title="2.1整型"></a>2.1整型</h3><p>整数可分为正整数、负整数和零，并且有无穷多个。在Python中与整数对应的就是整型。<br><strong>例2整型的例子</strong></p><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">:</span> share <span class="token operator">=</span> <span class="token number">100</span>  <span class="token comment" spellcheck="true">#股票数量等于100</span>In <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">:</span> type<span class="token punctuation">(</span>share<span class="token punctuation">)</span>Out <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">:</span> int<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>整数的特征：1、必须为数字；2、不能出现小数点。</p><h3 id="2-2浮点型"><a href="#2-2浮点型" class="headerlink" title="2.2浮点型"></a>2.2浮点型</h3><p>浮点型（也成为浮点数）就是由整数、小数点和小数（非必需）构成的数字。<br><strong>例2.1浮点型的例子1</strong></p><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">:</span> type<span class="token punctuation">(</span>rate<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#type()函数用来判断变量的数据类型</span>Out <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">:</span> float<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><strong><em>特别注意：Python中输入数字时，如果数字中带有小数点，无论实质上是否为整数，Python均会将其视作浮点型。</em></strong><br>在Python中输入数字时，用户在100后面增加了一个小数点，则数据类型结果就是浮点型的而非整型，具体代码如下：<br>** 例2.2浮点型的例子2**</p><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">:</span> share<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">.</span>In <span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">:</span> type<span class="token punctuation">(</span>share<span class="token punctuation">)</span>Out <span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">:</span> float<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="2-3复数"><a href="#2-3复数" class="headerlink" title="2.3复数"></a>2.3复数</h3><p>当a、b均为实数,z=a+bi被称为复数（complex number）。其中a称为实部，b称为虚部，i称为虚数单位。复数在金融领域的应用较为狭窄，主要用于金融的时间序列分析、美式期权定价（运用傅里叶变换）。注意，在Python中，虚数单位是用小写的英文字母j来表示：<br><strong>例2.3复数的例子</strong></p><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">:</span> a <span class="token operator">=</span> <span class="token number">2</span><span class="token operator">+</span><span class="token number">3j</span>In <span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">:</span> type<span class="token punctuation">(</span>a<span class="token punctuation">)</span>Out <span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">:</span> complex<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="2-4字符串"><a href="#2-4字符串" class="headerlink" title="2.4字符串"></a>2.4字符串</h3><p>在Python中针对表示文本的基本数据类型就需要用到字符串（string)。字符串的四大特征：1、输入时需用引号；2、可索引性；3、可截取性；4、可替换性。</p><ol><li>输入时需用引号<ul><li>用英文的单引号’字符串内容’、双引号’’字符串内容’’以及三引号’’’字符串内容’’’来表示字符串,三引号往往运用于多行文本；</li><li>引号中无论中文、英文字母、符号、数字甚至是空格，均被视作字符串；</li><li>字符串的类型是用str来显示（即英文string的缩写）；</li></ul></li></ol><p><strong>例2.4字符串1</strong></p><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span> a <span class="token operator">=</span> <span class="token string">'finance'</span>In <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">:</span> str<span class="token punctuation">(</span>a<span class="token punctuation">)</span>Out <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token string">'finance'</span>In <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">:</span> type<span class="token punctuation">(</span>a<span class="token punctuation">)</span>Out <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">:</span> strIn <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">:</span> type<span class="token punctuation">(</span>b<span class="token punctuation">)</span>Out <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">:</span> strIn <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">:</span> c <span class="token operator">=</span> <span class="token string">'金融风险管理'</span>In <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">:</span> type<span class="token punctuation">(</span>c<span class="token punctuation">)</span>Out <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">:</span> strIn <span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">:</span> d <span class="token operator">=</span> <span class="token string">'888'</span>In <span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">:</span> type<span class="token punctuation">(</span>d<span class="token punctuation">)</span>Out <span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">:</span> strIn <span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">:</span> e <span class="token operator">=</span> <span class="token string">'1+1'</span>In <span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">:</span> type<span class="token punctuation">(</span>e<span class="token punctuation">)</span>Out <span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">:</span> str<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="2"><li>可索引性<br>字符串是可以被索引的。<ul><li>字符串是从左向右的索引，则默认是从0开始，即0123456789…的顺序，最大范围就是字符串长度减去1，并且需要用到中括号；</li><li>字符串是从右向左的索引，则默认是从-1开始，即-1-2-3-4-5-6-7-8-9…的顺序，最大范围是字符串的开头；</li></ul></li></ol><p><strong><em>注意:</em></strong><br>以上规则不仅适用于字符串，对于Python中涉及的其他索引也全部适用。<br><strong>例2.5字符串的例子2</strong></p><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">:</span> a <span class="token operator">=</span> <span class="token string">'finance'</span>In <span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">:</span> a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>              <span class="token comment" spellcheck="true">#索引首字母</span>Out <span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token string">'f'</span>In <span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">:</span> a<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span>            <span class="token comment" spellcheck="true">#索引第四个字母</span>Out <span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token string">'a'</span>In <span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span><span class="token punctuation">:</span> a<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>          <span class="token comment" spellcheck="true">#索引最后一个字母</span>Out <span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token string">'e'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="3"><li>可截取性。<ul><li>字符串的截取也称为切片(slice)，是从一个字符串中获取子字符串（也就是字符串的一部分），需要使用中括号、起始索引值（start）、终止索引值(end)以及可选的步长（step）来定义。截取的输入格式如下：字符串[start:end:step]</li></ul></li></ol><p><strong>例2.6字符串的例子3</strong></p><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span><span class="token punctuation">:</span> x <span class="token operator">=</span> <span class="token string">'I love risk'</span>In <span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">]</span><span class="token punctuation">:</span> x<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token number">6</span><span class="token punctuation">]</span>        <span class="token comment" spellcheck="true">#截取字符串love</span>Out <span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token string">'love'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ul><li>在截取的字符串中，截取的子字符串是截止到输入的终止索引的前一位（顾头不顾尾）；</li><li>不输入步长的参数时，默认的步长是1；</li><li>仅输入起始索引值但不输入终止索引值，则表示截取从起始索引值一直到字符串末尾的子字符串；</li><li>不输入起始索引值但输入终止索引值，表示截取从字符的部首一直到终止索引值前一位的子字符串。<br><strong>例2.7字符串的例子4</strong><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">14</span><span class="token punctuation">]</span><span class="token punctuation">:</span> x<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span>  <span class="token comment" spellcheck="true">#从第3位开始一直到最后一位</span>Out <span class="token punctuation">[</span><span class="token number">14</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token string">'love risk'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><strong>例2.8字符串的例子5</strong><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">15</span><span class="token punctuation">]</span><span class="token punctuation">:</span> x<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">6</span><span class="token punctuation">]</span>Out <span class="token punctuation">[</span><span class="token number">15</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token string">'I love'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><strong>例2.9字符串的例子6</strong><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">:</span> x <span class="token operator">=</span> <span class="token string">'I love risk management'</span>In <span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">:</span> x<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token number">9</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token comment" spellcheck="true">#截取第3位到第9位并且步长为3的子字符串</span>Out <span class="token punctuation">[</span><span class="token number">17</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token string">'lei'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ol start="4"><li>可替换性<ul><li>用户在Python中输入字符串中的部分字符串出现错误，这时用户就可以用replace函数实现修正和替换。在Python中，第一个引号中是输入原有内容，第二个引号中是输入修正后的内容。</li></ul></li></ol><strong>例2.10字符串的列子</strong><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">18</span><span class="token punctuation">]</span><span class="token punctuation">:</span> y <span class="token operator">=</span> <span class="token string">'I love management'</span> <span class="token comment" spellcheck="true">#错误的输入</span>In <span class="token punctuation">[</span><span class="token number">18</span><span class="token punctuation">]</span><span class="token punctuation">:</span>y<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'management'</span><span class="token punctuation">,</span><span class="token string">'finance'</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#进行更正</span>Out <span class="token punctuation">[</span><span class="token number">18</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token string">'I love finance'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="3-数据结构"><a href="#3-数据结构" class="headerlink" title="3.数据结构"></a>3.数据结构</h2></li></ul><p>目前为止，Python共包括元组、列表、集合、字典、数组和数据框这6种数据结构，具体见表1：</p><table><thead><tr><th>数据结构类型</th><th>简介和特征</th><th>特征性标识</th></tr></thead><tbody><tr><td>元组（tuple）</td><td>一种高级的数据结构，可索引，但不可修改</td><td>用小括号()标识</td></tr><tr><td>列表（list）</td><td>与元组类似，除了可索引以外，更重要的是可以修改，可以理解为元组的升级版，而元组则是稳定版的列表</td><td>用中括号[]标识</td></tr><tr><td>集合（set）</td><td>类似于数学的集合，每个集合的元素具有无序性、不重复性的特征</td><td>用大括号{}标识</td></tr><tr><td>字典(dict)</td><td>与日常生活中的字典用法很类似，通过“名称（键key)→内容（值value）”来构建</td><td>用大括号{}标识</td></tr><tr><td>数组（array）</td><td>科学计算和代数运算常用的数据类型，类似于线性代数的向量和矩阵</td><td>用array、小括号、中括号共同标识</td></tr><tr><td>数据框（dataframe）</td><td>数据分析处理常用的数据类型，带有索引(index)和列名（column），类似于Excel的工作表</td><td>用DataFrame、小括号、中括号共同标识</td></tr></tbody></table><h3 id="3-1元组"><a href="#3-1元组" class="headerlink" title="3.1元组"></a>3.1元组</h3><p>元组(tuple)是一种高级的数据结构，创建的语法为：变量=（元素1，元素2，元素3， …）<br><strong>例3.1元组的创建1</strong></p><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span> tup1 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span>In <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">:</span> type<span class="token punctuation">(</span>tup1<span class="token punctuation">)</span>Out<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">:</span> tuple<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><strong><em>注意:</em></strong>如果元组中只包含一个元素时，需要在该元素后面添加一个逗号，否则就无法构成一个元组，即要写成tup1=(1,)而不是tup=(1)，示例如下：<br>**例3.2元组的创建2</p><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">:</span> tup2 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">#在元素后面加一个逗号</span>In <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">:</span> type<span class="token punctuation">(</span>tup2<span class="token punctuation">)</span>Out<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">:</span> tupleIn <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">:</span> tup3<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">#没有在元素后面加一个逗号</span>In <span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">:</span> type<span class="token punctuation">(</span>tup3<span class="token punctuation">)</span>Out<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">:</span> int<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong><em>注意:</em></strong>元组一旦创建以后，元组中的元素是不可修改的，只能进行访问。</p><p><strong>例3.3元组的访问</strong><br>创建包含4个元素的元组</p><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">:</span> tup4 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">'finance'</span><span class="token punctuation">,</span><span class="token string">'风险管理'</span><span class="token punctuation">,</span><span class="token number">2019</span><span class="token punctuation">,</span><span class="token number">8.88</span><span class="token punctuation">)</span>In <span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">:</span> type<span class="token punctuation">(</span>tup4<span class="token punctuation">)</span>Out<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">:</span> tupleIn <span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">:</span> tup4<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>     <span class="token comment" spellcheck="true">#访问元组的第一个元素</span>Out<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token string">'finance'</span>In <span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">:</span> tup4<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>  <span class="token comment" spellcheck="true">#访问元组的最后一个元素</span>Out<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">8.88</span>In <span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span><span class="token punctuation">:</span> tup4<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token comment" spellcheck="true">#访问元组第2个至第3个元素</span>Out<span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token string">'风险管理'</span><span class="token punctuation">,</span> <span class="token number">2019</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-2列表"><a href="#3-2列表" class="headerlink" title="3.2列表"></a>3.2列表</h3><p>列表（list)是Python中最常用的数据结构，列表的创建方式与元组是比较相似的，创建方法如下：变量=[元素1，元素2，元素3，…]。元组与列表的异同如下：</p><table><thead><tr><th align="left"></th><th>不同点</th><th>相同点</th></tr></thead><tbody><tr><td align="left">元组</td><td>每个元素都是不可修改的，用小括号标识</td><td>1.可以容纳Python的任何对象</td></tr><tr><td align="left">列表</td><td>每个元素都是可以修改的，用中括号标识</td><td>2.元素是有序的，即每个元素都有一个索引值</td></tr><tr><td align="left"><strong>例3.4列表的创建</strong></td><td></td><td></td></tr></tbody></table><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span><span class="token punctuation">:</span> list1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>In <span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">]</span><span class="token punctuation">:</span> type<span class="token punctuation">(</span>list1<span class="token punctuation">)</span>Out<span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">]</span><span class="token punctuation">:</span> listIn <span class="token punctuation">[</span><span class="token number">14</span><span class="token punctuation">]</span><span class="token punctuation">:</span> list2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'finance'</span><span class="token punctuation">,</span><span class="token string">'risk management'</span><span class="token punctuation">,</span><span class="token string">'金融风险管理'</span><span class="token punctuation">,</span><span class="token number">2020</span><span class="token punctuation">,</span><span class="token number">88.8</span><span class="token punctuation">]</span>In <span class="token punctuation">[</span><span class="token number">15</span><span class="token punctuation">]</span><span class="token punctuation">:</span> type<span class="token punctuation">(</span>list2<span class="token punctuation">)</span>Out<span class="token punctuation">[</span><span class="token number">15</span><span class="token punctuation">]</span><span class="token punctuation">:</span> list<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>列表的访问与元组的访问是类似的。<br><strong>例3.5列表的访问</strong></p><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span> list2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'finance'</span><span class="token punctuation">,</span><span class="token string">'risk management'</span><span class="token punctuation">,</span><span class="token string">'金融风险管理'</span><span class="token punctuation">,</span><span class="token number">2020</span><span class="token punctuation">,</span><span class="token number">88.8</span><span class="token punctuation">]</span>In <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">:</span> list2<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>Out<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token string">'finance'</span>In <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">:</span> list2<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>Out<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">88.8</span>In <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">:</span> list2<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">:</span><span class="token number">5</span><span class="token punctuation">]</span>Out<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">2020</span><span class="token punctuation">,</span> <span class="token number">88.8</span><span class="token punctuation">]</span>In <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">:</span> list2<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">]</span>Out<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'金融风险管理'</span><span class="token punctuation">,</span> <span class="token number">2020</span><span class="token punctuation">]</span>In <span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">:</span> list2<span class="token punctuation">.</span>index<span class="token punctuation">(</span><span class="token number">2020</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">#index()函数得到元素2020在列表中的索引值</span>Out<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">3</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong><em>注意:</em></strong><br>0代表的是第一个元素，所以索引值等于3代表的是第4个元素。<br>对于已有的列表，在新增元素时可以运用append()函数，并且新元素是添加到列表的末尾。<br><strong>例3.6列表的添加</strong></p><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">:</span> list1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>In <span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">:</span> list1<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">0.0054</span><span class="token punctuation">)</span>In <span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">:</span> list1<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token number">0.0077</span><span class="token punctuation">)</span>In <span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span><span class="token punctuation">:</span> list1<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token number">0.0024</span><span class="token punctuation">)</span>In <span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span><span class="token punctuation">:</span> list1<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token number">0.0087</span><span class="token punctuation">)</span>In <span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">]</span><span class="token punctuation">:</span> list1<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token number">0.0038</span><span class="token punctuation">)</span>In <span class="token punctuation">[</span><span class="token number">14</span><span class="token punctuation">]</span><span class="token punctuation">:</span> list1Out<span class="token punctuation">[</span><span class="token number">14</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">0.0054</span><span class="token punctuation">,</span> <span class="token number">0.0077</span><span class="token punctuation">,</span> <span class="token number">0.0024</span><span class="token punctuation">,</span> <span class="token number">0.0087</span><span class="token punctuation">,</span> <span class="token number">0.0038</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>对列表中元素的删除分为两类：第一类是删除指定的元素，运用remove()函数；第二类是删除列表中全部的元素，也就是清空列表，需要运用clear(）函数。<br><strong>例3.7列表的删除1</strong></p><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">15</span><span class="token punctuation">]</span><span class="token punctuation">:</span> list1<span class="token punctuation">.</span>remove<span class="token punctuation">(</span><span class="token number">0.0024</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#删除list1中的0.0024</span>In <span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">:</span> list1Out<span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">0.0054</span><span class="token punctuation">,</span> <span class="token number">0.0077</span><span class="token punctuation">,</span> <span class="token number">0.0087</span><span class="token punctuation">,</span> <span class="token number">0.0038</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><strong><em>注意:</em></strong><br>如果列表中有多个相同值的元素x,则remove(x)是删除列表中值为x的第1个元素，而非全部x的元素。<br><strong>例3.8列表的删除2</strong></p><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">18</span><span class="token punctuation">]</span><span class="token punctuation">:</span> list3 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span>In <span class="token punctuation">[</span><span class="token number">19</span><span class="token punctuation">]</span><span class="token punctuation">:</span> list3<span class="token punctuation">.</span>remove<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#删除列表中值为2的第一个元素</span>In <span class="token punctuation">[</span><span class="token number">20</span><span class="token punctuation">]</span><span class="token punctuation">:</span> list3Out<span class="token punctuation">[</span><span class="token number">20</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span>In <span class="token punctuation">[</span><span class="token number">21</span><span class="token punctuation">]</span><span class="token punctuation">:</span> list3<span class="token punctuation">.</span>clear<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#将列表中的全部元素进行清空处理</span>In <span class="token punctuation">[</span><span class="token number">22</span><span class="token punctuation">]</span><span class="token punctuation">:</span> list3Out<span class="token punctuation">[</span><span class="token number">22</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>利用insert()函数在列表的指定位置插上元素，insert（）函数需要两个输入参数：第1个输入参数是位置参数，相当于索引值，第2个输入参数时需要插上的元素值。<br><strong>例3.9列表的插入</strong></p><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">23</span><span class="token punctuation">]</span><span class="token punctuation">:</span> list1 <span class="token operator">=</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">0.0054</span><span class="token punctuation">,</span><span class="token number">0.0077</span><span class="token punctuation">,</span><span class="token number">0.0087</span><span class="token punctuation">,</span><span class="token number">0.0038</span><span class="token punctuation">]</span>In <span class="token punctuation">[</span><span class="token number">24</span><span class="token punctuation">]</span><span class="token punctuation">:</span> list1<span class="token punctuation">.</span>insert<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">0.0024</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#在列表中第3个元素插入值0.0024</span>In <span class="token punctuation">[</span><span class="token number">25</span><span class="token punctuation">]</span><span class="token punctuation">:</span> list1Out<span class="token punctuation">[</span><span class="token number">25</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">0.0054</span><span class="token punctuation">,</span> <span class="token number">0.0077</span><span class="token punctuation">,</span> <span class="token number">0.0024</span><span class="token punctuation">,</span> <span class="token number">0.0087</span><span class="token punctuation">,</span> <span class="token number">0.0038</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>升序排序：由小到大。<br>降序排序：由大到小。<br>列表的排序，由小到大排序需要运用sort()函数，由大到小排序需要运用 reverse()函数。<br><strong>例3.10列表的排序</strong></p><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">26</span><span class="token punctuation">]</span><span class="token punctuation">:</span> list1<span class="token punctuation">.</span>sort<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#由小到大排序</span>In <span class="token punctuation">[</span><span class="token number">27</span><span class="token punctuation">]</span><span class="token punctuation">:</span> list1Out<span class="token punctuation">[</span><span class="token number">27</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">0.0054</span><span class="token punctuation">,</span> <span class="token number">0.0024</span><span class="token punctuation">,</span> <span class="token number">0.0038</span><span class="token punctuation">,</span> <span class="token number">0.0077</span><span class="token punctuation">,</span> <span class="token number">0.0087</span><span class="token punctuation">]</span>In <span class="token punctuation">[</span><span class="token number">28</span><span class="token punctuation">]</span><span class="token punctuation">:</span> list1<span class="token punctuation">.</span>reverse<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#由大到小排序</span>In <span class="token punctuation">[</span><span class="token number">29</span><span class="token punctuation">]</span><span class="token punctuation">:</span> list1Out<span class="token punctuation">[</span><span class="token number">29</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">0.0087</span><span class="token punctuation">,</span> <span class="token number">0.0077</span><span class="token punctuation">,</span> <span class="token number">0.0038</span><span class="token punctuation">,</span> <span class="token number">0.0024</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">0.0054</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>利用count()函数计算列表中反复出现的元素次数。<br><strong>例3.11列表中元素的计数</strong></p><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">30</span><span class="token punctuation">]</span><span class="token punctuation">:</span> list4 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span>In <span class="token punctuation">[</span><span class="token number">31</span><span class="token punctuation">]</span><span class="token punctuation">:</span> list4<span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#计算列表中数字1出现的次数</span>Out<span class="token punctuation">[</span><span class="token number">31</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">5</span>In <span class="token punctuation">[</span><span class="token number">32</span><span class="token punctuation">]</span><span class="token punctuation">:</span> list4<span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#计算列表中数字2出现的次数</span>Out<span class="token punctuation">[</span><span class="token number">32</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">3</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-3集合"><a href="#3-3集合" class="headerlink" title="3.3集合"></a>3.3集合</h3><p>在Python中集合（set）的概念接近数学上的集合。每个集合中的元素是无序且不重复的。集合的创建方法如下：变量={ 元素1，元素2，元素3，…}。集合不可以被截取，也不可能被索引，只能包括并集、交集、差集等集合运算，同时，集合元素可以被添加和删除。<br>1.集合的创建<br><strong>例3.12创建两个集合</strong></p><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">:</span> set1 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'上证综指'</span><span class="token punctuation">,</span><span class="token string">'深圳成指'</span><span class="token punctuation">,</span><span class="token string">'恒生指数'</span><span class="token punctuation">,</span><span class="token string">'日经225指数'</span><span class="token punctuation">,</span><span class="token string">'道琼斯指数'</span><span class="token punctuation">}</span>In <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">:</span> type<span class="token punctuation">(</span>set1<span class="token punctuation">)</span>Out<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">:</span> setIn <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">:</span> set2 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'标普500指数'</span><span class="token punctuation">,</span><span class="token string">'道琼斯指数'</span><span class="token punctuation">,</span><span class="token string">'沪深300指数'</span><span class="token punctuation">,</span><span class="token string">'日经225指数'</span><span class="token punctuation">,</span><span class="token string">'法国CAC40指数'</span><span class="token punctuation">,</span><span class="token string">'德国DAX指数'</span><span class="token punctuation">}</span>In <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">:</span> type<span class="token punctuation">(</span>set2<span class="token punctuation">)</span>Out<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">:</span> set<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>2.集合的运算——并集<br>集合的并集时需要运用到“|”符号。<br><strong>例3.13集合的并集</strong></p><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">:</span> set1<span class="token operator">|</span>set2Out<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">:</span><span class="token punctuation">{</span><span class="token string">'上证综指'</span><span class="token punctuation">,</span><span class="token string">'德国DAX指数'</span><span class="token punctuation">,</span><span class="token string">'恒生指数'</span><span class="token punctuation">,</span><span class="token string">'日经225指数'</span><span class="token punctuation">,</span><span class="token string">'标普500指数'</span><span class="token punctuation">,</span><span class="token string">'沪深300指数'</span><span class="token punctuation">,</span><span class="token string">'法国CAC40指数'</span><span class="token punctuation">,</span><span class="token string">'深圳成指'</span><span class="token punctuation">,</span><span class="token string">'道琼斯指数'</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>3.集合的运算——交集<br>集合的交集是需要运用到“&amp;”符号或者运用intersection函数。<br><strong>例3.14集合的交集</strong></p><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">:</span> set1<span class="token operator">&amp;</span>set2Out<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token string">'日经225指数'</span><span class="token punctuation">,</span> <span class="token string">'道琼斯指数'</span><span class="token punctuation">}</span>In <span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">:</span> set1<span class="token punctuation">.</span>intersection<span class="token punctuation">(</span>set2<span class="token punctuation">)</span>Out<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token string">'日经225指数'</span><span class="token punctuation">,</span> <span class="token string">'道琼斯指数'</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>4.集合的运算——差集<br>集合的差集是需要运用到数学中的减号“-”。<br><strong>例3.15集合的差集</strong></p><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">:</span> set1<span class="token operator">-</span>set2 <span class="token comment" spellcheck="true">#集合set1对集合set2的差集</span>Out<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token string">'上证综指'</span><span class="token punctuation">,</span> <span class="token string">'恒生指数'</span><span class="token punctuation">,</span> <span class="token string">'深圳成指'</span><span class="token punctuation">}</span> In <span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">:</span> set2<span class="token operator">-</span>set1 <span class="token comment" spellcheck="true">#集合set2对集合set1的差集</span>Out<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token string">'德国DAX指数'</span><span class="token punctuation">,</span> <span class="token string">'标普500指数'</span><span class="token punctuation">,</span> <span class="token string">'沪深300指数'</span><span class="token punctuation">,</span> <span class="token string">'法国CAC40指数'</span><span class="token punctuation">}</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>5.集合的添加<br>在已经创建的集合中添加新的元素，需要运用add()函数，输出结果会进行自行排序。<br><strong>例3.16集合中元素的添加</strong></p><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span><span class="token punctuation">:</span> set1<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token string">'德国DAX指数'</span><span class="token punctuation">)</span>In <span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span><span class="token punctuation">:</span> set1Out<span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token string">'上证综指'</span><span class="token punctuation">,</span> <span class="token string">'德国DAX指数'</span><span class="token punctuation">,</span> <span class="token string">'恒生指数'</span><span class="token punctuation">,</span> <span class="token string">'日经225指数'</span><span class="token punctuation">,</span> <span class="token string">'深圳成指'</span><span class="token punctuation">,</span> <span class="token string">'道琼斯指数'</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>6.集合的删除<br>运用discard()函数删除已创建集合中的元素，输出结果会进行自动排序。<br><strong>例3.17集合中元素的删除</strong></p><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">14</span><span class="token punctuation">]</span><span class="token punctuation">:</span> set1<span class="token punctuation">.</span>discard<span class="token punctuation">(</span><span class="token string">'日经225指数'</span><span class="token punctuation">)</span>In <span class="token punctuation">[</span><span class="token number">15</span><span class="token punctuation">]</span><span class="token punctuation">:</span> set1Out<span class="token punctuation">[</span><span class="token number">15</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token string">'上证综指'</span><span class="token punctuation">,</span> <span class="token string">'德国DAX指数'</span><span class="token punctuation">,</span> <span class="token string">'恒生指数'</span><span class="token punctuation">,</span> <span class="token string">'深圳成指'</span><span class="token punctuation">,</span> <span class="token string">'道琼斯指数'</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="3-4字典"><a href="#3-4字典" class="headerlink" title="3.4字典"></a>3.4字典</h3><p>字典的形式如下：变量={键1：值1，键2：值2，键3：值3， …}。字典的3个特征：1.是字典中的元素必须以键（key）和值（value）的形式成对出现，也就是所谓的键-值存储；2.键不可以重复，但是值可以重复；3.键不可以修改，但是值可以修改，并且可以是任意的数据类型。<br>1.字典的创建<br>字典的创建有两种方法：一是直接法，就是一次输入全部的键与值；二是间接法，就是先创建一个空字典，然后逐队输入键与值。<br><strong>例3.18字典的创建</strong></p><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">:</span> dict1 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'指数名称'</span><span class="token punctuation">:</span><span class="token string">'沪深300'</span><span class="token punctuation">,</span><span class="token string">'证券代码'</span><span class="token punctuation">:</span><span class="token string">'000300'</span><span class="token punctuation">,</span><span class="token string">'交易日期'</span><span class="token punctuation">:</span><span class="token string">'2019-01-08'</span><span class="token punctuation">,</span><span class="token string">'涨跌幅'</span><span class="token punctuation">:</span><span class="token string">'-0.0022'</span><span class="token punctuation">}</span> <span class="token comment" spellcheck="true">#直接法创建</span>In <span class="token punctuation">[</span><span class="token number">17</span><span class="token punctuation">]</span><span class="token punctuation">:</span> dict1Out<span class="token punctuation">[</span><span class="token number">17</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token string">'指数名称'</span><span class="token punctuation">:</span> <span class="token string">'沪深300'</span><span class="token punctuation">,</span> <span class="token string">'证券代码'</span><span class="token punctuation">:</span> <span class="token string">'000300'</span><span class="token punctuation">,</span> <span class="token string">'交易日期'</span><span class="token punctuation">:</span> <span class="token string">'2019-01-08'</span><span class="token punctuation">,</span> <span class="token string">'涨跌幅'</span><span class="token punctuation">:</span> <span class="token string">'-0.0022'</span><span class="token punctuation">}</span>In <span class="token punctuation">[</span><span class="token number">18</span><span class="token punctuation">]</span><span class="token punctuation">:</span> type<span class="token punctuation">(</span>dict1<span class="token punctuation">)</span>Out<span class="token punctuation">[</span><span class="token number">18</span><span class="token punctuation">]</span><span class="token punctuation">:</span> dictIn <span class="token punctuation">[</span><span class="token number">19</span><span class="token punctuation">]</span><span class="token punctuation">:</span> dict2<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token comment" spellcheck="true">#间接法创建</span>In <span class="token punctuation">[</span><span class="token number">22</span><span class="token punctuation">]</span><span class="token punctuation">:</span> dict2<span class="token punctuation">[</span><span class="token string">'指数名称'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'沪深300指数'</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span> dict2<span class="token punctuation">[</span><span class="token string">'证券代码'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'000300'</span>   <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span> dict2<span class="token punctuation">[</span><span class="token string">'交易日期'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'2019-01-08'</span>   <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span> dict2<span class="token punctuation">[</span><span class="token string">'涨跌幅'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">0.0022</span>In <span class="token punctuation">[</span><span class="token number">23</span><span class="token punctuation">]</span><span class="token punctuation">:</span> dict2Out<span class="token punctuation">[</span><span class="token number">23</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token string">'指数名称'</span><span class="token punctuation">:</span> <span class="token string">'沪深300指数'</span><span class="token punctuation">,</span> <span class="token string">'证券代码'</span><span class="token punctuation">:</span> <span class="token string">'000300'</span><span class="token punctuation">,</span> <span class="token string">'交易日期'</span><span class="token punctuation">:</span> <span class="token string">'2019-01-08'</span><span class="token punctuation">,</span> <span class="token string">'涨跌幅'</span><span class="token punctuation">:</span> <span class="token string">'-0.0022'</span><span class="token punctuation">}</span>In <span class="token punctuation">[</span><span class="token number">24</span><span class="token punctuation">]</span><span class="token punctuation">:</span> type<span class="token punctuation">(</span>dict2<span class="token punctuation">)</span>Out<span class="token punctuation">[</span><span class="token number">24</span><span class="token punctuation">]</span><span class="token punctuation">:</span> dict<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>2.字典的访问<br>通过keys()函数访问并输出字典中的全部键，用values()函数访问并输出字典中的全部值。<br><strong>例3.19字典的访问</strong></p><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">25</span><span class="token punctuation">]</span><span class="token punctuation">:</span> dict1<span class="token punctuation">.</span>keys<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">#输出全部键</span>Out<span class="token punctuation">[</span><span class="token number">25</span><span class="token punctuation">]</span><span class="token punctuation">:</span> dict_keys<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'指数名称'</span><span class="token punctuation">,</span> <span class="token string">'证券代码'</span><span class="token punctuation">,</span> <span class="token string">'交易日期'</span><span class="token punctuation">,</span> <span class="token string">'涨跌幅'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>In <span class="token punctuation">[</span><span class="token number">26</span><span class="token punctuation">]</span><span class="token punctuation">:</span> dict1<span class="token punctuation">.</span>values<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">#输出全部值</span>Out<span class="token punctuation">[</span><span class="token number">26</span><span class="token punctuation">]</span><span class="token punctuation">:</span> dict_values<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'沪深300'</span><span class="token punctuation">,</span> <span class="token string">'000300'</span><span class="token punctuation">,</span> <span class="token string">'2019-01-08'</span><span class="token punctuation">,</span> <span class="token string">'-0.0022'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>通过items()函数遍历字典的全部元素，将字典中的每个元素（即每队键与值）组成一个元组并放在列表中输出。<br><strong>例3.20items()函数</strong></p><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">27</span><span class="token punctuation">]</span><span class="token punctuation">:</span> dict1<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span>Out<span class="token punctuation">[</span><span class="token number">27</span><span class="token punctuation">]</span><span class="token punctuation">:</span> dict_items<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token string">'指数名称'</span><span class="token punctuation">,</span> <span class="token string">'沪深300'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">'证券代码'</span><span class="token punctuation">,</span> <span class="token string">'000300'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">'交易日期'</span><span class="token punctuation">,</span> <span class="token string">'2019-01-08'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">'涨跌幅'</span><span class="token punctuation">,</span> <span class="token string">'-0.0022'</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>仅仅是查询每个键对应的值，可以直接在括号中输入键码的方式完成。<br><strong>例3.21键码的查询</strong></p><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">28</span><span class="token punctuation">]</span><span class="token punctuation">:</span> dict1<span class="token punctuation">[</span><span class="token string">'涨跌幅'</span><span class="token punctuation">]</span>Out<span class="token punctuation">[</span><span class="token number">28</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token string">'-0.0022'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>3.字典的修改<br><strong>例3.22字典的修改</strong></p><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">29</span><span class="token punctuation">]</span><span class="token punctuation">:</span> dict1<span class="token punctuation">[</span><span class="token string">'交易日期'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'2019-01-07'</span>   <span class="token comment" spellcheck="true">#将交易日期“2019-01-08”修改为“2019-01-07”</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span> dict1<span class="token punctuation">[</span><span class="token string">'涨跌幅'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0.0061</span> <span class="token comment" spellcheck="true">#将涨跌幅-0.22%修改为0.61%</span>In <span class="token punctuation">[</span><span class="token number">30</span><span class="token punctuation">]</span><span class="token punctuation">:</span> dict1Out<span class="token punctuation">[</span><span class="token number">30</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token string">'指数名称'</span><span class="token punctuation">:</span> <span class="token string">'沪深300'</span><span class="token punctuation">,</span> <span class="token string">'证券代码'</span><span class="token punctuation">:</span> <span class="token string">'000300'</span><span class="token punctuation">,</span> <span class="token string">'交易日期'</span><span class="token punctuation">:</span> <span class="token string">'2019-01-07'</span><span class="token punctuation">,</span> <span class="token string">'涨跌幅'</span><span class="token punctuation">:</span> <span class="token number">0.0061</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>在已创建的字典中，新增加键与值，可以运用update()函数。<br><strong>3.23例26update()的演示</strong></p><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">31</span><span class="token punctuation">]</span><span class="token punctuation">:</span> dict1<span class="token punctuation">.</span>update<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">'收盘价'</span><span class="token punctuation">:</span><span class="token number">3054.3</span><span class="token punctuation">,</span><span class="token string">'成交额（亿元）'</span><span class="token punctuation">:</span><span class="token number">1057.04</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#新增收盘价和成交额两个键值对，注意外面是小括号，里面是大括号</span>In <span class="token punctuation">[</span><span class="token number">32</span><span class="token punctuation">]</span><span class="token punctuation">:</span> dict1Out<span class="token punctuation">[</span><span class="token number">32</span><span class="token punctuation">]</span><span class="token punctuation">:</span><span class="token punctuation">{</span><span class="token string">'指数名称'</span><span class="token punctuation">:</span> <span class="token string">'沪深300'</span><span class="token punctuation">,</span><span class="token string">'证券代码'</span><span class="token punctuation">:</span> <span class="token string">'000300'</span><span class="token punctuation">,</span><span class="token string">'交易日期'</span><span class="token punctuation">:</span> <span class="token string">'2019-01-07'</span><span class="token punctuation">,</span><span class="token string">'涨跌幅'</span><span class="token punctuation">:</span> <span class="token number">0.0061</span><span class="token punctuation">,</span><span class="token string">'收盘价'</span><span class="token punctuation">:</span> <span class="token number">3054.3</span><span class="token punctuation">,</span><span class="token string">'成交额（亿元）'</span><span class="token punctuation">:</span> <span class="token number">1057.04</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>在已经创建的字典中，删除相应的键与值，用del命令。<br><strong>例3.24del命令演示</strong></p><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">33</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token keyword">del</span> dict1<span class="token punctuation">[</span><span class="token string">'证券代码'</span><span class="token punctuation">]</span> <span class="token comment" spellcheck="true">#删除字典中证券代码</span>In <span class="token punctuation">[</span><span class="token number">34</span><span class="token punctuation">]</span><span class="token punctuation">:</span> dict1Out<span class="token punctuation">[</span><span class="token number">34</span><span class="token punctuation">]</span><span class="token punctuation">:</span><span class="token punctuation">{</span><span class="token string">'指数名称'</span><span class="token punctuation">:</span> <span class="token string">'沪深300'</span><span class="token punctuation">,</span><span class="token string">'交易日期'</span><span class="token punctuation">:</span> <span class="token string">'2019-01-07'</span><span class="token punctuation">,</span><span class="token string">'涨跌幅'</span><span class="token punctuation">:</span> <span class="token number">0.0061</span><span class="token punctuation">,</span><span class="token string">'收盘价'</span><span class="token punctuation">:</span> <span class="token number">3054.3</span><span class="token punctuation">,</span><span class="token string">'成交额（亿元）'</span><span class="token punctuation">:</span> <span class="token number">1057.04</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="4-Python的运算符号"><a href="#4-Python的运算符号" class="headerlink" title="4.Python的运算符号"></a>4.Python的运算符号</h2><p>Python中的运算包括算术运算、关系运算、赋值运算、逻辑运算。</p><h3 id="4-1基本算术运算符号"><a href="#4-1基本算术运算符号" class="headerlink" title="4.1基本算术运算符号"></a>4.1基本算术运算符号</h3><p>Python中的算术运算符<br>| 运算符号 | 描述                 | 示例     |<br>| ——– | ——————– | ——– |<br>| +        | 加法                 | 1+1→2    |<br>| -        | 减法                 | 1-1→0    |<br>| *        | 乘法                 | 1* 2→2   |<br>| /        | 除法                 | 1/2→0.5  |<br>| **       | 幂运算               | 2 ** 3→8 |<br>| %        | 模运算（取余数）     | 5%2→1    |<br>| //       | 整除（商的整数部分） | 9//4→2   |</p><p><strong>例4.1加法运算</strong></p><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span> a <span class="token operator">=</span> <span class="token number">2</span>   <span class="token comment" spellcheck="true">#整型</span>In <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">:</span> b <span class="token operator">=</span> <span class="token number">5</span>   <span class="token comment" spellcheck="true">#整型</span>In <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">:</span> c <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">.</span>  <span class="token comment" spellcheck="true">#浮点型</span>In <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">:</span> d<span class="token operator">=</span><span class="token number">3.8</span>   <span class="token comment" spellcheck="true">#浮点型</span>In <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">:</span> e<span class="token operator">=</span><span class="token number">6.95</span>  <span class="token comment" spellcheck="true">#浮点型</span>In <span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">:</span> a <span class="token operator">+</span> b   <span class="token comment" spellcheck="true">#整数与整数相加</span>Out<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">7</span>       <span class="token comment" spellcheck="true">#结果为整型</span>In <span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">:</span> a <span class="token operator">+</span> c   <span class="token comment" spellcheck="true">#整数与浮点型相加</span>Out<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">3.0</span>     <span class="token comment" spellcheck="true">#结果为浮点型</span>In <span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">:</span> d <span class="token operator">+</span> e   <span class="token comment" spellcheck="true">#浮点型与浮点型相加</span>Out<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">10.75</span>  <span class="token comment" spellcheck="true">#结果为浮点型</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>例4.2减法的运算</strong></p><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">:</span> a <span class="token operator">-</span> b   <span class="token comment" spellcheck="true">#整型与整型相减</span>Out<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token operator">-</span><span class="token number">3</span>     <span class="token comment" spellcheck="true">#结果为整型</span>In <span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">:</span> a <span class="token operator">-</span> c  <span class="token comment" spellcheck="true">#整型与浮点型相减</span>Out<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">1.0</span>   <span class="token comment" spellcheck="true">#结果为浮点型</span>In <span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span><span class="token punctuation">:</span> a <span class="token operator">-</span> e Out<span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token operator">-</span><span class="token number">4.95</span>In <span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span><span class="token punctuation">:</span> d <span class="token operator">-</span> e <span class="token comment" spellcheck="true">#浮点型与浮点型相减</span>Out<span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token operator">-</span><span class="token number">3.1500000000000004</span>    <span class="token comment" spellcheck="true">#结果为浮点型</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>可以运用round()函数控制输出结果为小数的小数位数，round()函数中的第一个参数代表了需要输出的结果，第二个参数代表输出结果的小数位数。</p><p><strong>例4.3round()函数的例子</strong></p><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">]</span><span class="token punctuation">:</span> round<span class="token punctuation">(</span>d<span class="token operator">-</span>e<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span>   <span class="token comment" spellcheck="true">#d-e输出结果保留2位小数</span>Out<span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token operator">-</span><span class="token number">3.15</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><strong>例4.4乘法的运算</strong></p><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">14</span><span class="token punctuation">]</span><span class="token punctuation">:</span> a <span class="token operator">*</span> b  <span class="token comment" spellcheck="true">#整型与整型相乘</span>Out<span class="token punctuation">[</span><span class="token number">14</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">10</span>    <span class="token comment" spellcheck="true">#结果为整型</span>In <span class="token punctuation">[</span><span class="token number">15</span><span class="token punctuation">]</span><span class="token punctuation">:</span> a <span class="token operator">*</span> c  <span class="token comment" spellcheck="true">#整型与浮点型相乘</span>Out<span class="token punctuation">[</span><span class="token number">15</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">2.0</span>   <span class="token comment" spellcheck="true">#结果为浮点型</span>In <span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">:</span> d <span class="token operator">*</span> e  <span class="token comment" spellcheck="true">#浮点型与浮点型相乘</span>Out<span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">26.41</span> <span class="token comment" spellcheck="true">#结果为浮点型</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>例4.5幂运算</strong></p><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">17</span><span class="token punctuation">]</span><span class="token punctuation">:</span> a <span class="token operator">**</span> b     <span class="token comment" spellcheck="true">#整型与整型的幂运算</span>Out<span class="token punctuation">[</span><span class="token number">17</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">32</span>        <span class="token comment" spellcheck="true">#结果为整型</span>In <span class="token punctuation">[</span><span class="token number">18</span><span class="token punctuation">]</span><span class="token punctuation">:</span> b <span class="token operator">**</span> a     <span class="token comment" spellcheck="true">#整型与整型的幂运算</span>Out<span class="token punctuation">[</span><span class="token number">18</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">25</span>        <span class="token comment" spellcheck="true">#结果为整型</span>In <span class="token punctuation">[</span><span class="token number">19</span><span class="token punctuation">]</span><span class="token punctuation">:</span> a <span class="token operator">**</span> c     <span class="token comment" spellcheck="true">#整型与浮点型的幂运算</span>Out<span class="token punctuation">[</span><span class="token number">19</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">2.0</span>       <span class="token comment" spellcheck="true">#结果为浮点型</span>In <span class="token punctuation">[</span><span class="token number">20</span><span class="token punctuation">]</span><span class="token punctuation">:</span> d <span class="token operator">**</span> e     <span class="token comment" spellcheck="true">#浮点型与浮点型的幂运算</span>Out<span class="token punctuation">[</span><span class="token number">20</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">10702.765165970346</span>     <span class="token comment" spellcheck="true">#结果为浮点型</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>对于除法，得到的结果始终是浮点数。<br><strong>例4.6除法运算</strong></p><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">21</span><span class="token punctuation">]</span><span class="token punctuation">:</span> f <span class="token operator">=</span> <span class="token number">4</span>In <span class="token punctuation">[</span><span class="token number">23</span><span class="token punctuation">]</span><span class="token punctuation">:</span> f <span class="token operator">/</span> a      <span class="token comment" spellcheck="true">#整型与整型相除</span>Out<span class="token punctuation">[</span><span class="token number">23</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">2.0</span>In <span class="token punctuation">[</span><span class="token number">24</span><span class="token punctuation">]</span><span class="token punctuation">:</span> b <span class="token operator">/</span> a     <span class="token comment" spellcheck="true">#整型与整型相除</span>Out<span class="token punctuation">[</span><span class="token number">24</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">2.5</span>In <span class="token punctuation">[</span><span class="token number">25</span><span class="token punctuation">]</span><span class="token punctuation">:</span> a <span class="token operator">/</span> c      <span class="token comment" spellcheck="true">#整型与浮点型相除</span>Out<span class="token punctuation">[</span><span class="token number">25</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">2.0</span>In <span class="token punctuation">[</span><span class="token number">26</span><span class="token punctuation">]</span><span class="token punctuation">:</span> e <span class="token operator">/</span> d      <span class="token comment" spellcheck="true">#浮点型与浮点型相除</span>Out<span class="token punctuation">[</span><span class="token number">26</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">1.8289473684210527</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>例4.7模运算（求余数）</strong></p><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">27</span><span class="token punctuation">]</span><span class="token punctuation">:</span> f <span class="token operator">%</span> aOut<span class="token punctuation">[</span><span class="token number">27</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">0</span>In <span class="token punctuation">[</span><span class="token number">28</span><span class="token punctuation">]</span><span class="token punctuation">:</span> b <span class="token operator">%</span> aOut<span class="token punctuation">[</span><span class="token number">28</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">1</span>In <span class="token punctuation">[</span><span class="token number">29</span><span class="token punctuation">]</span><span class="token punctuation">:</span> d <span class="token operator">%</span> aOut<span class="token punctuation">[</span><span class="token number">29</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">1.7999999999999998</span>In <span class="token punctuation">[</span><span class="token number">30</span><span class="token punctuation">]</span><span class="token punctuation">:</span> d <span class="token operator">%</span> eOut<span class="token punctuation">[</span><span class="token number">30</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">3.8</span>In <span class="token punctuation">[</span><span class="token number">31</span><span class="token punctuation">]</span><span class="token punctuation">:</span> e <span class="token operator">%</span> dOut<span class="token punctuation">[</span><span class="token number">31</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">3.1500000000000004</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>整除即只输出商的整数部分，并且是向下取整（或者是数轴上向左取整）。如果除数和被除数均是整数，输出的结果就是整型；如果除数或者被除数只要有一个是浮点型， 输出的结果是浮点型的整数。</p><p><strong>例4.8整除运算</strong></p><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">32</span><span class="token punctuation">]</span><span class="token punctuation">:</span> b <span class="token operator">//</span> a     <span class="token comment" spellcheck="true">#均是整型</span>Out<span class="token punctuation">[</span><span class="token number">32</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">2</span>         <span class="token comment" spellcheck="true">#结果是整型</span>In <span class="token punctuation">[</span><span class="token number">33</span><span class="token punctuation">]</span><span class="token punctuation">:</span> b <span class="token operator">//</span> d     <span class="token comment" spellcheck="true">#一个整型一个浮点型</span>Out<span class="token punctuation">[</span><span class="token number">33</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">1.0</span>       <span class="token comment" spellcheck="true">#结果是浮点型的整数</span>In <span class="token punctuation">[</span><span class="token number">34</span><span class="token punctuation">]</span><span class="token punctuation">:</span> e <span class="token operator">//</span> a     <span class="token comment" spellcheck="true">#一个整型一个浮点型</span>Out<span class="token punctuation">[</span><span class="token number">34</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">3.0</span>       <span class="token comment" spellcheck="true">#结果是浮点型的整数</span>In <span class="token punctuation">[</span><span class="token number">35</span><span class="token punctuation">]</span><span class="token punctuation">:</span> e <span class="token operator">//</span> d     <span class="token comment" spellcheck="true">#均是浮点型</span>Out<span class="token punctuation">[</span><span class="token number">35</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">1.0</span>       <span class="token comment" spellcheck="true">#结果是浮点型的整数</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-2关系运算符"><a href="#4-2关系运算符" class="headerlink" title="4.2关系运算符"></a>4.2关系运算符</h3><table><thead><tr><th align="center">运算符</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">==</td><td align="center">相等</td></tr><tr><td align="center">！=</td><td align="center">不等于</td></tr><tr><td align="center">&gt;</td><td align="center">大于</td></tr><tr><td align="center">&gt;=</td><td align="center">大于等于</td></tr><tr><td align="center">&lt;</td><td align="center">小于</td></tr><tr><td align="center">&lt;=</td><td align="center">小于等于</td></tr><tr><td align="center"><strong>注意:</strong> 在Python中，用双等号“==”表示等于，用单等号“=”则是赋值符号，关系运算符号的输出结果是True和False就是布尔值（bool）。</td><td align="center"></td></tr></tbody></table><h3 id="4-3赋值运算符"><a href="#4-3赋值运算符" class="headerlink" title="4.3赋值运算符"></a>4.3赋值运算符</h3><table><thead><tr><th>运算法</th><th align="center">描述</th><th>举例</th></tr></thead><tbody><tr><td>+=</td><td align="center">加法赋值运算符，等价于y=y+x 注；相当于对等式左边的变量y进行新的赋值</td><td>y+=x</td></tr><tr><td>-=</td><td align="center">减法赋值运算符，等价于y=y-x</td><td>y-=x</td></tr><tr><td>* =</td><td align="center">乘法赋值运算符，等价于y=y* x</td><td>y*=x</td></tr><tr><td>/=</td><td align="center">除法赋值运算符，等价于y=y/x</td><td>y/=x</td></tr><tr><td>** =</td><td align="center">幂赋值运算符，等价于y=y** x</td><td>y**=x</td></tr><tr><td>%=</td><td align="center">模赋值运算符，等价于y=y% x</td><td>y%=x</td></tr><tr><td>//=</td><td align="center">整除赋值运算符，等价于y=y//x</td><td>y//=x</td></tr></tbody></table><h3 id="4-4成员运算符"><a href="#4-4成员运算符" class="headerlink" title="4.4成员运算符"></a>4.4成员运算符</h3><p>Python的成员运算符号，可以判断一个元素是否在某一个列表中，可以判断一个字符是否属于某个字符串。<br>| 成员运算符 | 具体描述                                                     |<br>| ———- | ———————————————————— |<br>| in         | 如果一个变量在指定的另一个变量（列表、元组、字符串等）中找到相对应的值，则返回True,否则返回False。 |<br>| not in     | 如果一个变量在指定的另一个变量中没有找到相应的值，返回True,否则返回False。 |<br><strong>例4.9成员运算符例子</strong></p><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">36</span><span class="token punctuation">]</span><span class="token punctuation">:</span> a <span class="token operator">=</span> <span class="token number">1</span>In <span class="token punctuation">[</span><span class="token number">37</span><span class="token punctuation">]</span><span class="token punctuation">:</span> b <span class="token operator">=</span> <span class="token number">3</span>In <span class="token punctuation">[</span><span class="token number">38</span><span class="token punctuation">]</span><span class="token punctuation">:</span> c <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">]</span>In <span class="token punctuation">[</span><span class="token number">39</span><span class="token punctuation">]</span><span class="token punctuation">:</span> a <span class="token keyword">in</span> cOut<span class="token punctuation">[</span><span class="token number">39</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token boolean">True</span>In <span class="token punctuation">[</span><span class="token number">40</span><span class="token punctuation">]</span><span class="token punctuation">:</span> b <span class="token keyword">in</span> cOut<span class="token punctuation">[</span><span class="token number">40</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token boolean">False</span><span class="token comment" spellcheck="true"># 考察字符串是否在一个列表中</span>In <span class="token punctuation">[</span><span class="token number">41</span><span class="token punctuation">]</span><span class="token punctuation">:</span> d <span class="token operator">=</span> <span class="token string">'金融'</span>In <span class="token punctuation">[</span><span class="token number">42</span><span class="token punctuation">]</span><span class="token punctuation">:</span> e <span class="token operator">=</span> <span class="token string">'风险管理'</span>In <span class="token punctuation">[</span><span class="token number">43</span><span class="token punctuation">]</span><span class="token punctuation">:</span> f <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'finance'</span><span class="token punctuation">,</span><span class="token string">'风险管理'</span><span class="token punctuation">,</span><span class="token string">'波动率'</span><span class="token punctuation">]</span>In <span class="token punctuation">[</span><span class="token number">44</span><span class="token punctuation">]</span><span class="token punctuation">:</span> d <span class="token keyword">in</span> fOut<span class="token punctuation">[</span><span class="token number">44</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token boolean">False</span>In <span class="token punctuation">[</span><span class="token number">45</span><span class="token punctuation">]</span><span class="token punctuation">:</span> e <span class="token keyword">in</span> fOut<span class="token punctuation">[</span><span class="token number">45</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="5-Python的主要内置函数"><a href="#5-Python的主要内置函数" class="headerlink" title="5.Python的主要内置函数"></a>5.Python的主要内置函数</h2><p>Python内置函数是指直接调用而无需导入（import），是Python自带的函数，任何时候都可以直接使用。Python内置函数有很多，可以运用命令<code>dir(__builtins__)</code>(双下划线）查看。<br>** 例5.1Python的内置函数**</p><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">48</span><span class="token punctuation">]</span><span class="token punctuation">:</span> dir<span class="token punctuation">(</span>__builtins__<span class="token punctuation">)</span>Out<span class="token punctuation">[</span><span class="token number">48</span><span class="token punctuation">]</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">'ArithmeticError'</span><span class="token punctuation">,</span><span class="token string">'AssertionError'</span><span class="token punctuation">,</span><span class="token string">'AttributeError'</span><span class="token punctuation">,</span><span class="token string">'BaseException'</span><span class="token punctuation">,</span><span class="token string">'BlockingIOError'</span><span class="token punctuation">,</span><span class="token string">'BrokenPipeError'</span><span class="token punctuation">,</span><span class="token string">'BufferError'</span><span class="token punctuation">,</span><span class="token string">'BytesWarning'</span><span class="token punctuation">,</span><span class="token string">'ChildProcessError'</span><span class="token punctuation">,</span><span class="token string">'ConnectionAbortedError'</span><span class="token punctuation">,</span><span class="token string">'ConnectionError'</span><span class="token punctuation">,</span><span class="token string">'ConnectionRefusedError'</span><span class="token punctuation">,</span><span class="token string">'ConnectionResetError'</span><span class="token punctuation">,</span><span class="token string">'DeprecationWarning'</span><span class="token punctuation">,</span><span class="token string">'EOFError'</span><span class="token punctuation">,</span><span class="token string">'Ellipsis'</span><span class="token punctuation">,</span><span class="token string">'EnvironmentError'</span><span class="token punctuation">,</span><span class="token string">'Exception'</span><span class="token punctuation">,</span><span class="token string">'False'</span><span class="token punctuation">,</span><span class="token string">'FileExistsError'</span><span class="token punctuation">,</span><span class="token string">'FileNotFoundError'</span><span class="token punctuation">,</span><span class="token string">'FloatingPointError'</span><span class="token punctuation">,</span><span class="token string">'FutureWarning'</span><span class="token punctuation">,</span><span class="token string">'GeneratorExit'</span><span class="token punctuation">,</span><span class="token string">'IOError'</span><span class="token punctuation">,</span><span class="token string">'ImportError'</span><span class="token punctuation">,</span><span class="token string">'ImportWarning'</span><span class="token punctuation">,</span><span class="token string">'IndentationError'</span><span class="token punctuation">,</span><span class="token string">'IndexError'</span><span class="token punctuation">,</span><span class="token string">'InterruptedError'</span><span class="token punctuation">,</span><span class="token string">'IsADirectoryError'</span><span class="token punctuation">,</span><span class="token string">'KeyError'</span><span class="token punctuation">,</span><span class="token string">'KeyboardInterrupt'</span><span class="token punctuation">,</span><span class="token string">'LookupError'</span><span class="token punctuation">,</span><span class="token string">'MemoryError'</span><span class="token punctuation">,</span><span class="token string">'ModuleNotFoundError'</span><span class="token punctuation">,</span><span class="token string">'NameError'</span><span class="token punctuation">,</span><span class="token string">'None'</span><span class="token punctuation">,</span><span class="token string">'NotADirectoryError'</span><span class="token punctuation">,</span><span class="token string">'NotImplemented'</span><span class="token punctuation">,</span><span class="token string">'NotImplementedError'</span><span class="token punctuation">,</span><span class="token string">'OSError'</span><span class="token punctuation">,</span><span class="token string">'OverflowError'</span><span class="token punctuation">,</span><span class="token string">'PendingDeprecationWarning'</span><span class="token punctuation">,</span><span class="token string">'PermissionError'</span><span class="token punctuation">,</span><span class="token string">'ProcessLookupError'</span><span class="token punctuation">,</span><span class="token string">'RecursionError'</span><span class="token punctuation">,</span><span class="token string">'ReferenceError'</span><span class="token punctuation">,</span><span class="token string">'ResourceWarning'</span><span class="token punctuation">,</span><span class="token string">'RuntimeError'</span><span class="token punctuation">,</span><span class="token string">'RuntimeWarning'</span><span class="token punctuation">,</span><span class="token string">'StopAsyncIteration'</span><span class="token punctuation">,</span><span class="token string">'StopIteration'</span><span class="token punctuation">,</span><span class="token string">'SyntaxError'</span><span class="token punctuation">,</span><span class="token string">'SyntaxWarning'</span><span class="token punctuation">,</span><span class="token string">'SystemError'</span><span class="token punctuation">,</span><span class="token string">'SystemExit'</span><span class="token punctuation">,</span><span class="token string">'TabError'</span><span class="token punctuation">,</span><span class="token string">'TimeoutError'</span><span class="token punctuation">,</span><span class="token string">'True'</span><span class="token punctuation">,</span><span class="token string">'TypeError'</span><span class="token punctuation">,</span><span class="token string">'UnboundLocalError'</span><span class="token punctuation">,</span><span class="token string">'UnicodeDecodeError'</span><span class="token punctuation">,</span><span class="token string">'UnicodeEncodeError'</span><span class="token punctuation">,</span><span class="token string">'UnicodeError'</span><span class="token punctuation">,</span><span class="token string">'UnicodeTranslateError'</span><span class="token punctuation">,</span><span class="token string">'UnicodeWarning'</span><span class="token punctuation">,</span><span class="token string">'UserWarning'</span><span class="token punctuation">,</span><span class="token string">'ValueError'</span><span class="token punctuation">,</span><span class="token string">'Warning'</span><span class="token punctuation">,</span><span class="token string">'WindowsError'</span><span class="token punctuation">,</span><span class="token string">'ZeroDivisionError'</span><span class="token punctuation">,</span><span class="token string">'__IPYTHON__'</span><span class="token punctuation">,</span><span class="token string">'__build_class__'</span><span class="token punctuation">,</span><span class="token string">'__debug__'</span><span class="token punctuation">,</span><span class="token string">'__doc__'</span><span class="token punctuation">,</span><span class="token string">'__import__'</span><span class="token punctuation">,</span><span class="token string">'__loader__'</span><span class="token punctuation">,</span><span class="token string">'__name__'</span><span class="token punctuation">,</span><span class="token string">'__package__'</span><span class="token punctuation">,</span><span class="token string">'__spec__'</span><span class="token punctuation">,</span><span class="token string">'abs'</span><span class="token punctuation">,</span><span class="token string">'all'</span><span class="token punctuation">,</span><span class="token string">'any'</span><span class="token punctuation">,</span><span class="token string">'ascii'</span><span class="token punctuation">,</span><span class="token string">'bin'</span><span class="token punctuation">,</span><span class="token string">'bool'</span><span class="token punctuation">,</span><span class="token string">'breakpoint'</span><span class="token punctuation">,</span><span class="token string">'bytearray'</span><span class="token punctuation">,</span><span class="token string">'bytes'</span><span class="token punctuation">,</span><span class="token string">'callable'</span><span class="token punctuation">,</span><span class="token string">'cell_count'</span><span class="token punctuation">,</span><span class="token string">'chr'</span><span class="token punctuation">,</span><span class="token string">'classmethod'</span><span class="token punctuation">,</span><span class="token string">'compile'</span><span class="token punctuation">,</span><span class="token string">'complex'</span><span class="token punctuation">,</span><span class="token string">'copyright'</span><span class="token punctuation">,</span><span class="token string">'credits'</span><span class="token punctuation">,</span><span class="token string">'debugcell'</span><span class="token punctuation">,</span><span class="token string">'debugfile'</span><span class="token punctuation">,</span><span class="token string">'delattr'</span><span class="token punctuation">,</span><span class="token string">'dict'</span><span class="token punctuation">,</span><span class="token string">'dir'</span><span class="token punctuation">,</span><span class="token string">'display'</span><span class="token punctuation">,</span><span class="token string">'divmod'</span><span class="token punctuation">,</span><span class="token string">'enumerate'</span><span class="token punctuation">,</span><span class="token string">'eval'</span><span class="token punctuation">,</span><span class="token string">'exec'</span><span class="token punctuation">,</span><span class="token string">'filter'</span><span class="token punctuation">,</span><span class="token string">'float'</span><span class="token punctuation">,</span><span class="token string">'format'</span><span class="token punctuation">,</span><span class="token string">'frozenset'</span><span class="token punctuation">,</span><span class="token string">'get_ipython'</span><span class="token punctuation">,</span><span class="token string">'getattr'</span><span class="token punctuation">,</span><span class="token string">'globals'</span><span class="token punctuation">,</span><span class="token string">'hasattr'</span><span class="token punctuation">,</span><span class="token string">'hash'</span><span class="token punctuation">,</span><span class="token string">'help'</span><span class="token punctuation">,</span><span class="token string">'hex'</span><span class="token punctuation">,</span><span class="token string">'id'</span><span class="token punctuation">,</span><span class="token string">'input'</span><span class="token punctuation">,</span><span class="token string">'int'</span><span class="token punctuation">,</span><span class="token string">'isinstance'</span><span class="token punctuation">,</span><span class="token string">'issubclass'</span><span class="token punctuation">,</span><span class="token string">'iter'</span><span class="token punctuation">,</span><span class="token string">'len'</span><span class="token punctuation">,</span><span class="token string">'license'</span><span class="token punctuation">,</span><span class="token string">'list'</span><span class="token punctuation">,</span><span class="token string">'locals'</span><span class="token punctuation">,</span><span class="token string">'map'</span><span class="token punctuation">,</span><span class="token string">'max'</span><span class="token punctuation">,</span><span class="token string">'memoryview'</span><span class="token punctuation">,</span><span class="token string">'min'</span><span class="token punctuation">,</span><span class="token string">'next'</span><span class="token punctuation">,</span><span class="token string">'object'</span><span class="token punctuation">,</span><span class="token string">'oct'</span><span class="token punctuation">,</span><span class="token string">'open'</span><span class="token punctuation">,</span><span class="token string">'ord'</span><span class="token punctuation">,</span><span class="token string">'pow'</span><span class="token punctuation">,</span><span class="token string">'print'</span><span class="token punctuation">,</span><span class="token string">'property'</span><span class="token punctuation">,</span><span class="token string">'range'</span><span class="token punctuation">,</span><span class="token string">'repr'</span><span class="token punctuation">,</span><span class="token string">'reversed'</span><span class="token punctuation">,</span><span class="token string">'round'</span><span class="token punctuation">,</span><span class="token string">'runcell'</span><span class="token punctuation">,</span><span class="token string">'runfile'</span><span class="token punctuation">,</span><span class="token string">'set'</span><span class="token punctuation">,</span><span class="token string">'setattr'</span><span class="token punctuation">,</span><span class="token string">'slice'</span><span class="token punctuation">,</span><span class="token string">'sorted'</span><span class="token punctuation">,</span><span class="token string">'staticmethod'</span><span class="token punctuation">,</span><span class="token string">'str'</span><span class="token punctuation">,</span><span class="token string">'sum'</span><span class="token punctuation">,</span><span class="token string">'super'</span><span class="token punctuation">,</span><span class="token string">'tuple'</span><span class="token punctuation">,</span><span class="token string">'type'</span><span class="token punctuation">,</span><span class="token string">'vars'</span><span class="token punctuation">,</span><span class="token string">'zip'</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>Python的内置函数从abs开始一直到到zip结束，共计75个。<br>可以用help()函数查询各种函数的具体用法，输入的格式就是help()的括号内输入需要查询的函数。<br><strong>例5.2Python函数的查询</strong></p><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">49</span><span class="token punctuation">]</span><span class="token punctuation">:</span> help<span class="token punctuation">(</span>zip<span class="token punctuation">)</span>Help on <span class="token keyword">class</span> <span class="token class-name">zip</span> <span class="token keyword">in</span> module builtins<span class="token punctuation">:</span><span class="token keyword">class</span> <span class="token class-name">zip</span><span class="token punctuation">(</span>object<span class="token punctuation">)</span><span class="token operator">|</span> zip<span class="token punctuation">(</span><span class="token operator">*</span>iterables<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">-</span><span class="token operator">></span> zip object<span class="token operator">|</span><span class="token operator">|</span> Return a zip object whose <span class="token punctuation">.</span>__next__<span class="token punctuation">(</span><span class="token punctuation">)</span> method returns a tuple where<span class="token operator">|</span> the i<span class="token operator">-</span>th element comes <span class="token keyword">from</span> the i<span class="token operator">-</span>th iterable argument<span class="token punctuation">.</span> The <span class="token punctuation">.</span>__next__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">|</span> method continues until the shortest iterable <span class="token keyword">in</span> the argument sequence<span class="token operator">|</span> <span class="token keyword">is</span> exhausted <span class="token operator">and</span> then it raises StopIteration<span class="token punctuation">.</span><span class="token operator">|</span><span class="token operator">|</span> Methods defined here<span class="token punctuation">:</span><span class="token operator">|</span><span class="token operator">|</span> __getattribute__<span class="token punctuation">(</span>self<span class="token punctuation">,</span> name<span class="token punctuation">,</span> <span class="token operator">/</span><span class="token punctuation">)</span><span class="token operator">|</span>Return getattr<span class="token punctuation">(</span>self<span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token operator">|</span><span class="token operator">|</span> __iter__<span class="token punctuation">(</span>self<span class="token punctuation">,</span> <span class="token operator">/</span><span class="token punctuation">)</span><span class="token operator">|</span> Implement iter<span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token operator">|</span><span class="token operator">|</span> __next__<span class="token punctuation">(</span>self<span class="token punctuation">,</span> <span class="token operator">/</span><span class="token punctuation">)</span><span class="token operator">|</span> Implement next<span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token operator">|</span><span class="token operator">|</span> __reduce__<span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token operator">|</span> Return state information <span class="token keyword">for</span> pickling<span class="token punctuation">.</span><span class="token operator">|</span><span class="token operator">|</span> <span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">|</span> Static methods defined here<span class="token punctuation">:</span><span class="token operator">|</span><span class="token operator">|</span> __new__<span class="token punctuation">(</span><span class="token operator">*</span>args<span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span> <span class="token keyword">from</span> builtins<span class="token punctuation">.</span>type<span class="token operator">|</span> Create <span class="token operator">and</span> <span class="token keyword">return</span> a new object<span class="token punctuation">.</span> See help<span class="token punctuation">(</span>type<span class="token punctuation">)</span> <span class="token keyword">for</span> acc<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="6-自定义函数"><a href="#6-自定义函数" class="headerlink" title="6.自定义函数"></a>6.自定义函数</h2><p>在Python中定义函数有两种方式：一种是利用def 语法构建新的函数，另一种是直接运用lambda函数构建新的函数。</p><h3 id="6-1运用def语法"><a href="#6-1运用def语法" class="headerlink" title="6.1运用def语法"></a>6.1运用def语法</h3><p>运用def语法时，函数的基本框架如下：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">def</span> 函数名（参数）<span class="token punctuation">:</span>    <span class="token triple-quoted-string string">'''函数说明文档'''</span>    函数主体    <span class="token keyword">return</span> 返回对象<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><strong>注意：</strong>函数说明文档可以选择选择不写。此外，要注意缩进，具体就是在输入函数主体以及return的前面要缩进，在Python中的缩进是运用 Tab键来完成，但是在IPython中会自动进行缩进。<br><strong>例6.1利用def(）函数计算算术平均收益率</strong></p><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token keyword">def</span> <span class="token function">mean_a</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true">#定义mean_a()函数求解5日涨跌幅的算术平均收益率</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">'''定义一个求解算术平均收益率的函数      ...:     r:代表收益率的一个列表'''</span>       <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>     total <span class="token operator">=</span> sum<span class="token punctuation">(</span>r<span class="token punctuation">)</span>      <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>     <span class="token keyword">return</span> total<span class="token operator">/</span>len<span class="token punctuation">(</span>r<span class="token punctuation">)</span>In <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">:</span> list1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">0.0054</span><span class="token punctuation">,</span><span class="token number">0.0077</span><span class="token punctuation">,</span><span class="token number">0.0024</span><span class="token punctuation">,</span><span class="token number">0.0087</span><span class="token punctuation">,</span><span class="token number">0.0038</span><span class="token punctuation">]</span>In <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">:</span> mean_a<span class="token punctuation">(</span>r <span class="token operator">=</span> list1<span class="token punctuation">)</span>Out<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">0.00344</span>In <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">:</span> sum<span class="token punctuation">(</span>list1<span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">5</span>    <span class="token comment" spellcheck="true">#第二种方法计算算术平均收益率</span>Out<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">0.00344</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="6-2运用lambda函数"><a href="#6-2运用lambda函数" class="headerlink" title="6.2运用lambda函数"></a>6.2运用lambda函数</h3><p> lambda（）函数在Python中被称为匿名函数，具体的函数基本格式如下：<br> 函数名 = lambda 参数：表达式<br> 运用lambda()函数时，撰写的代码通常控制在一行之内，因此可以用lambda写相对简单 函数，或者是复杂函数的一个组成部分。<br><strong>例6.2利用lambda函数计算算术平均收益率</strong></p><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">:</span> mean_A <span class="token operator">=</span> <span class="token keyword">lambda</span> r<span class="token punctuation">:</span> sum<span class="token punctuation">(</span>r<span class="token punctuation">)</span><span class="token operator">/</span>len<span class="token punctuation">(</span>r<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">#用lambda()定义函数</span>In <span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">:</span> mean_A<span class="token punctuation">(</span>r <span class="token operator">=</span> list1<span class="token punctuation">)</span>Out<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">0.00344</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="7-Python的语句"><a href="#7-Python的语句" class="headerlink" title="7.Python的语句"></a>7.Python的语句</h2><p>在Python中，除了顺序语句之外，还有条件语句和循环语句两大类，可以单独运用，也可以结合运用。</p><h3 id="7-1条件语句"><a href="#7-1条件语句" class="headerlink" title="7.1条件语句"></a>7.1条件语句</h3><p>条件语句是通过一条或多条语句的执行结果（True或False）来决定执行的代码块。条件语句的基本语法框架分为以下三大类型：<br>第1种类型是只有一个判断条件，即单分支。</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">if</span> 判断语句<span class="token punctuation">:</span>    执行语句 <span class="token number">1</span><span class="token keyword">else</span><span class="token punctuation">:</span>    执行语句 <span class="token number">2</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>第二种类型是有两个判断条件，即双分支。</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">if</span> 判断语句 <span class="token number">1</span><span class="token punctuation">:</span>     执行语句 <span class="token number">1</span><span class="token keyword">elif</span> 判断语句 <span class="token number">2</span><span class="token punctuation">:</span>     执行语句 <span class="token number">2</span><span class="token keyword">else</span><span class="token punctuation">:</span>     执行语句 <span class="token number">3</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第三种类型是有3个或3个以上的判断条件，即多分支。</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">if</span> 判断语句 <span class="token number">1</span><span class="token punctuation">:</span>     执行语句 <span class="token number">1</span><span class="token keyword">elif</span> 判断语句 <span class="token number">2</span><span class="token punctuation">:</span>     执行语句 <span class="token number">2</span><span class="token keyword">elif</span> 判断语句 <span class="token number">3</span><span class="token punctuation">:</span>     执行语句 <span class="token number">3</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token keyword">elif</span> 判断语句 n<span class="token punctuation">:</span>     执行语句 n<span class="token keyword">else</span><span class="token punctuation">:</span>    执行语句 n<span class="token operator">+</span><span class="token number">1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>** 例7.1只有一个判断条件**</p><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">:</span> r1 <span class="token operator">=</span> <span class="token number">0.024</span>     <span class="token comment" spellcheck="true"># 用于判断收益率是正的还是非正收益</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span> <span class="token keyword">if</span> r1 <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">:</span>   <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'正收益:'</span><span class="token punctuation">,</span>r1<span class="token punctuation">)</span>   <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span> <span class="token keyword">else</span><span class="token punctuation">:</span>   <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'非正收益:'</span><span class="token punctuation">,</span>r1<span class="token punctuation">)</span>正收益<span class="token punctuation">:</span> <span class="token number">0.024</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>例7.2运用两个条件</strong></p><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">:</span> r2 <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">0.0074</span>In <span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token keyword">if</span> r2 <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">:</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'正收益:'</span><span class="token punctuation">,</span>r2<span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>       <span class="token keyword">elif</span> r2 <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'零收益:'</span><span class="token punctuation">,</span>r2<span class="token punctuation">)</span>   <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>       <span class="token keyword">else</span><span class="token punctuation">:</span>   <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'负收益:'</span><span class="token punctuation">,</span>r2<span class="token punctuation">)</span>负收益<span class="token punctuation">:</span> <span class="token operator">-</span><span class="token number">0.0074</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="7-2循环语句"><a href="#7-2循环语句" class="headerlink" title="7.2循环语句"></a>7.2循环语句</h3><p>在Pyhton中，循环语句包括for循环和while循环。<br><strong>1.for循环</strong><br>for循环可以遍历各种序列的项目，如一个列表或字符串。for循环的语法结构如下：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">for</span> 迭代变量<span class="token punctuation">(</span>iterating_var<span class="token punctuation">)</span> <span class="token keyword">in</span> 序列（比如列表、字符串等）：    陈述<span class="token punctuation">(</span> statements<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><strong>例7.3计算几何平均收益率</strong></p><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token keyword">def</span> <span class="token function">mean_g</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>     <span class="token triple-quoted-string string">'''定义一个计算几何平均收益率的函数   ...:     r:代表收益率的一个列表'''</span>   <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>     total <span class="token operator">=</span> <span class="token number">1</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>     <span class="token keyword">for</span> i <span class="token keyword">in</span> r<span class="token punctuation">:</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>        total <span class="token operator">*=</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">+</span>i<span class="token punctuation">)</span>   <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> pow<span class="token punctuation">(</span>total<span class="token punctuation">,</span><span class="token number">1</span><span class="token operator">/</span>len<span class="token punctuation">(</span>r<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span>In <span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span><span class="token punctuation">:</span> list1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">0.0054</span><span class="token punctuation">,</span><span class="token number">0.0077</span><span class="token punctuation">,</span><span class="token number">0.0024</span><span class="token punctuation">,</span><span class="token number">0.0087</span><span class="token punctuation">,</span><span class="token number">0.0038</span><span class="token punctuation">]</span>In <span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">]</span><span class="token punctuation">:</span> mean_g<span class="token punctuation">(</span>list1<span class="token punctuation">)</span>Out<span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">0.0034274943754675213</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>2.while循环</strong><br>while循环在某条件下，循环执行某段程序，以处理需要重复处理的相同任务。基本的语法结构如下：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">while</span> 判断条件：        循环语句<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><strong>例7.4利用while循环输出0-10</strong></p><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">14</span><span class="token punctuation">]</span><span class="token punctuation">:</span> n <span class="token operator">=</span> <span class="token number">0</span>In <span class="token punctuation">[</span><span class="token number">15</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token keyword">while</span> n <span class="token operator">&lt;=</span> <span class="token number">10</span><span class="token punctuation">:</span>   <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'输出数字是:'</span><span class="token punctuation">,</span>n<span class="token punctuation">)</span>   <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>            n <span class="token operator">+=</span> <span class="token number">1</span>输出数字是<span class="token punctuation">:</span> <span class="token number">0</span>输出数字是<span class="token punctuation">:</span> <span class="token number">1</span>输出数字是<span class="token punctuation">:</span> <span class="token number">2</span>输出数字是<span class="token punctuation">:</span> <span class="token number">3</span>输出数字是<span class="token punctuation">:</span> <span class="token number">4</span>输出数字是<span class="token punctuation">:</span> <span class="token number">5</span>输出数字是<span class="token punctuation">:</span> <span class="token number">6</span>输出数字是<span class="token punctuation">:</span> <span class="token number">7</span>输出数字是<span class="token punctuation">:</span> <span class="token number">8</span>输出数字是<span class="token punctuation">:</span> <span class="token number">9</span>输出数字是<span class="token punctuation">:</span> <span class="token number">10</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在Python中通过range()函数生成整数数列，同时，可以通过while循环生成同样的整数数列。<br><strong>例7.5通过while循环生成0-9的整数数列</strong></p><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">20</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span>   <span class="token comment" spellcheck="true">#通过range函数生成0-9的整数</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'i='</span><span class="token punctuation">,</span>i<span class="token punctuation">)</span>i <span class="token operator">=</span> <span class="token number">0</span>i <span class="token operator">=</span> <span class="token number">1</span>i <span class="token operator">=</span> <span class="token number">2</span>i <span class="token operator">=</span> <span class="token number">3</span>i <span class="token operator">=</span> <span class="token number">4</span>i <span class="token operator">=</span> <span class="token number">5</span>i <span class="token operator">=</span> <span class="token number">6</span>i <span class="token operator">=</span> <span class="token number">7</span>i <span class="token operator">=</span> <span class="token number">8</span>i <span class="token operator">=</span> <span class="token number">9</span>In <span class="token punctuation">[</span><span class="token number">23</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token keyword">while</span> n<span class="token operator">&lt;</span><span class="token number">10</span><span class="token punctuation">:</span>   <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'n='</span><span class="token punctuation">,</span>n<span class="token punctuation">)</span>   <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>            list1<span class="token punctuation">.</span>append<span class="token punctuation">(</span>n<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">#使用append()函数在列表中添加元素</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>            n<span class="token operator">+=</span><span class="token number">1</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>         <span class="token keyword">print</span><span class="token punctuation">(</span>list1<span class="token punctuation">)</span>n<span class="token operator">=</span> <span class="token number">0</span>n<span class="token operator">=</span> <span class="token number">1</span>n<span class="token operator">=</span> <span class="token number">2</span>n<span class="token operator">=</span> <span class="token number">3</span>n<span class="token operator">=</span> <span class="token number">4</span>n<span class="token operator">=</span> <span class="token number">5</span>n<span class="token operator">=</span> <span class="token number">6</span>n<span class="token operator">=</span> <span class="token number">7</span>n<span class="token operator">=</span> <span class="token number">8</span>n<span class="token operator">=</span> <span class="token number">9</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>3.循环控制语句</strong><br> 在Python中，循环控制语句包括break,continue,和pass。<br>| 循环控制语句名称 |                    具体功能                    |<br>| :————–: | :——————————————–: |<br>|      break       |          终止当前循环，且跳出整个循环          |<br>|     continue     | 终止当次循环，跳出该次循环，直接执行下一次循环 |<br>|       pass       |      不执行任何操作，一般用于占据一个位置      |</p><h3 id="3-1条件语句和循环语句"><a href="#3-1条件语句和循环语句" class="headerlink" title="3.1条件语句和循环语句"></a>3.1条件语句和循环语句</h3><p><strong>例7.6for、if、break搭配的语句，输出已经访问的数据</strong></p><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">24</span><span class="token punctuation">]</span><span class="token punctuation">:</span> r_list <span class="token operator">=</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">0.0137</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">0.0016</span><span class="token punctuation">,</span><span class="token number">0.024</span><span class="token punctuation">,</span><span class="token number">0.0061</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">0.0022</span><span class="token punctuation">,</span><span class="token number">0.0101</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">0.0019</span><span class="token punctuation">,</span><span class="token number">0.0072</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">0.0087</span><span class="token punctuation">,</span><span class="token number">0.0196</span><span class="token punctuation">,</span><span class="token number">0.0002</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">0.0055</span><span class="token punctuation">,</span><span class="token number">0.0182</span><span class="token punctuation">]</span>In <span class="token punctuation">[</span><span class="token number">25</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> r_list<span class="token punctuation">:</span>   <span class="token comment" spellcheck="true">#print函数和if一致，满足条件退出循环，不满足条件打印</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> i<span class="token operator">></span><span class="token number">0.02</span><span class="token punctuation">:</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>            <span class="token keyword">break</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'收益率数据:'</span><span class="token punctuation">,</span>i<span class="token punctuation">)</span>收益率数据<span class="token punctuation">:</span> <span class="token operator">-</span><span class="token number">0.0137</span>收益率数据<span class="token punctuation">:</span> <span class="token operator">-</span><span class="token number">0.0016</span><span class="token comment" spellcheck="true">#print函数和for循环一致，满足条件退出循环，打印第一次满足条件的值</span>In <span class="token punctuation">[</span><span class="token number">26</span><span class="token punctuation">]</span><span class="token punctuation">:</span> r_list <span class="token operator">=</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">0.0137</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">0.0016</span><span class="token punctuation">,</span><span class="token number">0.024</span><span class="token punctuation">,</span><span class="token number">0.0061</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">0.0022</span><span class="token punctuation">,</span><span class="token number">0.0101</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">0.0019</span><span class="token punctuation">,</span><span class="token number">0.0072</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">0.0087</span><span class="token punctuation">,</span><span class="token number">0.0196</span><span class="token punctuation">,</span><span class="token number">0.0002</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">0.0055</span><span class="token punctuation">,</span><span class="token number">0.0182</span><span class="token punctuation">]</span>In <span class="token punctuation">[</span><span class="token number">28</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> r_list<span class="token punctuation">:</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> i <span class="token operator">></span> <span class="token number">0.02</span><span class="token punctuation">:</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>            <span class="token keyword">break</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>       <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'收益率数据:'</span><span class="token punctuation">,</span>i<span class="token punctuation">)</span>收益率数据<span class="token punctuation">:</span> <span class="token number">0.024</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>例7.7for、if 和continue搭配的语句</strong></p><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">29</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> r_list<span class="token punctuation">:</span>  <span class="token comment" spellcheck="true">#当值为负数时，跳过这些负数的数据，并且输出全部非负的数据</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>            <span class="token keyword">if</span> i<span class="token operator">&lt;</span><span class="token number">0</span><span class="token punctuation">:</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>                <span class="token keyword">continue</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>           <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'非负收益率数据:'</span><span class="token punctuation">,</span>i<span class="token punctuation">)</span>非负收益率数据<span class="token punctuation">:</span> <span class="token number">0.024</span>非负收益率数据<span class="token punctuation">:</span> <span class="token number">0.0061</span>非负收益率数据<span class="token punctuation">:</span> <span class="token number">0.0101</span>非负收益率数据<span class="token punctuation">:</span> <span class="token number">0.0072</span>非负收益率数据<span class="token punctuation">:</span> <span class="token number">0.0196</span>非负收益率数据<span class="token punctuation">:</span> <span class="token number">0.0002</span>非负收益率数据<span class="token punctuation">:</span> <span class="token number">0.0182</span><span class="token comment" spellcheck="true">#for、if、pass、else搭配的语句</span>In <span class="token punctuation">[</span><span class="token number">30</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> r_list<span class="token punctuation">:</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>            <span class="token keyword">if</span> i<span class="token operator">&lt;</span><span class="token number">0</span><span class="token punctuation">:</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>                <span class="token keyword">pass</span>   <span class="token comment" spellcheck="true">#涨跌幅为负数时，不执行任何操作</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>            <span class="token keyword">else</span><span class="token punctuation">:</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'非负收益率数据'</span><span class="token punctuation">,</span>i<span class="token punctuation">)</span>非负收益率数据 <span class="token number">0.024</span>非负收益率数据 <span class="token number">0.0061</span>非负收益率数据 <span class="token number">0.0101</span>非负收益率数据 <span class="token number">0.0072</span>非负收益率数据 <span class="token number">0.0196</span>非负收益率数据 <span class="token number">0.0002</span>非负收益率数据 <span class="token number">0.0182</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>例7.8运用for、if、elif和else搭配的语句</strong></p><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">31</span><span class="token punctuation">]</span><span class="token punctuation">:</span> r3 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        <span class="token comment" spellcheck="true">#存放涨幅超过1%的数据列表</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>       r4 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        <span class="token comment" spellcheck="true">#存放跌幅超过1%的数据列表</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>       r5 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        <span class="token comment" spellcheck="true">#存放涨跌幅处于-1%至1%区间的数据列表</span>In <span class="token punctuation">[</span><span class="token number">32</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> r_list<span class="token punctuation">:</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>            <span class="token keyword">if</span> i <span class="token operator">></span> <span class="token number">0.01</span><span class="token punctuation">:</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>                r3<span class="token punctuation">.</span>append<span class="token punctuation">(</span>i<span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>            <span class="token keyword">elif</span> i <span class="token operator">&lt;</span> <span class="token operator">-</span><span class="token number">0.01</span><span class="token punctuation">:</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>                r4<span class="token punctuation">.</span>append<span class="token punctuation">(</span>i<span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>            <span class="token keyword">else</span><span class="token punctuation">:</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>                r5<span class="token punctuation">.</span>append<span class="token punctuation">(</span>i<span class="token punctuation">)</span>In <span class="token punctuation">[</span><span class="token number">33</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'涨幅超过1%的数据列表:'</span><span class="token punctuation">,</span>r3<span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>       <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'跌幅超过-1%的数据列表:'</span><span class="token punctuation">,</span>r4<span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>       <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'涨跌幅处于[-1%,1%]区间的数据列表:'</span><span class="token punctuation">,</span>r5<span class="token punctuation">)</span>涨幅超过<span class="token number">1</span><span class="token operator">%</span>的数据列表<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">0.024</span><span class="token punctuation">,</span> <span class="token number">0.0101</span><span class="token punctuation">,</span> <span class="token number">0.0196</span><span class="token punctuation">,</span> <span class="token number">0.0182</span><span class="token punctuation">]</span>跌幅超过<span class="token operator">-</span><span class="token number">1</span><span class="token operator">%</span>的数据列表<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">0.0137</span><span class="token punctuation">]</span>涨跌幅处于<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token operator">%</span><span class="token punctuation">]</span>区间的数据列表<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">0.0016</span><span class="token punctuation">,</span> <span class="token number">0.0061</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">0.0022</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">0.0019</span><span class="token punctuation">,</span> <span class="token number">0.0072</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">0.0087</span><span class="token punctuation">,</span> <span class="token number">0.0002</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">0.0055</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="8-模块的导入与math模块"><a href="#8-模块的导入与math模块" class="headerlink" title="8.模块的导入与math模块"></a>8.模块的导入与math模块</h2><p>Python的基本库可以完成基本的运算，但涉及比较复杂的数学运算、统计分析等，就需要用到大量的模块。Python中默认安装好的模块被称为“标准库”，“标准库”中的模块无需另行安装，就可以直接使用，比如math模块属于标准库，不用安装就可以直接使用，而其他的模块（非标准库）如NumPy、Pandas、SciPy、Matplotlib等则需要安装。</p><h3 id="8-1模块导入的若干种方法"><a href="#8-1模块导入的若干种方法" class="headerlink" title="8.1模块导入的若干种方法"></a>8.1模块导入的若干种方法</h3><p>在Python中，模块不能直接使用，在每次启动Python以后如果要使用相关模块，需要导入该模块，对于模块的导入存在多种方法：</p><table><thead><tr><th align="left"></th><th align="left">Python的代码</th><th align="left">具体说明与示例</th></tr></thead><tbody><tr><td align="left">方法1</td><td align="left">import 模块名</td><td align="left">直接导入整个模块，这种导入方式比较占用内存。具体的示例如下：import math</td></tr><tr><td align="left">方法2</td><td align="left">import 模块名 as 名称缩写</td><td align="left">导入整个模块的同时给该模块取一个别名，往往是用在模块名字比较长的情况下，这样能节省调用该模块时的输入时间。具体的示例如下： import matplotlib as np</td></tr><tr><td align="left">方法3</td><td align="left">import 模块名.子模块名 as 名称缩写</td><td align="left">导入某个模块的子模块，并且给该子模块取一个别名，当然是否取别名是一个可选项，这样占用的内存也比较少。具体的示例如下：import matplotlib.pyplot as plt</td></tr><tr><td align="left">方法4</td><td align="left">from 模块名 import 函数名</td><td align="left">从特定模块中导入某个或某几个函数（不同函数之间用英文逗号隔开，这样不仅占用的内存比较少，而且这些函数可以直接以函数名字的方式使用 ）。具体的示例如下：from math import exp,log,sqrt</td></tr><tr><td align="left">方法5</td><td align="left">from 模块名.子模块名 import 函数名</td><td align="left">与方法4很相似，只不过是从特定模块的子模块中导入某个或者几个函数。具体的示例如下：from matplotlib.pyplot import figure,plot</td></tr></tbody></table><h3 id="8-2math模块"><a href="#8-2math模块" class="headerlink" title="8.2math模块"></a>8.2math模块</h3><p>针对比较复杂的数学运算，比如求解正弦、余弦以及对数运算等，就会用到Python的数学模块math。依然可以通过dir命令查看math模块包含了那些函数和数学符号，具体加代码如下:<br><strong>例8.1math模块</strong></p><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token keyword">import</span> mathIn <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">:</span> dir<span class="token punctuation">(</span>math<span class="token punctuation">)</span>Out<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">'__doc__'</span><span class="token punctuation">,</span><span class="token string">'__loader__'</span><span class="token punctuation">,</span><span class="token string">'__name__'</span><span class="token punctuation">,</span><span class="token string">'__package__'</span><span class="token punctuation">,</span><span class="token string">'__spec__'</span><span class="token punctuation">,</span><span class="token string">'acos'</span><span class="token punctuation">,</span><span class="token string">'acosh'</span><span class="token punctuation">,</span><span class="token string">'asin'</span><span class="token punctuation">,</span><span class="token string">'asinh'</span><span class="token punctuation">,</span><span class="token string">'atan'</span><span class="token punctuation">,</span><span class="token string">'atan2'</span><span class="token punctuation">,</span><span class="token string">'atanh'</span><span class="token punctuation">,</span><span class="token string">'ceil'</span><span class="token punctuation">,</span><span class="token string">'comb'</span><span class="token punctuation">,</span><span class="token string">'copysign'</span><span class="token punctuation">,</span><span class="token string">'cos'</span><span class="token punctuation">,</span><span class="token string">'cosh'</span><span class="token punctuation">,</span><span class="token string">'degrees'</span><span class="token punctuation">,</span><span class="token string">'dist'</span><span class="token punctuation">,</span><span class="token string">'e'</span><span class="token punctuation">,</span><span class="token string">'erf'</span><span class="token punctuation">,</span><span class="token string">'erfc'</span><span class="token punctuation">,</span><span class="token string">'exp'</span><span class="token punctuation">,</span><span class="token string">'expm1'</span><span class="token punctuation">,</span><span class="token string">'fabs'</span><span class="token punctuation">,</span><span class="token string">'factorial'</span><span class="token punctuation">,</span><span class="token string">'floor'</span><span class="token punctuation">,</span><span class="token string">'fmod'</span><span class="token punctuation">,</span><span class="token string">'frexp'</span><span class="token punctuation">,</span><span class="token string">'fsum'</span><span class="token punctuation">,</span><span class="token string">'gamma'</span><span class="token punctuation">,</span><span class="token string">'gcd'</span><span class="token punctuation">,</span><span class="token string">'hypot'</span><span class="token punctuation">,</span><span class="token string">'inf'</span><span class="token punctuation">,</span><span class="token string">'isclose'</span><span class="token punctuation">,</span><span class="token string">'isfinite'</span><span class="token punctuation">,</span><span class="token string">'isinf'</span><span class="token punctuation">,</span><span class="token string">'isnan'</span><span class="token punctuation">,</span><span class="token string">'isqrt'</span><span class="token punctuation">,</span><span class="token string">'ldexp'</span><span class="token punctuation">,</span><span class="token string">'lgamma'</span><span class="token punctuation">,</span><span class="token string">'log'</span><span class="token punctuation">,</span><span class="token string">'log10'</span><span class="token punctuation">,</span><span class="token string">'log1p'</span><span class="token punctuation">,</span><span class="token string">'log2'</span><span class="token punctuation">,</span><span class="token string">'modf'</span><span class="token punctuation">,</span><span class="token string">'nan'</span><span class="token punctuation">,</span><span class="token string">'perm'</span><span class="token punctuation">,</span><span class="token string">'pi'</span><span class="token punctuation">,</span><span class="token string">'pow'</span><span class="token punctuation">,</span><span class="token string">'prod'</span><span class="token punctuation">,</span><span class="token string">'radians'</span><span class="token punctuation">,</span><span class="token string">'remainder'</span><span class="token punctuation">,</span><span class="token string">'sin'</span><span class="token punctuation">,</span><span class="token string">'sinh'</span><span class="token punctuation">,</span><span class="token string">'sqrt'</span><span class="token punctuation">,</span><span class="token string">'tan'</span><span class="token punctuation">,</span><span class="token string">'tanh'</span><span class="token punctuation">,</span><span class="token string">'tau'</span><span class="token punctuation">,</span><span class="token string">'trunc'</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>从acos开始一直到trune共计50个函数。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2020/08/27/hello-world/"/>
      <url>/2020/08/27/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
