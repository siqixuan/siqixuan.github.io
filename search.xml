<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>学术是一场超越金钱的修行</title>
      <link href="/2020/09/04/%E5%AD%A6%E6%9C%AF%E6%98%AF%E4%B8%80%E5%9C%BA%E8%B6%85%E8%B6%8A%E9%87%91%E9%92%B1%E7%9A%84%E4%BF%AE%E8%A1%8C/"/>
      <url>/2020/09/04/%E5%AD%A6%E6%9C%AF%E6%98%AF%E4%B8%80%E5%9C%BA%E8%B6%85%E8%B6%8A%E9%87%91%E9%92%B1%E7%9A%84%E4%BF%AE%E8%A1%8C/</url>
      
        <content type="html"><![CDATA[<blockquote><p>  27年后，也是在一个下雪的深夜，我完成了我的博士论文。衷心感谢我的恩师对我的淳淳教诲和悉心关怀，在我博士三年里，他给予了我生活上、学习上无微不至的关心。可他却止不住我委屈的眼泪，他现在给不了什么，他也不明白为什么觉得自己挺优秀，日子却过成这样。后来问他为什么读博士，说希望以后能过上好些的日子，不过早知道现在这样，不如当时本科就出来工作了，像本科那些同学一样，都已经过上好日子了。希望教育部的领导们在花时间想把那44个汉字写更好看的同时，也花点时间关心一下我们花了20年培养出来的博士们。</p></blockquote><div align="middle"><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="186" src="//music.163.com/outchain/player?type=2&amp;id=586299&amp;auto=1&amp;height=66"></iframe></div><p>学术是一场超越金钱的修行         作者：佚名</p><img src="https://gitee.com/siqixuan/blogimage/raw/master/20200905143606.png" style="zoom:50%;"><p>我出生的时候是一个下雪的深夜，我的父亲在床边生了一堆柴火，我的母亲躺在四周漏风的那间破屋角落的床上，咬紧牙关，生下了我。27年后，也是在一个下雪的深夜，我完成了我的博士论文。当我打完最后一个字的时候，我站起来，拉开窗帘，打开窗户，白天还吵吵闹闹、喧嚣的世界变成一片洁白，让人顿感清净。</p><p><strong>我从进入大学到博士毕业整整十年。</strong>在这十年中，我过得浑浑愕额。十年前，我身高4250px，十年后，我身高还是4250px；十年前，我体重60kg，十年后，我体重还是60kg；十年前，我一无所有，十年后，我还是一无所有。十年前，我眼睛明亮、有神，十年后，摘掉眼镜，我已看不清自己有多少个手指了；十年前，我声音洪亮、清澈，十年后，已经是慢性咽喉炎，声音嘶哑；十年前，我踌躇满志、指点江山、激扬文字，十年后，我心如止水，只求温饱；当然，我也得到了一些东西。十年前，我还是个农民的儿子，十年后，我成为了一个博士；十年前，我只懂得砍柴、种田、割草、放牛，十年后，我已经成为了一个懂机械、金融、管理的复合型人才；但如果您问我这十年最大的长进是什么，我将告诉您：<strong>十年前，我十七，十年后，我二十七。</strong></p><p><strong>这十年中，我最渴望、最追求的是什么？是知识？不是。是美女？不是。而是钱。</strong>在我的脑海里，钱就是那种一块、一毛的硬币，我曾无数次翻天覆地的把它们找出来，目的就是去买一包方便面，吃一顿晚餐，而且找的时候不能太仔细了，太仔细了，下次就没有了。有时候，当我不知道下顿饭在哪里的时候，我想要是天上能掉下点钱就好了，我抬起头，只看到发黄的树叶正一片一片的落下来；我想要是能在地上捡点钱就好了，我低下头，只看见一些面包的包装纸以及一些插羊肉串的竹签。我从没见过天上掉过钱，也从没在地上捡过钱，所以我不相信有神的存在，因此我没有信仰。</p><p><strong>衷心感谢我的恩师对我的淳淳教诲和悉心关怀，在我博士三年里，他给予了我生活上、学习上无微不至的关心。</strong>他也许是我十年大学生活里，唯一知道我名字的老师，也感谢他在承担20多个学生的指导任务下还能给我精心的指导。恩师对我的指导和影响之大，怎样言说都表达不尽，自己取得的点滴成绩无不凝聚着恩师的心血。恩师国际化的视野，前沿而精髓的学术造诣，严谨勤奋的治学风格，都让我永志不忘，深刻影响着我日后的工作和生活。</p><p>衷心感谢学院其他老师给予我的帮助。</p><p>衷心感谢各位同门师兄弟姐妹，感谢我们一起度过的苦难岁月。</p><p><strong>衷心感谢我年迈的父母，我在这十年之中不忠不孝，没有让他们过上一天幸福的生活。</strong>他们还不停的支持我，关心我，鼓励我。经常问我“缺钱吗？”所以我相信亲情。我从不要他们的钱，我不想看到一百块钱，就想起几百个鸡蛋，几百担猪草，几千个红砖。</p><p><strong>衷心感谢我的五个姐姐，是她们陪我度过快乐的童年。她们美丽纯真的少女时代唤起了我对异性的尊重与渴求。</strong>她们在我求学的十年中，不停的给我打电话，询问我的身体，生活，要我多吃点，给我寄钱，我也一直拒绝她们。这十年里，她们在广东的毛织厂、制衣厂过着非人的岁月。我不想看到那种用血、肉、生命、青春换来的东西。十年前，她们还是花一般的容颜，十年后，当她们出现在我的面前，我已经不相信她们就是我的姐姐了。</p><p><strong>最后，我要感谢与我相濡以沫的女友XXX博士，我们以总共不到600元的月收入，在上海和杭州这两个中国最发达的城市生活了5年。</strong>这5年里，我没有给她买过像样的礼物，而她却无数次在我青黄不接的日子里给我寄来她省吃俭用的钱，我才得以完成学业，所以我相信爱情。我无法明白她以275元的月收入，居然还可以救济我，或许她那纤细、苗条的身材就是最好的答案吧。</p><p>谨以此文献给千千万万的苦难中的学子们！</p><img src="https://gitee.com/siqixuan/blogimage/raw/master/20200905143610.png" style="zoom:50%;"><p>在认识我男友之前，我对博士生的敬仰之情如滔滔江水，我原来觉得他们是家乡的骄傲，国家的精英，好像是山上的神仙，潜心科研，逍遥自如，与我们这些凡人大大不同。<strong>但是，我现在发现，在读的博士生竟然是个特别的“弱势群体”。</strong></p><p>前些天我听我男友说，他隔壁寝室师兄跟女朋友分手了，师兄女友的父母不同意把女儿嫁给没有房子的他。我男友的室友也跟相恋2，3年的女友分手了，原因还是房子，钱！他们已经要准备结婚了，他女友在老家工作，结婚后打算过来上海，她要求在上海买房，他现在的经济状况买不了，于是吵吵吵<del>~</del>吵到分,分了，就这么分了，就因为房子，钱！房子！听说那位博士兄弟天天喝酒，夜里还忍不住流泪。</p><p>我是女生，我能理解女生和女生家长。家长都希望自己女儿嫁个条件好些的，女儿就可以少吃点苦少受点累。我也曾经因为我男友现在经济条件不好，狠狠的大哭过一场：为什么别的女孩子嫁人了，有浪漫的婚礼，有钻戒，有房子有车子。而我们，要想办婚礼都得去四方借钱？更别想啥房子车子了，为什么？我觉得委屈，我不比别的女生差，为什么我的生活是这样？！！</p><p><strong>我男友心里也很难受，哑巴吃黄连，有苦说不出</strong>。十年寒窗，他从农村考上交大，读研，读博，在家乡他是学弟学妹的榜样，被当作天才一般，是家乡的骄傲。在学校，他专心科研，认真刻苦取得的成绩也得到了许多赞许。可他却止不住我委屈的眼泪，物质上，他现在给不了什么，他也不明白为什么觉得自己挺优秀，日子却过成这样。学校的那些补助，只能基本保证自己温饱。今年我的生日礼物是条玫瑰金项链，我又开心又心疼，他为了给我礼物，省吃俭用存了好久。</p><p>他没有钱，但他有错么？没有！他每天都很努力，很努力的学习工作。我有错么？！我非常能理解他的处境他的难处，可是，我就是想哭，我就是止不住眼泪。在这个物质的社会，我承认我是有些心浮气躁，我也想像神仙一样淡薄名利，可有的时候，真的，好难过。为什么？告诉我为什么这样……</p><p>记得我问我男友当时为什么报考交大机械，他说高中时特别喜欢军事，特别爱看军事杂志上的战斗机，军舰啥的，他梦想成为中国造航母的专家。后来问他为什么读博士，说希望以后能过上好些的日子，不过早知道现在这样，不如当时本科就出来工作了，像本科那些同学一样，都已经过上好日子了。</p><p>我很想告诉学弟学妹们，特别是学弟们：<strong>如果家里不是很富裕，请你考虑清楚再决定是否读博士搞科研，不管你有多适合科研，不管你多有热情为科学献身。因为，来自生活和情感的压力，很有可能把你热情的火焰浇灭。</strong></p><p>博士，是很难读的，很多博士生不到30岁就有白发，头发也随着思考的增多而减少；而且，基本至少要读到而立之年，你那点补助只够自己的温饱，父母在供你上了大学，研究生后还不能歇一歇，他们想着你还没工作，他们要帮你存钱娶媳妇（我男友的父母近六十了，种了好多菜卖，你能想到市场上有的蔬菜他们都种了，不管天多热，他们都在田里忙。为了占个好摊位，每天早上2点起来去市区卖菜，怎么劝他们别去累了苦都不听，就是因为他还没工作）。</p><p>还有件事让你难过的，就是你同学的小孩都能去打酱油了，你超过晚婚年龄好几年了还没有女朋友；如果你有女朋友，情况更糟糕：本来压力只是来自觉得对不住父母，现在女朋友那又来了一层压力。即使她非常通情达理，温柔体贴，善良朴实，一点都不吵不闹不抱怨，你也会有压力。一个有责任心的男人，都会想尽最大的力让自己的爱人过上更好的生活，而你现在基本上不能给她什么，甚至，工资还没她的一半。</p><p>最惨的是，你在承受着巨大压力艰难前行的时候，被伤了一刀：她离开了你。大家都觉得博士毕业后有个光明的前途，是的，毕业后你被认为是香馍馍，说不定很容易娶个大美女。但是，这几年的痛苦有多少人能熬过去？感情上的伤，被刀捅过的心，一辈子都有疤的。</p><p>我大概知道为什么几乎每年著名高校都有博士自杀的消息了，肯定不是因为哪个算法很难，推不出来，多是思想感情进了死胡同，被各方的郁闷压得受不了，解不开。他们有着高智商，是某一科学领域的精英，但是情感上他们太需要支持，经不起太多的打击。其实我觉得他们是个特殊的“弱势群体”。</p><p><strong>我们都知道需求金子塔：生理、安全、社交、尊重和自我实现。我发觉生理和社交需求，我们的辛苦的博士生们却比同一年龄的普通人有的少，少很多。</strong>希望教育部的领导们在花时间想把那44个汉字写更好看的同时，也花点时间关心一下我们花了20年培养出来的博士们。他们不指望读博士生在生活上过的有多好，他们多是习惯了清贫的人，但希望生活不要给他们太多的压力让他们分太多的心。希望不要太经常捉襟见肘，在过年过节的时候能给父母买点补品买两件衣服，在同学结婚送红包时不用老想着接下来几个月该如何节衣缩食……让他们全身心的投入到科研中去，或许，我们还有拿诺贝尔奖的可能。</p><p>最后，我还有些话对姐妹们说：现在社会都流行着“没房没车谁嫁你？”，其实，我们没有必要随大流。我曾经想过，在老了之后，最需要的是什么？当然不是名车——是一双紧握着你的手，陪你一起散步唠嗑的人。在要离开这个世界的时候，最留恋的是什么？当然不会是豪宅——是你爱的人！</p><p>如果你遇到一个人，他爱你，你爱他，你们性格适合，你知道不会变心，那么——嫁给他！</p><p>不管他有几间房，存了多少钱，家里几亩地，地里几头牛<del>~</del></p><p>相信我，你们会幸福一辈子的！</p><p>愿人人都有一颗宁静的心，愿明天更好……</p><blockquote><p>  个人感悟：这篇文章读完后带给自己很大的震撼，有一种心在滴血的感觉。从小学开始一直读到博士，整整22年的时间都用在了读书和求学上。为什么这么辛苦的要把书一直念到底呢？就是因为相信知识改变命运，懂了博士出来后能有一份高薪的工作，改变自己甚至是家庭的命运。随着年龄的增长和知识的丰富，自己的思路是越来越开阔了，也学习到了许多从未学习过的东西，但是博士也是人，同样的要面对生活，要解决自己的温饱，可是微薄的博士在读期间的补助仅够自己吃饭，难以有足够的钱来满足自己的生理和社交的需要。与自己同龄人比，本科毕业的人已经成家，辛勤工作的大多过上了不错的生活，而自己因为经济没有独立连交女朋友的勇气都没有，即使有女朋友也因为不能请她吃一顿丰盛的晚餐，送她一个喜欢的节日礼物而感到难过。面对日渐老去的父母，想想只有博士学历的自己，内心真的特别苦。女生给男生的回信读起来是满满的温暖，对自己男友深深的理解，同时在面对物质社会的压力下，理想与现实残酷的差距使得包括他们在内的博士生群体的不平。就像文中所说，博士群体是一个特殊的“弱势群体”，他们想要的并不多：在过年过节的时候能给父母买点补品买两件衣服，在同学结婚送红包时不用老想着接下来几个月该如何节衣缩食，在女朋友过生日时能够给他买一件喜欢的礼物…… 我们的社会、国家、政府多应该关注这部分群体的需求，让他们能够全身心的投入科研中，没有后顾之忧，这样我们的国家就会越来越好，取得更多的诺贝尔奖就有更多的可能。</p></blockquote><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 文章 </category>
          
          <category> 来自微信 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 美文 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客版本更新情况</title>
      <link href="/2020/09/01/Hexo%E5%8D%9A%E5%AE%A2%E7%89%88%E6%9C%AC%E6%9B%B4%E6%96%B0%E6%83%85%E5%86%B5/"/>
      <url>/2020/09/01/Hexo%E5%8D%9A%E5%AE%A2%E7%89%88%E6%9C%AC%E6%9B%B4%E6%96%B0%E6%83%85%E5%86%B5/</url>
      
        <content type="html"><![CDATA[<h1 id="博客更新计划"><a href="#博客更新计划" class="headerlink" title="博客更新计划"></a>博客更新计划</h1><h2 id="V1-0版本说明"><a href="#V1-0版本说明" class="headerlink" title="V1.0版本说明"></a>V1.0版本说明</h2><blockquote><p>2020年8月27日完成了Hexo博客的环境搭建和基本配置，并将第一次成功的网站托管在码云Gitee Pages服务上。2020年8月28日完成了Hexo博客的菜单栏设计与相关页面的设置、网站标题的命名和网站基本功能的确定。</p></blockquote><h2 id="8-29版本更新情况"><a href="#8-29版本更新情况" class="headerlink" title="8.29版本更新情况"></a>8.29版本更新情况</h2><ul><li><p>修改打赏的二维码图片；</p></li><li><p>在“关于”页面配置”我的技能”信息；</p></li><li><p>安装并添加网站地图插件；</p></li><li><p>Python入门教程博文的更新；</p></li><li><p>标签和分类的添加；</p></li><li><p>首页轮播图的设置；</p></li></ul><h2 id="8-30版本更新情况"><a href="#8-30版本更新情况" class="headerlink" title="8.30版本更新情况"></a>8.30版本更新情况</h2><ul><li><p>添加卡通人物（看板娘）；</p></li><li><p>添加浏览网页标题恶搞；</p></li><li><p>添加404页面；</p></li><li><p>“关于”页面增加简历（可选）；</p></li><li><p>增加建站时间；（有问题需要修改）；</p></li><li><p>Gitalks评论系统添加（未成功）；</p></li><li><p>更新NumPy学习文章；</p></li></ul><h2 id="8-31版本更新情况"><a href="#8-31版本更新情况" class="headerlink" title="8.31版本更新情况"></a>8.31版本更新情况</h2><ul><li>标签和分类修改；</li><li>添加Valine评论系统（未成功）；</li><li>网站favicon和logo图标的更换；</li><li>标签和分类页调整至归档页的二级菜单；</li><li>首页添加视频（未成功）；</li><li>配置Emojis表情支持；</li><li>Gitalks评论支持（未成功）；</li><li>banner图修改；</li><li>更新拒绝浮躁文章；</li></ul><h2 id="9-1版本更新情况"><a href="#9-1版本更新情况" class="headerlink" title="9.1版本更新情况"></a>9.1版本更新情况</h2><ul><li>添加导航页；</li><li>Matery主题自定义字体（微软雅黑）；</li><li>添加天气插件；</li><li>安装外链跳转插件（不能添加添加会报错）；</li><li>新建文章自动打开编辑器；</li><li>添加一言；</li><li>看板娘与网站访问量冲突已停用；</li><li>Typora集成PicGo图床服务；</li><li>使用 PicGo+Gitee (码云) 搭建免费图床；</li><li>成功添加Valine评论系统；</li><li>添加多级分类；</li><li>更新Hexo博客版本更新情况文章;</li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
          <category> Blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 版本更新 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>拒绝浮躁</title>
      <link href="/2020/08/31/%E6%8B%92%E7%BB%9D%E6%B5%AE%E8%BA%81/"/>
      <url>/2020/08/31/%E6%8B%92%E7%BB%9D%E6%B5%AE%E8%BA%81/</url>
      
        <content type="html"><![CDATA[<h1 id="拒绝浮躁-文-廖超国"><a href="#拒绝浮躁-文-廖超国" class="headerlink" title="拒绝浮躁    文/廖超国"></a>拒绝浮躁    文/廖超国</h1><p>我们从自身的角度看，影响我们人生的，有些是一眼就能认了的明显的毛病，有些则是常被我们忽视而不易觉察却影响深远的问题，浮躁便是一例。</p><p>如果说人生是过程而不是结果，你可能不太认同，但换个说法，来个比喻，你就会明白。人生是一次没有返程的单趟旅行，最重要的是欣赏一路的风光，而不是刻意赶路到达某个景点。很多人不明白这其中的道理，他们总是急匆匆的赶路，快节奏的奔波，甚至变得浮躁起来，而忘了人来这个世上的初衷。很多人浮躁而不自知，对其危害还不以为然。殊不知人一旦浮躁，很多烦恼和不幸就会接踵而至。正如俗语所说：<strong>天躁有雨，人躁有祸。</strong>印光大师有句名言，最好的心境是静心和沉稳。而我以为：人生最坏的状态是浮躁，浮躁是失败者的墓志铭，浮躁是人生最大的敌人。</p><p>我们处在一个崇尚天下武功，唯快不破时代，我们面临着一个霓虹闪烁，诱惑无比的世界。“唯快”让我们匆忙，无暇顾及灵魂，灵魂赶不上步伐。“诱惑”让我们迷茫，不知何去何从，身心游历飘荡。于是，在我们的心灵深处，有一个心魔时时被外界的诱惑而鼓动，使我们无法宁静，让我们茫然不安，这个心魔就是浮躁。</p><p>浮躁，在《辞海》里解释为轻率急躁。“浮”的意思是“漂流”，而“躁”的意思是“心里有众多东西要动”。两字组合在一起的意思是“心里有很多东西要动，但又无落脚之处，因此到处飘荡不安心”。简言之，<strong>浮，就是根基不牢。躁，就是耐心不足。</strong>浮躁之人，对人生信念不清晰，不知所向；对生活真谛不明白，无所适从。因为心静不下来，身安顿不了，人则难以定下来。浮躁的直接结果就是处世不安分、做事不安心、内心不安宁、于人不安逸、对己不安然。长期浮躁会毁掉我们的人生，是一种未被认识的心理疾患，必须引起我们高度重视，加以防范。</p><p><strong>浮躁是一种焦虑不安的不好心态，浮躁之人，好高骛远，眼高手低。</strong>人，其实是靠心态活着的，心态决定状态，有什么样的心态便有什么样的人生，浮躁这种心态害人之处，就是让人心神不宁，无所适从，心无所系，不知何去。目标变来变去，想法很多，行动很少。要求很高，落实很低。嘴上虚劲足，手上实功差。大事做不来，小事又不愿做。这山望着那山高，从未翻过一座山，怪这怪那总抱怨，从未反省过自己。到头来除了留下焦躁不安的心情外，还荒废大好的人生光阴。</p><p><strong>浮躁是一种飘浮不定的不良品性，浮躁之人，心中无谱，朝秦暮楚。</strong>有一句话说得好：品性决定理念，理念决定态度，态度决定行为，行为决定习惯，习惯决定性格，性格决定命运，命运决定未来。在人生的逻辑链条中，品性是起点，好的品性便有好的未来，反之，若输在起点，则满盘皆输。浮躁，这种不良的品性，对人最大的伤害是让人心无定力，飘浮不踏实；朝三暮四，轻浮不稳重；急于求成，躁浮不冷静。做事，仅凭三分钟的热情，不愿下深功，且不说板凳要做十年冷，屁股还不坐稳就开始厌烦了。做人，仅随自己的喜好，为人浅薄，投机钻营，让人觉得不靠谱。</p><p><strong>浮躁是一种心浮气躁的不佳行为，浮躁之人，急功近利，欲速不达。</strong>孔子曰“无欲速，无见小利。欲速则不达，见小利而大事不成”。天下的事，都有一个积累的过程，都讲究循序渐进。山里的竹子，用四年来扎根，只长3厘米，第五年开始，每年长出30厘米。但这之后的六个星期，就能长到15米。根深才能立稳，立稳才能成高。树也一样，长得太快用途不大，一年生的只能当柴烧，三五年的能做桌椅，十年百年才可能成为栋梁。成事之人大多能受得住”六耐“，即耐冷，知世态炎凉；耐苦，晓生活不易；耐烦，明世事之理；耐躁，修静神之气；耐忙，懂为人之责；耐热，觉人生如戏。而浮躁之人，不懂厚积薄发，耐不住时间，稳不住心神，急功近利，一事无成。所以，缓而图之，则为大利，急而成之，则为大害。</p><p>读过《大学》的人，不会忘记开篇喧然的那句古训：<strong>知止而后有定，定而后能静，静而后能安，安而后能虑，虑而后能得。</strong>人生成败的根本秘诀不就是在止、定、静、安、虑、得六个字上吗？做到了便成，行不到是败，知止才有边界，方向明确，力及所达；有定才能深入，行稳思进，步步为营；能静才会心宁，不会妄动，顺势而为；可安才有从容，身心安实，取舍有度；能虑才能周全，思考慎密，戒除偏见；有得才会成事，人生所获，心安理得。人生成功的秘笈如果用一句话来概括，那就是，扎实认真做事，远离浮躁做人。只有拒绝浮躁，脚踏实地，我们的人生才不会一事无成；只有远离浮躁，涵养静气，我们的生活才不会一地鸡毛。戒除浮躁，于人生和生活如此重要，那如何才能做到呢？</p><p><strong>以“实”为本，平静而不焦躁，才能把得住方向。</strong>浮躁最大的危害是让人没有目标，失去方向感。人一旦没有了方向，就会感到迷茫，迷茫的人生就像航船在大海上漫无目标的飘荡。人，只要有了方向，才会有目标，有了目标，才会有动力。有了动力，才会鼓劲向前。戒除浮躁，以平实的心态，以扎实的精神，以务实的行动，把准方向，紧盯目标，一步一个脚印行进。人生最可怕的是不知道自己是谁，不知道自己想要到哪里去，不知道自己真正想要什么。而摆脱浮躁，以平静之心想清楚人生的大题之意，便不会误入岐途。以“实”应躁，路清心明。</p><p><strong>以“稳”为基，宁静而不烦躁，才能沉得住气。</strong>所谓沉得住气，就是“猝然临之而不惊，无故加之而不怒”。人生的强者大多远离浮躁，遇事沉着镇静，平静如水。他们往往具有“胸有激雷面如平湖，泰山崩于前而色不变”沉稳，同时还能做到“任凭风浪起，船晃人不动”的沉着。真正做到逢人能藏得住事，遇事能稳得住心，生气能兜得住火。以“稳”降躁，气定人安。</p><p><strong>以“诚”为要，清静而不浮躁，才能稳得住心。</strong>诚实守信，既是人的内在品质要求，也是社会的行为规范。为人以诚，做事以实，这是靠谱之人的两大根本特征，也是浮躁之人最缺乏的致命之害。要驱除浮躁，就是要诚信而立，诚实做人，诚心待人，诚恳为人。要相信人的世界，信奉的是“爱出者爱返，福往者福来”的基本准则。你想别人如何待你，你就得如何待人。想赢得别人的信任，必须保证自己的诚实。诚信是一轮万众瞩目的圆月，唯有在茫茫苍穹对视，才能沉淀出对生命的真诚态度。诚信是高山之巅的纯净水源，能够涤净浮华，冼尽躁动，留下启悟心灵的妙谛。以“诚”祛躁，心静神宁。</p><p><strong>以“真”为标，沉静而不急躁，才能控得住行。</strong>浮躁之病，虚假为盛，破除浮躁，须求真务实。干永远比说更重要，既要有唱功，更要有做功，既要有想法，更要有做法。清代著名的启蒙思想家，那个著有《海国图志》并提出“师夷之长技以制夷”思想的魏源，在其《默觚．学篇二》中告诫人们“披五岳之图，以为知山，不如樵夫之一足；谈沧溟之广，以为知海，不如沽客之一瞥；疏八珍之谱，以为知味，不如疱丁之一啜“。空谈误事，实干兴业，虚名害人，求真利己。踏实做好每一件平凡的事，日积月累，便可以完成‘愚公“移山的浩大工程。以“真”破躁，行稳致远。</p><p><strong>以“善”为先，雅静而不暴躁，才能持得住身。</strong>人之所以浮躁，是“心”静不下来。人不静，生活便因慌乱而容易陷入泥泞；心不静，人生便因疲惫而容易迷失自己；身不静，工作便因瞎忙而容易劳而无功。逃脱浮躁，就是要让自己静下来。静下来，可以正气定力，头脑清醒，深谋远虑。有一句话说得非常好，人生最好的境界是丰富的安静。安静，是因为摆脱了外界虚名浮利的诱惑，丰富是因为拥有内在的精神世界的宝藏。而丰富的安静是以优雅和善良为沃土的，只有优雅和善良的沃土才能长出丰富的安静之花。安静是一个人在尘世中最优雅的姿态，也是一个人最好的修养。人生因安静而优雅，因优雅而善良，因善良而丰富。以“善”驱躁，名实身正。</p><p>培根说“名声是一条河流，轻浮和空虚的东西漂浮在上，而沉重和坚实的东西沉在河底”。人生也是这样，我们必须清醒地认识到，我们的烦恼直接与浮躁相连，因为浮躁者的双手托不起我们心中的梦想，我们的不幸也直接与浮躁相关，因为浮躁者的双脚走不出我们的理想之路。<br>只有戒除浮躁，才能心净神宁。心净，我们才能随缘，随性、随心；神宁，我们才能知道、知足、知恩；心静，我们才能释然、豁达、轻松；神宁，我们才能超然、空灵、慈悲。愿我们经得起风雨，耐得住寂寞，守得了平凡，吞得下委屈，喂大自己的格局。拒绝浮躁，保持清醒，做靠谱之人，远离浮躁，脚踏实地，行稳健之事。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 文章 </category>
          
          <category> 来自微信 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 美文 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python入门教程</title>
      <link href="/2020/08/28/Python%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B/"/>
      <url>/2020/08/28/Python%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="Python入门教程"><a href="#Python入门教程" class="headerlink" title="Python入门教程"></a><strong>Python入门教程</strong></h1><h2 id="1-赋值"><a href="#1-赋值" class="headerlink" title="1.赋值"></a>1.赋值</h2><p>在Python中，每个变量在使用前都必须赋值，并且是运用等号（=）来给变量赋值。等号（=）运算符左边是一个变量，右边是存储在该变量中的值，即：变量=值。<br><strong>Python命名的规则</strong><br>Python的变量名可以用英文字母、数字和下划线构成，但要注意以下四个方面：</p><ul><li>可以单独用英文字母或下划线作为变量名，同时英文字母需要注意区分大小写；</li><li>数字不能单独用于表示变量，比如3不能作为变量名；</li><li>变量不能以数字开头，比如1a不能作为变量名，但是a1可以作为变量名；</li><li>变量的命名应该简洁易懂，对变量的命名尽可能运用该变量的英文名、英文缩写或者英文名的首字母；</li></ul><p><strong>例1.1变量的赋值：</strong></p><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span> rate <span class="token operator">=</span> <span class="token number">0.08</span>In <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">:</span> rateOut <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">0.08</span>rate <span class="token operator">=</span> <span class="token number">0.08</span>  <span class="token comment" spellcheck="true">#利率rate等于8%</span>r <span class="token operator">=</span> <span class="token number">0.08</span>      <span class="token comment" spellcheck="true">#利率r等于8%</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-数据类型"><a href="#2-数据类型" class="headerlink" title="2.数据类型"></a>2.数据类型</h2><p>Python典型的数据类型包括数字、字符串、布尔值与空值。重点介绍数字和字符串两种类型，数字包括整型（int）、长整型(long)、浮点型(float)和复数(complex)。</p><h3 id="2-1整型"><a href="#2-1整型" class="headerlink" title="2.1整型"></a>2.1整型</h3><p>整数可分为正整数、负整数和零，并且有无穷多个。在Python中与整数对应的就是整型。<br><strong>例2整型的例子</strong></p><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">:</span> share <span class="token operator">=</span> <span class="token number">100</span>  <span class="token comment" spellcheck="true">#股票数量等于100</span>In <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">:</span> type<span class="token punctuation">(</span>share<span class="token punctuation">)</span>Out <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">:</span> int<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>整数的特征：1、必须为数字；2、不能出现小数点。</p><h3 id="2-2浮点型"><a href="#2-2浮点型" class="headerlink" title="2.2浮点型"></a>2.2浮点型</h3><p>浮点型（也成为浮点数）就是由整数、小数点和小数（非必需）构成的数字。<br><strong>例2.1浮点型的例子1</strong></p><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">:</span> type<span class="token punctuation">(</span>rate<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#type()函数用来判断变量的数据类型</span>Out <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">:</span> float<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><strong><em>特别注意：Python中输入数字时，如果数字中带有小数点，无论实质上是否为整数，Python均会将其视作浮点型。</em></strong><br>在Python中输入数字时，用户在100后面增加了一个小数点，则数据类型结果就是浮点型的而非整型，具体代码如下：<br>** 例2.2浮点型的例子2**</p><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">:</span> share<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">.</span>In <span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">:</span> type<span class="token punctuation">(</span>share<span class="token punctuation">)</span>Out <span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">:</span> float<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="2-3复数"><a href="#2-3复数" class="headerlink" title="2.3复数"></a>2.3复数</h3><p>当a、b均为实数,z=a+bi被称为复数（complex number）。其中a称为实部，b称为虚部，i称为虚数单位。复数在金融领域的应用较为狭窄，主要用于金融的时间序列分析、美式期权定价（运用傅里叶变换）。注意，在Python中，虚数单位是用小写的英文字母j来表示：<br><strong>例2.3复数的例子</strong></p><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">:</span> a <span class="token operator">=</span> <span class="token number">2</span><span class="token operator">+</span><span class="token number">3j</span>In <span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">:</span> type<span class="token punctuation">(</span>a<span class="token punctuation">)</span>Out <span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">:</span> complex<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="2-4字符串"><a href="#2-4字符串" class="headerlink" title="2.4字符串"></a>2.4字符串</h3><p>在Python中针对表示文本的基本数据类型就需要用到字符串（string)。字符串的四大特征：1、输入时需用引号；2、可索引性；3、可截取性；4、可替换性。</p><ol><li>输入时需用引号<ul><li>用英文的单引号’字符串内容’、双引号’’字符串内容’’以及三引号’’’字符串内容’’’来表示字符串,三引号往往运用于多行文本；</li><li>引号中无论中文、英文字母、符号、数字甚至是空格，均被视作字符串；</li><li>字符串的类型是用str来显示（即英文string的缩写）；</li></ul></li></ol><p><strong>例2.4字符串1</strong></p><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span> a <span class="token operator">=</span> <span class="token string">'finance'</span>In <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">:</span> str<span class="token punctuation">(</span>a<span class="token punctuation">)</span>Out <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token string">'finance'</span>In <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">:</span> type<span class="token punctuation">(</span>a<span class="token punctuation">)</span>Out <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">:</span> strIn <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">:</span> type<span class="token punctuation">(</span>b<span class="token punctuation">)</span>Out <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">:</span> strIn <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">:</span> c <span class="token operator">=</span> <span class="token string">'金融风险管理'</span>In <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">:</span> type<span class="token punctuation">(</span>c<span class="token punctuation">)</span>Out <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">:</span> strIn <span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">:</span> d <span class="token operator">=</span> <span class="token string">'888'</span>In <span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">:</span> type<span class="token punctuation">(</span>d<span class="token punctuation">)</span>Out <span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">:</span> strIn <span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">:</span> e <span class="token operator">=</span> <span class="token string">'1+1'</span>In <span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">:</span> type<span class="token punctuation">(</span>e<span class="token punctuation">)</span>Out <span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">:</span> str<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="2"><li>可索引性<br>字符串是可以被索引的。<ul><li>字符串是从左向右的索引，则默认是从0开始，即0123456789…的顺序，最大范围就是字符串长度减去1，并且需要用到中括号；</li><li>字符串是从右向左的索引，则默认是从-1开始，即-1-2-3-4-5-6-7-8-9…的顺序，最大范围是字符串的开头；</li></ul></li></ol><p><strong><em>注意:</em></strong><br>以上规则不仅适用于字符串，对于Python中涉及的其他索引也全部适用。<br><strong>例2.5字符串的例子2</strong></p><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">:</span> a <span class="token operator">=</span> <span class="token string">'finance'</span>In <span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">:</span> a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>              <span class="token comment" spellcheck="true">#索引首字母</span>Out <span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token string">'f'</span>In <span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">:</span> a<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span>            <span class="token comment" spellcheck="true">#索引第四个字母</span>Out <span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token string">'a'</span>In <span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span><span class="token punctuation">:</span> a<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>          <span class="token comment" spellcheck="true">#索引最后一个字母</span>Out <span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token string">'e'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="3"><li>可截取性。<ul><li>字符串的截取也称为切片(slice)，是从一个字符串中获取子字符串（也就是字符串的一部分），需要使用中括号、起始索引值（start）、终止索引值(end)以及可选的步长（step）来定义。截取的输入格式如下：字符串[start:end:step]</li></ul></li></ol><p><strong>例2.6字符串的例子3</strong></p><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span><span class="token punctuation">:</span> x <span class="token operator">=</span> <span class="token string">'I love risk'</span>In <span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">]</span><span class="token punctuation">:</span> x<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token number">6</span><span class="token punctuation">]</span>        <span class="token comment" spellcheck="true">#截取字符串love</span>Out <span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token string">'love'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ul><li>在截取的字符串中，截取的子字符串是截止到输入的终止索引的前一位（顾头不顾尾）；</li><li>不输入步长的参数时，默认的步长是1；</li><li>仅输入起始索引值但不输入终止索引值，则表示截取从起始索引值一直到字符串末尾的子字符串；</li><li>不输入起始索引值但输入终止索引值，表示截取从字符的部首一直到终止索引值前一位的子字符串。<br><strong>例2.7字符串的例子4</strong><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">14</span><span class="token punctuation">]</span><span class="token punctuation">:</span> x<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span>  <span class="token comment" spellcheck="true">#从第3位开始一直到最后一位</span>Out <span class="token punctuation">[</span><span class="token number">14</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token string">'love risk'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><strong>例2.8字符串的例子5</strong><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">15</span><span class="token punctuation">]</span><span class="token punctuation">:</span> x<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">6</span><span class="token punctuation">]</span>Out <span class="token punctuation">[</span><span class="token number">15</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token string">'I love'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><strong>例2.9字符串的例子6</strong><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">:</span> x <span class="token operator">=</span> <span class="token string">'I love risk management'</span>In <span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">:</span> x<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token number">9</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token comment" spellcheck="true">#截取第3位到第9位并且步长为3的子字符串</span>Out <span class="token punctuation">[</span><span class="token number">17</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token string">'lei'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ol start="4"><li>可替换性<ul><li>用户在Python中输入字符串中的部分字符串出现错误，这时用户就可以用replace函数实现修正和替换。在Python中，第一个引号中是输入原有内容，第二个引号中是输入修正后的内容。</li></ul></li></ol><strong>例2.10字符串的列子</strong><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">18</span><span class="token punctuation">]</span><span class="token punctuation">:</span> y <span class="token operator">=</span> <span class="token string">'I love management'</span> <span class="token comment" spellcheck="true">#错误的输入</span>In <span class="token punctuation">[</span><span class="token number">18</span><span class="token punctuation">]</span><span class="token punctuation">:</span>y<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'management'</span><span class="token punctuation">,</span><span class="token string">'finance'</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#进行更正</span>Out <span class="token punctuation">[</span><span class="token number">18</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token string">'I love finance'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="3-数据结构"><a href="#3-数据结构" class="headerlink" title="3.数据结构"></a>3.数据结构</h2></li></ul><p>目前为止，Python共包括元组、列表、集合、字典、数组和数据框这6种数据结构，具体见表1：</p><table><thead><tr><th>数据结构类型</th><th>简介和特征</th><th>特征性标识</th></tr></thead><tbody><tr><td>元组（tuple）</td><td>一种高级的数据结构，可索引，但不可修改</td><td>用小括号()标识</td></tr><tr><td>列表（list）</td><td>与元组类似，除了可索引以外，更重要的是可以修改，可以理解为元组的升级版，而元组则是稳定版的列表</td><td>用中括号[]标识</td></tr><tr><td>集合（set）</td><td>类似于数学的集合，每个集合的元素具有无序性、不重复性的特征</td><td>用大括号{}标识</td></tr><tr><td>字典(dict)</td><td>与日常生活中的字典用法很类似，通过“名称（键key)→内容（值value）”来构建</td><td>用大括号{}标识</td></tr><tr><td>数组（array）</td><td>科学计算和代数运算常用的数据类型，类似于线性代数的向量和矩阵</td><td>用array、小括号、中括号共同标识</td></tr><tr><td>数据框（dataframe）</td><td>数据分析处理常用的数据类型，带有索引(index)和列名（column），类似于Excel的工作表</td><td>用DataFrame、小括号、中括号共同标识</td></tr></tbody></table><h3 id="3-1元组"><a href="#3-1元组" class="headerlink" title="3.1元组"></a>3.1元组</h3><p>元组(tuple)是一种高级的数据结构，创建的语法为：变量=（元素1，元素2，元素3， …）<br><strong>例3.1元组的创建1</strong></p><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span> tup1 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span>In <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">:</span> type<span class="token punctuation">(</span>tup1<span class="token punctuation">)</span>Out<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">:</span> tuple<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><strong><em>注意:</em></strong>如果元组中只包含一个元素时，需要在该元素后面添加一个逗号，否则就无法构成一个元组，即要写成tup1=(1,)而不是tup=(1)，示例如下：<br>**例3.2元组的创建2</p><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">:</span> tup2 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">#在元素后面加一个逗号</span>In <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">:</span> type<span class="token punctuation">(</span>tup2<span class="token punctuation">)</span>Out<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">:</span> tupleIn <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">:</span> tup3<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">#没有在元素后面加一个逗号</span>In <span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">:</span> type<span class="token punctuation">(</span>tup3<span class="token punctuation">)</span>Out<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">:</span> int<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong><em>注意:</em></strong>元组一旦创建以后，元组中的元素是不可修改的，只能进行访问。</p><p><strong>例3.3元组的访问</strong><br>创建包含4个元素的元组</p><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">:</span> tup4 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">'finance'</span><span class="token punctuation">,</span><span class="token string">'风险管理'</span><span class="token punctuation">,</span><span class="token number">2019</span><span class="token punctuation">,</span><span class="token number">8.88</span><span class="token punctuation">)</span>In <span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">:</span> type<span class="token punctuation">(</span>tup4<span class="token punctuation">)</span>Out<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">:</span> tupleIn <span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">:</span> tup4<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>     <span class="token comment" spellcheck="true">#访问元组的第一个元素</span>Out<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token string">'finance'</span>In <span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">:</span> tup4<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>  <span class="token comment" spellcheck="true">#访问元组的最后一个元素</span>Out<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">8.88</span>In <span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span><span class="token punctuation">:</span> tup4<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token comment" spellcheck="true">#访问元组第2个至第3个元素</span>Out<span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token string">'风险管理'</span><span class="token punctuation">,</span> <span class="token number">2019</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-2列表"><a href="#3-2列表" class="headerlink" title="3.2列表"></a>3.2列表</h3><p>列表（list)是Python中最常用的数据结构，列表的创建方式与元组是比较相似的，创建方法如下：变量=[元素1，元素2，元素3，…]。元组与列表的异同如下：</p><table><thead><tr><th align="left"></th><th>不同点</th><th>相同点</th></tr></thead><tbody><tr><td align="left">元组</td><td>每个元素都是不可修改的，用小括号标识</td><td>1.可以容纳Python的任何对象</td></tr><tr><td align="left">列表</td><td>每个元素都是可以修改的，用中括号标识</td><td>2.元素是有序的，即每个元素都有一个索引值</td></tr><tr><td align="left"><strong>例3.4列表的创建</strong></td><td></td><td></td></tr></tbody></table><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span><span class="token punctuation">:</span> list1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>In <span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">]</span><span class="token punctuation">:</span> type<span class="token punctuation">(</span>list1<span class="token punctuation">)</span>Out<span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">]</span><span class="token punctuation">:</span> listIn <span class="token punctuation">[</span><span class="token number">14</span><span class="token punctuation">]</span><span class="token punctuation">:</span> list2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'finance'</span><span class="token punctuation">,</span><span class="token string">'risk management'</span><span class="token punctuation">,</span><span class="token string">'金融风险管理'</span><span class="token punctuation">,</span><span class="token number">2020</span><span class="token punctuation">,</span><span class="token number">88.8</span><span class="token punctuation">]</span>In <span class="token punctuation">[</span><span class="token number">15</span><span class="token punctuation">]</span><span class="token punctuation">:</span> type<span class="token punctuation">(</span>list2<span class="token punctuation">)</span>Out<span class="token punctuation">[</span><span class="token number">15</span><span class="token punctuation">]</span><span class="token punctuation">:</span> list<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>列表的访问与元组的访问是类似的。<br><strong>例3.5列表的访问</strong></p><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span> list2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'finance'</span><span class="token punctuation">,</span><span class="token string">'risk management'</span><span class="token punctuation">,</span><span class="token string">'金融风险管理'</span><span class="token punctuation">,</span><span class="token number">2020</span><span class="token punctuation">,</span><span class="token number">88.8</span><span class="token punctuation">]</span>In <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">:</span> list2<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>Out<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token string">'finance'</span>In <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">:</span> list2<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>Out<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">88.8</span>In <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">:</span> list2<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">:</span><span class="token number">5</span><span class="token punctuation">]</span>Out<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">2020</span><span class="token punctuation">,</span> <span class="token number">88.8</span><span class="token punctuation">]</span>In <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">:</span> list2<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">]</span>Out<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'金融风险管理'</span><span class="token punctuation">,</span> <span class="token number">2020</span><span class="token punctuation">]</span>In <span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">:</span> list2<span class="token punctuation">.</span>index<span class="token punctuation">(</span><span class="token number">2020</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">#index()函数得到元素2020在列表中的索引值</span>Out<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">3</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong><em>注意:</em></strong><br>0代表的是第一个元素，所以索引值等于3代表的是第4个元素。<br>对于已有的列表，在新增元素时可以运用append()函数，并且新元素是添加到列表的末尾。<br><strong>例3.6列表的添加</strong></p><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">:</span> list1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>In <span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">:</span> list1<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">0.0054</span><span class="token punctuation">)</span>In <span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">:</span> list1<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token number">0.0077</span><span class="token punctuation">)</span>In <span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span><span class="token punctuation">:</span> list1<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token number">0.0024</span><span class="token punctuation">)</span>In <span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span><span class="token punctuation">:</span> list1<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token number">0.0087</span><span class="token punctuation">)</span>In <span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">]</span><span class="token punctuation">:</span> list1<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token number">0.0038</span><span class="token punctuation">)</span>In <span class="token punctuation">[</span><span class="token number">14</span><span class="token punctuation">]</span><span class="token punctuation">:</span> list1Out<span class="token punctuation">[</span><span class="token number">14</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">0.0054</span><span class="token punctuation">,</span> <span class="token number">0.0077</span><span class="token punctuation">,</span> <span class="token number">0.0024</span><span class="token punctuation">,</span> <span class="token number">0.0087</span><span class="token punctuation">,</span> <span class="token number">0.0038</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>对列表中元素的删除分为两类：第一类是删除指定的元素，运用remove()函数；第二类是删除列表中全部的元素，也就是清空列表，需要运用clear(）函数。<br><strong>例3.7列表的删除1</strong></p><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">15</span><span class="token punctuation">]</span><span class="token punctuation">:</span> list1<span class="token punctuation">.</span>remove<span class="token punctuation">(</span><span class="token number">0.0024</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#删除list1中的0.0024</span>In <span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">:</span> list1Out<span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">0.0054</span><span class="token punctuation">,</span> <span class="token number">0.0077</span><span class="token punctuation">,</span> <span class="token number">0.0087</span><span class="token punctuation">,</span> <span class="token number">0.0038</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><strong><em>注意:</em></strong><br>如果列表中有多个相同值的元素x,则remove(x)是删除列表中值为x的第1个元素，而非全部x的元素。<br><strong>例3.8列表的删除2</strong></p><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">18</span><span class="token punctuation">]</span><span class="token punctuation">:</span> list3 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span>In <span class="token punctuation">[</span><span class="token number">19</span><span class="token punctuation">]</span><span class="token punctuation">:</span> list3<span class="token punctuation">.</span>remove<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#删除列表中值为2的第一个元素</span>In <span class="token punctuation">[</span><span class="token number">20</span><span class="token punctuation">]</span><span class="token punctuation">:</span> list3Out<span class="token punctuation">[</span><span class="token number">20</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span>In <span class="token punctuation">[</span><span class="token number">21</span><span class="token punctuation">]</span><span class="token punctuation">:</span> list3<span class="token punctuation">.</span>clear<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#将列表中的全部元素进行清空处理</span>In <span class="token punctuation">[</span><span class="token number">22</span><span class="token punctuation">]</span><span class="token punctuation">:</span> list3Out<span class="token punctuation">[</span><span class="token number">22</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>利用insert()函数在列表的指定位置插上元素，insert（）函数需要两个输入参数：第1个输入参数是位置参数，相当于索引值，第2个输入参数时需要插上的元素值。<br><strong>例3.9列表的插入</strong></p><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">23</span><span class="token punctuation">]</span><span class="token punctuation">:</span> list1 <span class="token operator">=</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">0.0054</span><span class="token punctuation">,</span><span class="token number">0.0077</span><span class="token punctuation">,</span><span class="token number">0.0087</span><span class="token punctuation">,</span><span class="token number">0.0038</span><span class="token punctuation">]</span>In <span class="token punctuation">[</span><span class="token number">24</span><span class="token punctuation">]</span><span class="token punctuation">:</span> list1<span class="token punctuation">.</span>insert<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">0.0024</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#在列表中第3个元素插入值0.0024</span>In <span class="token punctuation">[</span><span class="token number">25</span><span class="token punctuation">]</span><span class="token punctuation">:</span> list1Out<span class="token punctuation">[</span><span class="token number">25</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">0.0054</span><span class="token punctuation">,</span> <span class="token number">0.0077</span><span class="token punctuation">,</span> <span class="token number">0.0024</span><span class="token punctuation">,</span> <span class="token number">0.0087</span><span class="token punctuation">,</span> <span class="token number">0.0038</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>升序排序：由小到大。<br>降序排序：由大到小。<br>列表的排序，由小到大排序需要运用sort()函数，由大到小排序需要运用 reverse()函数。<br><strong>例3.10列表的排序</strong></p><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">26</span><span class="token punctuation">]</span><span class="token punctuation">:</span> list1<span class="token punctuation">.</span>sort<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#由小到大排序</span>In <span class="token punctuation">[</span><span class="token number">27</span><span class="token punctuation">]</span><span class="token punctuation">:</span> list1Out<span class="token punctuation">[</span><span class="token number">27</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">0.0054</span><span class="token punctuation">,</span> <span class="token number">0.0024</span><span class="token punctuation">,</span> <span class="token number">0.0038</span><span class="token punctuation">,</span> <span class="token number">0.0077</span><span class="token punctuation">,</span> <span class="token number">0.0087</span><span class="token punctuation">]</span>In <span class="token punctuation">[</span><span class="token number">28</span><span class="token punctuation">]</span><span class="token punctuation">:</span> list1<span class="token punctuation">.</span>reverse<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#由大到小排序</span>In <span class="token punctuation">[</span><span class="token number">29</span><span class="token punctuation">]</span><span class="token punctuation">:</span> list1Out<span class="token punctuation">[</span><span class="token number">29</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">0.0087</span><span class="token punctuation">,</span> <span class="token number">0.0077</span><span class="token punctuation">,</span> <span class="token number">0.0038</span><span class="token punctuation">,</span> <span class="token number">0.0024</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">0.0054</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>利用count()函数计算列表中反复出现的元素次数。<br><strong>例3.11列表中元素的计数</strong></p><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">30</span><span class="token punctuation">]</span><span class="token punctuation">:</span> list4 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span>In <span class="token punctuation">[</span><span class="token number">31</span><span class="token punctuation">]</span><span class="token punctuation">:</span> list4<span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#计算列表中数字1出现的次数</span>Out<span class="token punctuation">[</span><span class="token number">31</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">5</span>In <span class="token punctuation">[</span><span class="token number">32</span><span class="token punctuation">]</span><span class="token punctuation">:</span> list4<span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#计算列表中数字2出现的次数</span>Out<span class="token punctuation">[</span><span class="token number">32</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">3</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-3集合"><a href="#3-3集合" class="headerlink" title="3.3集合"></a>3.3集合</h3><p>在Python中集合（set）的概念接近数学上的集合。每个集合中的元素是无序且不重复的。集合的创建方法如下：变量={ 元素1，元素2，元素3，…}。集合不可以被截取，也不可能被索引，只能包括并集、交集、差集等集合运算，同时，集合元素可以被添加和删除。<br>1.集合的创建<br><strong>例3.12创建两个集合</strong></p><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">:</span> set1 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'上证综指'</span><span class="token punctuation">,</span><span class="token string">'深圳成指'</span><span class="token punctuation">,</span><span class="token string">'恒生指数'</span><span class="token punctuation">,</span><span class="token string">'日经225指数'</span><span class="token punctuation">,</span><span class="token string">'道琼斯指数'</span><span class="token punctuation">}</span>In <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">:</span> type<span class="token punctuation">(</span>set1<span class="token punctuation">)</span>Out<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">:</span> setIn <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">:</span> set2 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'标普500指数'</span><span class="token punctuation">,</span><span class="token string">'道琼斯指数'</span><span class="token punctuation">,</span><span class="token string">'沪深300指数'</span><span class="token punctuation">,</span><span class="token string">'日经225指数'</span><span class="token punctuation">,</span><span class="token string">'法国CAC40指数'</span><span class="token punctuation">,</span><span class="token string">'德国DAX指数'</span><span class="token punctuation">}</span>In <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">:</span> type<span class="token punctuation">(</span>set2<span class="token punctuation">)</span>Out<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">:</span> set<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>2.集合的运算——并集<br>集合的并集时需要运用到“|”符号。<br><strong>例3.13集合的并集</strong></p><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">:</span> set1<span class="token operator">|</span>set2Out<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">:</span><span class="token punctuation">{</span><span class="token string">'上证综指'</span><span class="token punctuation">,</span><span class="token string">'德国DAX指数'</span><span class="token punctuation">,</span><span class="token string">'恒生指数'</span><span class="token punctuation">,</span><span class="token string">'日经225指数'</span><span class="token punctuation">,</span><span class="token string">'标普500指数'</span><span class="token punctuation">,</span><span class="token string">'沪深300指数'</span><span class="token punctuation">,</span><span class="token string">'法国CAC40指数'</span><span class="token punctuation">,</span><span class="token string">'深圳成指'</span><span class="token punctuation">,</span><span class="token string">'道琼斯指数'</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>3.集合的运算——交集<br>集合的交集是需要运用到“&amp;”符号或者运用intersection函数。<br><strong>例3.14集合的交集</strong></p><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">:</span> set1<span class="token operator">&amp;</span>set2Out<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token string">'日经225指数'</span><span class="token punctuation">,</span> <span class="token string">'道琼斯指数'</span><span class="token punctuation">}</span>In <span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">:</span> set1<span class="token punctuation">.</span>intersection<span class="token punctuation">(</span>set2<span class="token punctuation">)</span>Out<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token string">'日经225指数'</span><span class="token punctuation">,</span> <span class="token string">'道琼斯指数'</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>4.集合的运算——差集<br>集合的差集是需要运用到数学中的减号“-”。<br><strong>例3.15集合的差集</strong></p><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">:</span> set1<span class="token operator">-</span>set2 <span class="token comment" spellcheck="true">#集合set1对集合set2的差集</span>Out<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token string">'上证综指'</span><span class="token punctuation">,</span> <span class="token string">'恒生指数'</span><span class="token punctuation">,</span> <span class="token string">'深圳成指'</span><span class="token punctuation">}</span> In <span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">:</span> set2<span class="token operator">-</span>set1 <span class="token comment" spellcheck="true">#集合set2对集合set1的差集</span>Out<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token string">'德国DAX指数'</span><span class="token punctuation">,</span> <span class="token string">'标普500指数'</span><span class="token punctuation">,</span> <span class="token string">'沪深300指数'</span><span class="token punctuation">,</span> <span class="token string">'法国CAC40指数'</span><span class="token punctuation">}</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>5.集合的添加<br>在已经创建的集合中添加新的元素，需要运用add()函数，输出结果会进行自行排序。<br><strong>例3.16集合中元素的添加</strong></p><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span><span class="token punctuation">:</span> set1<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token string">'德国DAX指数'</span><span class="token punctuation">)</span>In <span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span><span class="token punctuation">:</span> set1Out<span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token string">'上证综指'</span><span class="token punctuation">,</span> <span class="token string">'德国DAX指数'</span><span class="token punctuation">,</span> <span class="token string">'恒生指数'</span><span class="token punctuation">,</span> <span class="token string">'日经225指数'</span><span class="token punctuation">,</span> <span class="token string">'深圳成指'</span><span class="token punctuation">,</span> <span class="token string">'道琼斯指数'</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>6.集合的删除<br>运用discard()函数删除已创建集合中的元素，输出结果会进行自动排序。<br><strong>例3.17集合中元素的删除</strong></p><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">14</span><span class="token punctuation">]</span><span class="token punctuation">:</span> set1<span class="token punctuation">.</span>discard<span class="token punctuation">(</span><span class="token string">'日经225指数'</span><span class="token punctuation">)</span>In <span class="token punctuation">[</span><span class="token number">15</span><span class="token punctuation">]</span><span class="token punctuation">:</span> set1Out<span class="token punctuation">[</span><span class="token number">15</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token string">'上证综指'</span><span class="token punctuation">,</span> <span class="token string">'德国DAX指数'</span><span class="token punctuation">,</span> <span class="token string">'恒生指数'</span><span class="token punctuation">,</span> <span class="token string">'深圳成指'</span><span class="token punctuation">,</span> <span class="token string">'道琼斯指数'</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="3-4字典"><a href="#3-4字典" class="headerlink" title="3.4字典"></a>3.4字典</h3><p>字典的形式如下：变量={键1：值1，键2：值2，键3：值3， …}。字典的3个特征：1.是字典中的元素必须以键（key）和值（value）的形式成对出现，也就是所谓的键-值存储；2.键不可以重复，但是值可以重复；3.键不可以修改，但是值可以修改，并且可以是任意的数据类型。<br>1.字典的创建<br>字典的创建有两种方法：一是直接法，就是一次输入全部的键与值；二是间接法，就是先创建一个空字典，然后逐队输入键与值。<br><strong>例3.18字典的创建</strong></p><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">:</span> dict1 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'指数名称'</span><span class="token punctuation">:</span><span class="token string">'沪深300'</span><span class="token punctuation">,</span><span class="token string">'证券代码'</span><span class="token punctuation">:</span><span class="token string">'000300'</span><span class="token punctuation">,</span><span class="token string">'交易日期'</span><span class="token punctuation">:</span><span class="token string">'2019-01-08'</span><span class="token punctuation">,</span><span class="token string">'涨跌幅'</span><span class="token punctuation">:</span><span class="token string">'-0.0022'</span><span class="token punctuation">}</span> <span class="token comment" spellcheck="true">#直接法创建</span>In <span class="token punctuation">[</span><span class="token number">17</span><span class="token punctuation">]</span><span class="token punctuation">:</span> dict1Out<span class="token punctuation">[</span><span class="token number">17</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token string">'指数名称'</span><span class="token punctuation">:</span> <span class="token string">'沪深300'</span><span class="token punctuation">,</span> <span class="token string">'证券代码'</span><span class="token punctuation">:</span> <span class="token string">'000300'</span><span class="token punctuation">,</span> <span class="token string">'交易日期'</span><span class="token punctuation">:</span> <span class="token string">'2019-01-08'</span><span class="token punctuation">,</span> <span class="token string">'涨跌幅'</span><span class="token punctuation">:</span> <span class="token string">'-0.0022'</span><span class="token punctuation">}</span>In <span class="token punctuation">[</span><span class="token number">18</span><span class="token punctuation">]</span><span class="token punctuation">:</span> type<span class="token punctuation">(</span>dict1<span class="token punctuation">)</span>Out<span class="token punctuation">[</span><span class="token number">18</span><span class="token punctuation">]</span><span class="token punctuation">:</span> dictIn <span class="token punctuation">[</span><span class="token number">19</span><span class="token punctuation">]</span><span class="token punctuation">:</span> dict2<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token comment" spellcheck="true">#间接法创建</span>In <span class="token punctuation">[</span><span class="token number">22</span><span class="token punctuation">]</span><span class="token punctuation">:</span> dict2<span class="token punctuation">[</span><span class="token string">'指数名称'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'沪深300指数'</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span> dict2<span class="token punctuation">[</span><span class="token string">'证券代码'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'000300'</span>   <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span> dict2<span class="token punctuation">[</span><span class="token string">'交易日期'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'2019-01-08'</span>   <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span> dict2<span class="token punctuation">[</span><span class="token string">'涨跌幅'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">0.0022</span>In <span class="token punctuation">[</span><span class="token number">23</span><span class="token punctuation">]</span><span class="token punctuation">:</span> dict2Out<span class="token punctuation">[</span><span class="token number">23</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token string">'指数名称'</span><span class="token punctuation">:</span> <span class="token string">'沪深300指数'</span><span class="token punctuation">,</span> <span class="token string">'证券代码'</span><span class="token punctuation">:</span> <span class="token string">'000300'</span><span class="token punctuation">,</span> <span class="token string">'交易日期'</span><span class="token punctuation">:</span> <span class="token string">'2019-01-08'</span><span class="token punctuation">,</span> <span class="token string">'涨跌幅'</span><span class="token punctuation">:</span> <span class="token string">'-0.0022'</span><span class="token punctuation">}</span>In <span class="token punctuation">[</span><span class="token number">24</span><span class="token punctuation">]</span><span class="token punctuation">:</span> type<span class="token punctuation">(</span>dict2<span class="token punctuation">)</span>Out<span class="token punctuation">[</span><span class="token number">24</span><span class="token punctuation">]</span><span class="token punctuation">:</span> dict<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>2.字典的访问<br>通过keys()函数访问并输出字典中的全部键，用values()函数访问并输出字典中的全部值。<br><strong>例3.19字典的访问</strong></p><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">25</span><span class="token punctuation">]</span><span class="token punctuation">:</span> dict1<span class="token punctuation">.</span>keys<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">#输出全部键</span>Out<span class="token punctuation">[</span><span class="token number">25</span><span class="token punctuation">]</span><span class="token punctuation">:</span> dict_keys<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'指数名称'</span><span class="token punctuation">,</span> <span class="token string">'证券代码'</span><span class="token punctuation">,</span> <span class="token string">'交易日期'</span><span class="token punctuation">,</span> <span class="token string">'涨跌幅'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>In <span class="token punctuation">[</span><span class="token number">26</span><span class="token punctuation">]</span><span class="token punctuation">:</span> dict1<span class="token punctuation">.</span>values<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">#输出全部值</span>Out<span class="token punctuation">[</span><span class="token number">26</span><span class="token punctuation">]</span><span class="token punctuation">:</span> dict_values<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'沪深300'</span><span class="token punctuation">,</span> <span class="token string">'000300'</span><span class="token punctuation">,</span> <span class="token string">'2019-01-08'</span><span class="token punctuation">,</span> <span class="token string">'-0.0022'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>通过items()函数遍历字典的全部元素，将字典中的每个元素（即每队键与值）组成一个元组并放在列表中输出。<br><strong>例3.20items()函数</strong></p><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">27</span><span class="token punctuation">]</span><span class="token punctuation">:</span> dict1<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span>Out<span class="token punctuation">[</span><span class="token number">27</span><span class="token punctuation">]</span><span class="token punctuation">:</span> dict_items<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token string">'指数名称'</span><span class="token punctuation">,</span> <span class="token string">'沪深300'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">'证券代码'</span><span class="token punctuation">,</span> <span class="token string">'000300'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">'交易日期'</span><span class="token punctuation">,</span> <span class="token string">'2019-01-08'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">'涨跌幅'</span><span class="token punctuation">,</span> <span class="token string">'-0.0022'</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>仅仅是查询每个键对应的值，可以直接在括号中输入键码的方式完成。<br><strong>例3.21键码的查询</strong></p><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">28</span><span class="token punctuation">]</span><span class="token punctuation">:</span> dict1<span class="token punctuation">[</span><span class="token string">'涨跌幅'</span><span class="token punctuation">]</span>Out<span class="token punctuation">[</span><span class="token number">28</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token string">'-0.0022'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>3.字典的修改<br><strong>例3.22字典的修改</strong></p><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">29</span><span class="token punctuation">]</span><span class="token punctuation">:</span> dict1<span class="token punctuation">[</span><span class="token string">'交易日期'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'2019-01-07'</span>   <span class="token comment" spellcheck="true">#将交易日期“2019-01-08”修改为“2019-01-07”</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span> dict1<span class="token punctuation">[</span><span class="token string">'涨跌幅'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0.0061</span> <span class="token comment" spellcheck="true">#将涨跌幅-0.22%修改为0.61%</span>In <span class="token punctuation">[</span><span class="token number">30</span><span class="token punctuation">]</span><span class="token punctuation">:</span> dict1Out<span class="token punctuation">[</span><span class="token number">30</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token string">'指数名称'</span><span class="token punctuation">:</span> <span class="token string">'沪深300'</span><span class="token punctuation">,</span> <span class="token string">'证券代码'</span><span class="token punctuation">:</span> <span class="token string">'000300'</span><span class="token punctuation">,</span> <span class="token string">'交易日期'</span><span class="token punctuation">:</span> <span class="token string">'2019-01-07'</span><span class="token punctuation">,</span> <span class="token string">'涨跌幅'</span><span class="token punctuation">:</span> <span class="token number">0.0061</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>在已创建的字典中，新增加键与值，可以运用update()函数。<br><strong>3.23例26update()的演示</strong></p><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">31</span><span class="token punctuation">]</span><span class="token punctuation">:</span> dict1<span class="token punctuation">.</span>update<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">'收盘价'</span><span class="token punctuation">:</span><span class="token number">3054.3</span><span class="token punctuation">,</span><span class="token string">'成交额（亿元）'</span><span class="token punctuation">:</span><span class="token number">1057.04</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#新增收盘价和成交额两个键值对，注意外面是小括号，里面是大括号</span>In <span class="token punctuation">[</span><span class="token number">32</span><span class="token punctuation">]</span><span class="token punctuation">:</span> dict1Out<span class="token punctuation">[</span><span class="token number">32</span><span class="token punctuation">]</span><span class="token punctuation">:</span><span class="token punctuation">{</span><span class="token string">'指数名称'</span><span class="token punctuation">:</span> <span class="token string">'沪深300'</span><span class="token punctuation">,</span><span class="token string">'证券代码'</span><span class="token punctuation">:</span> <span class="token string">'000300'</span><span class="token punctuation">,</span><span class="token string">'交易日期'</span><span class="token punctuation">:</span> <span class="token string">'2019-01-07'</span><span class="token punctuation">,</span><span class="token string">'涨跌幅'</span><span class="token punctuation">:</span> <span class="token number">0.0061</span><span class="token punctuation">,</span><span class="token string">'收盘价'</span><span class="token punctuation">:</span> <span class="token number">3054.3</span><span class="token punctuation">,</span><span class="token string">'成交额（亿元）'</span><span class="token punctuation">:</span> <span class="token number">1057.04</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>在已经创建的字典中，删除相应的键与值，用del命令。<br><strong>例3.24del命令演示</strong></p><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">33</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token keyword">del</span> dict1<span class="token punctuation">[</span><span class="token string">'证券代码'</span><span class="token punctuation">]</span> <span class="token comment" spellcheck="true">#删除字典中证券代码</span>In <span class="token punctuation">[</span><span class="token number">34</span><span class="token punctuation">]</span><span class="token punctuation">:</span> dict1Out<span class="token punctuation">[</span><span class="token number">34</span><span class="token punctuation">]</span><span class="token punctuation">:</span><span class="token punctuation">{</span><span class="token string">'指数名称'</span><span class="token punctuation">:</span> <span class="token string">'沪深300'</span><span class="token punctuation">,</span><span class="token string">'交易日期'</span><span class="token punctuation">:</span> <span class="token string">'2019-01-07'</span><span class="token punctuation">,</span><span class="token string">'涨跌幅'</span><span class="token punctuation">:</span> <span class="token number">0.0061</span><span class="token punctuation">,</span><span class="token string">'收盘价'</span><span class="token punctuation">:</span> <span class="token number">3054.3</span><span class="token punctuation">,</span><span class="token string">'成交额（亿元）'</span><span class="token punctuation">:</span> <span class="token number">1057.04</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="4-Python的运算符号"><a href="#4-Python的运算符号" class="headerlink" title="4.Python的运算符号"></a>4.Python的运算符号</h2><p>Python中的运算包括算术运算、关系运算、赋值运算、逻辑运算。</p><h3 id="4-1基本算术运算符号"><a href="#4-1基本算术运算符号" class="headerlink" title="4.1基本算术运算符号"></a>4.1基本算术运算符号</h3><p>Python中的算术运算符<br>| 运算符号 | 描述                 | 示例     |<br>| ——– | ——————– | ——– |<br>| +        | 加法                 | 1+1→2    |<br>| -        | 减法                 | 1-1→0    |<br>| *        | 乘法                 | 1* 2→2   |<br>| /        | 除法                 | 1/2→0.5  |<br>| **       | 幂运算               | 2 ** 3→8 |<br>| %        | 模运算（取余数）     | 5%2→1    |<br>| //       | 整除（商的整数部分） | 9//4→2   |</p><p><strong>例4.1加法运算</strong></p><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span> a <span class="token operator">=</span> <span class="token number">2</span>   <span class="token comment" spellcheck="true">#整型</span>In <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">:</span> b <span class="token operator">=</span> <span class="token number">5</span>   <span class="token comment" spellcheck="true">#整型</span>In <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">:</span> c <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">.</span>  <span class="token comment" spellcheck="true">#浮点型</span>In <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">:</span> d<span class="token operator">=</span><span class="token number">3.8</span>   <span class="token comment" spellcheck="true">#浮点型</span>In <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">:</span> e<span class="token operator">=</span><span class="token number">6.95</span>  <span class="token comment" spellcheck="true">#浮点型</span>In <span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">:</span> a <span class="token operator">+</span> b   <span class="token comment" spellcheck="true">#整数与整数相加</span>Out<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">7</span>       <span class="token comment" spellcheck="true">#结果为整型</span>In <span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">:</span> a <span class="token operator">+</span> c   <span class="token comment" spellcheck="true">#整数与浮点型相加</span>Out<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">3.0</span>     <span class="token comment" spellcheck="true">#结果为浮点型</span>In <span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">:</span> d <span class="token operator">+</span> e   <span class="token comment" spellcheck="true">#浮点型与浮点型相加</span>Out<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">10.75</span>  <span class="token comment" spellcheck="true">#结果为浮点型</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>例4.2减法的运算</strong></p><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">:</span> a <span class="token operator">-</span> b   <span class="token comment" spellcheck="true">#整型与整型相减</span>Out<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token operator">-</span><span class="token number">3</span>     <span class="token comment" spellcheck="true">#结果为整型</span>In <span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">:</span> a <span class="token operator">-</span> c  <span class="token comment" spellcheck="true">#整型与浮点型相减</span>Out<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">1.0</span>   <span class="token comment" spellcheck="true">#结果为浮点型</span>In <span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span><span class="token punctuation">:</span> a <span class="token operator">-</span> e Out<span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token operator">-</span><span class="token number">4.95</span>In <span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span><span class="token punctuation">:</span> d <span class="token operator">-</span> e <span class="token comment" spellcheck="true">#浮点型与浮点型相减</span>Out<span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token operator">-</span><span class="token number">3.1500000000000004</span>    <span class="token comment" spellcheck="true">#结果为浮点型</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>可以运用round()函数控制输出结果为小数的小数位数，round()函数中的第一个参数代表了需要输出的结果，第二个参数代表输出结果的小数位数。</p><p><strong>例4.3round()函数的例子</strong></p><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">]</span><span class="token punctuation">:</span> round<span class="token punctuation">(</span>d<span class="token operator">-</span>e<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span>   <span class="token comment" spellcheck="true">#d-e输出结果保留2位小数</span>Out<span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token operator">-</span><span class="token number">3.15</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><strong>例4.4乘法的运算</strong></p><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">14</span><span class="token punctuation">]</span><span class="token punctuation">:</span> a <span class="token operator">*</span> b  <span class="token comment" spellcheck="true">#整型与整型相乘</span>Out<span class="token punctuation">[</span><span class="token number">14</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">10</span>    <span class="token comment" spellcheck="true">#结果为整型</span>In <span class="token punctuation">[</span><span class="token number">15</span><span class="token punctuation">]</span><span class="token punctuation">:</span> a <span class="token operator">*</span> c  <span class="token comment" spellcheck="true">#整型与浮点型相乘</span>Out<span class="token punctuation">[</span><span class="token number">15</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">2.0</span>   <span class="token comment" spellcheck="true">#结果为浮点型</span>In <span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">:</span> d <span class="token operator">*</span> e  <span class="token comment" spellcheck="true">#浮点型与浮点型相乘</span>Out<span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">26.41</span> <span class="token comment" spellcheck="true">#结果为浮点型</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>例4.5幂运算</strong></p><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">17</span><span class="token punctuation">]</span><span class="token punctuation">:</span> a <span class="token operator">**</span> b     <span class="token comment" spellcheck="true">#整型与整型的幂运算</span>Out<span class="token punctuation">[</span><span class="token number">17</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">32</span>        <span class="token comment" spellcheck="true">#结果为整型</span>In <span class="token punctuation">[</span><span class="token number">18</span><span class="token punctuation">]</span><span class="token punctuation">:</span> b <span class="token operator">**</span> a     <span class="token comment" spellcheck="true">#整型与整型的幂运算</span>Out<span class="token punctuation">[</span><span class="token number">18</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">25</span>        <span class="token comment" spellcheck="true">#结果为整型</span>In <span class="token punctuation">[</span><span class="token number">19</span><span class="token punctuation">]</span><span class="token punctuation">:</span> a <span class="token operator">**</span> c     <span class="token comment" spellcheck="true">#整型与浮点型的幂运算</span>Out<span class="token punctuation">[</span><span class="token number">19</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">2.0</span>       <span class="token comment" spellcheck="true">#结果为浮点型</span>In <span class="token punctuation">[</span><span class="token number">20</span><span class="token punctuation">]</span><span class="token punctuation">:</span> d <span class="token operator">**</span> e     <span class="token comment" spellcheck="true">#浮点型与浮点型的幂运算</span>Out<span class="token punctuation">[</span><span class="token number">20</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">10702.765165970346</span>     <span class="token comment" spellcheck="true">#结果为浮点型</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>对于除法，得到的结果始终是浮点数。<br><strong>例4.6除法运算</strong></p><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">21</span><span class="token punctuation">]</span><span class="token punctuation">:</span> f <span class="token operator">=</span> <span class="token number">4</span>In <span class="token punctuation">[</span><span class="token number">23</span><span class="token punctuation">]</span><span class="token punctuation">:</span> f <span class="token operator">/</span> a      <span class="token comment" spellcheck="true">#整型与整型相除</span>Out<span class="token punctuation">[</span><span class="token number">23</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">2.0</span>In <span class="token punctuation">[</span><span class="token number">24</span><span class="token punctuation">]</span><span class="token punctuation">:</span> b <span class="token operator">/</span> a     <span class="token comment" spellcheck="true">#整型与整型相除</span>Out<span class="token punctuation">[</span><span class="token number">24</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">2.5</span>In <span class="token punctuation">[</span><span class="token number">25</span><span class="token punctuation">]</span><span class="token punctuation">:</span> a <span class="token operator">/</span> c      <span class="token comment" spellcheck="true">#整型与浮点型相除</span>Out<span class="token punctuation">[</span><span class="token number">25</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">2.0</span>In <span class="token punctuation">[</span><span class="token number">26</span><span class="token punctuation">]</span><span class="token punctuation">:</span> e <span class="token operator">/</span> d      <span class="token comment" spellcheck="true">#浮点型与浮点型相除</span>Out<span class="token punctuation">[</span><span class="token number">26</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">1.8289473684210527</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>例4.7模运算（求余数）</strong></p><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">27</span><span class="token punctuation">]</span><span class="token punctuation">:</span> f <span class="token operator">%</span> aOut<span class="token punctuation">[</span><span class="token number">27</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">0</span>In <span class="token punctuation">[</span><span class="token number">28</span><span class="token punctuation">]</span><span class="token punctuation">:</span> b <span class="token operator">%</span> aOut<span class="token punctuation">[</span><span class="token number">28</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">1</span>In <span class="token punctuation">[</span><span class="token number">29</span><span class="token punctuation">]</span><span class="token punctuation">:</span> d <span class="token operator">%</span> aOut<span class="token punctuation">[</span><span class="token number">29</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">1.7999999999999998</span>In <span class="token punctuation">[</span><span class="token number">30</span><span class="token punctuation">]</span><span class="token punctuation">:</span> d <span class="token operator">%</span> eOut<span class="token punctuation">[</span><span class="token number">30</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">3.8</span>In <span class="token punctuation">[</span><span class="token number">31</span><span class="token punctuation">]</span><span class="token punctuation">:</span> e <span class="token operator">%</span> dOut<span class="token punctuation">[</span><span class="token number">31</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">3.1500000000000004</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>整除即只输出商的整数部分，并且是向下取整（或者是数轴上向左取整）。如果除数和被除数均是整数，输出的结果就是整型；如果除数或者被除数只要有一个是浮点型， 输出的结果是浮点型的整数。</p><p><strong>例4.8整除运算</strong></p><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">32</span><span class="token punctuation">]</span><span class="token punctuation">:</span> b <span class="token operator">//</span> a     <span class="token comment" spellcheck="true">#均是整型</span>Out<span class="token punctuation">[</span><span class="token number">32</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">2</span>         <span class="token comment" spellcheck="true">#结果是整型</span>In <span class="token punctuation">[</span><span class="token number">33</span><span class="token punctuation">]</span><span class="token punctuation">:</span> b <span class="token operator">//</span> d     <span class="token comment" spellcheck="true">#一个整型一个浮点型</span>Out<span class="token punctuation">[</span><span class="token number">33</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">1.0</span>       <span class="token comment" spellcheck="true">#结果是浮点型的整数</span>In <span class="token punctuation">[</span><span class="token number">34</span><span class="token punctuation">]</span><span class="token punctuation">:</span> e <span class="token operator">//</span> a     <span class="token comment" spellcheck="true">#一个整型一个浮点型</span>Out<span class="token punctuation">[</span><span class="token number">34</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">3.0</span>       <span class="token comment" spellcheck="true">#结果是浮点型的整数</span>In <span class="token punctuation">[</span><span class="token number">35</span><span class="token punctuation">]</span><span class="token punctuation">:</span> e <span class="token operator">//</span> d     <span class="token comment" spellcheck="true">#均是浮点型</span>Out<span class="token punctuation">[</span><span class="token number">35</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">1.0</span>       <span class="token comment" spellcheck="true">#结果是浮点型的整数</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-2关系运算符"><a href="#4-2关系运算符" class="headerlink" title="4.2关系运算符"></a>4.2关系运算符</h3><table><thead><tr><th align="center">运算符</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">==</td><td align="center">相等</td></tr><tr><td align="center">！=</td><td align="center">不等于</td></tr><tr><td align="center">&gt;</td><td align="center">大于</td></tr><tr><td align="center">&gt;=</td><td align="center">大于等于</td></tr><tr><td align="center">&lt;</td><td align="center">小于</td></tr><tr><td align="center">&lt;=</td><td align="center">小于等于</td></tr><tr><td align="center"><strong>注意:</strong> 在Python中，用双等号“==”表示等于，用单等号“=”则是赋值符号，关系运算符号的输出结果是True和False就是布尔值（bool）。</td><td align="center"></td></tr></tbody></table><h3 id="4-3赋值运算符"><a href="#4-3赋值运算符" class="headerlink" title="4.3赋值运算符"></a>4.3赋值运算符</h3><table><thead><tr><th>运算法</th><th align="center">描述</th><th>举例</th></tr></thead><tbody><tr><td>+=</td><td align="center">加法赋值运算符，等价于y=y+x 注；相当于对等式左边的变量y进行新的赋值</td><td>y+=x</td></tr><tr><td>-=</td><td align="center">减法赋值运算符，等价于y=y-x</td><td>y-=x</td></tr><tr><td>* =</td><td align="center">乘法赋值运算符，等价于y=y* x</td><td>y*=x</td></tr><tr><td>/=</td><td align="center">除法赋值运算符，等价于y=y/x</td><td>y/=x</td></tr><tr><td>** =</td><td align="center">幂赋值运算符，等价于y=y** x</td><td>y**=x</td></tr><tr><td>%=</td><td align="center">模赋值运算符，等价于y=y% x</td><td>y%=x</td></tr><tr><td>//=</td><td align="center">整除赋值运算符，等价于y=y//x</td><td>y//=x</td></tr></tbody></table><h3 id="4-4成员运算符"><a href="#4-4成员运算符" class="headerlink" title="4.4成员运算符"></a>4.4成员运算符</h3><p>Python的成员运算符号，可以判断一个元素是否在某一个列表中，可以判断一个字符是否属于某个字符串。<br>| 成员运算符 | 具体描述                                                     |<br>| ———- | ———————————————————— |<br>| in         | 如果一个变量在指定的另一个变量（列表、元组、字符串等）中找到相对应的值，则返回True,否则返回False。 |<br>| not in     | 如果一个变量在指定的另一个变量中没有找到相应的值，返回True,否则返回False。 |<br><strong>例4.9成员运算符例子</strong></p><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">36</span><span class="token punctuation">]</span><span class="token punctuation">:</span> a <span class="token operator">=</span> <span class="token number">1</span>In <span class="token punctuation">[</span><span class="token number">37</span><span class="token punctuation">]</span><span class="token punctuation">:</span> b <span class="token operator">=</span> <span class="token number">3</span>In <span class="token punctuation">[</span><span class="token number">38</span><span class="token punctuation">]</span><span class="token punctuation">:</span> c <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">]</span>In <span class="token punctuation">[</span><span class="token number">39</span><span class="token punctuation">]</span><span class="token punctuation">:</span> a <span class="token keyword">in</span> cOut<span class="token punctuation">[</span><span class="token number">39</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token boolean">True</span>In <span class="token punctuation">[</span><span class="token number">40</span><span class="token punctuation">]</span><span class="token punctuation">:</span> b <span class="token keyword">in</span> cOut<span class="token punctuation">[</span><span class="token number">40</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token boolean">False</span><span class="token comment" spellcheck="true"># 考察字符串是否在一个列表中</span>In <span class="token punctuation">[</span><span class="token number">41</span><span class="token punctuation">]</span><span class="token punctuation">:</span> d <span class="token operator">=</span> <span class="token string">'金融'</span>In <span class="token punctuation">[</span><span class="token number">42</span><span class="token punctuation">]</span><span class="token punctuation">:</span> e <span class="token operator">=</span> <span class="token string">'风险管理'</span>In <span class="token punctuation">[</span><span class="token number">43</span><span class="token punctuation">]</span><span class="token punctuation">:</span> f <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'finance'</span><span class="token punctuation">,</span><span class="token string">'风险管理'</span><span class="token punctuation">,</span><span class="token string">'波动率'</span><span class="token punctuation">]</span>In <span class="token punctuation">[</span><span class="token number">44</span><span class="token punctuation">]</span><span class="token punctuation">:</span> d <span class="token keyword">in</span> fOut<span class="token punctuation">[</span><span class="token number">44</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token boolean">False</span>In <span class="token punctuation">[</span><span class="token number">45</span><span class="token punctuation">]</span><span class="token punctuation">:</span> e <span class="token keyword">in</span> fOut<span class="token punctuation">[</span><span class="token number">45</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="5-Python的主要内置函数"><a href="#5-Python的主要内置函数" class="headerlink" title="5.Python的主要内置函数"></a>5.Python的主要内置函数</h2><p>Python内置函数是指直接调用而无需导入（import），是Python自带的函数，任何时候都可以直接使用。Python内置函数有很多，可以运用命令<code>dir(__builtins__)</code>(双下划线）查看。<br>** 例5.1Python的内置函数**</p><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">48</span><span class="token punctuation">]</span><span class="token punctuation">:</span> dir<span class="token punctuation">(</span>__builtins__<span class="token punctuation">)</span>Out<span class="token punctuation">[</span><span class="token number">48</span><span class="token punctuation">]</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">'ArithmeticError'</span><span class="token punctuation">,</span><span class="token string">'AssertionError'</span><span class="token punctuation">,</span><span class="token string">'AttributeError'</span><span class="token punctuation">,</span><span class="token string">'BaseException'</span><span class="token punctuation">,</span><span class="token string">'BlockingIOError'</span><span class="token punctuation">,</span><span class="token string">'BrokenPipeError'</span><span class="token punctuation">,</span><span class="token string">'BufferError'</span><span class="token punctuation">,</span><span class="token string">'BytesWarning'</span><span class="token punctuation">,</span><span class="token string">'ChildProcessError'</span><span class="token punctuation">,</span><span class="token string">'ConnectionAbortedError'</span><span class="token punctuation">,</span><span class="token string">'ConnectionError'</span><span class="token punctuation">,</span><span class="token string">'ConnectionRefusedError'</span><span class="token punctuation">,</span><span class="token string">'ConnectionResetError'</span><span class="token punctuation">,</span><span class="token string">'DeprecationWarning'</span><span class="token punctuation">,</span><span class="token string">'EOFError'</span><span class="token punctuation">,</span><span class="token string">'Ellipsis'</span><span class="token punctuation">,</span><span class="token string">'EnvironmentError'</span><span class="token punctuation">,</span><span class="token string">'Exception'</span><span class="token punctuation">,</span><span class="token string">'False'</span><span class="token punctuation">,</span><span class="token string">'FileExistsError'</span><span class="token punctuation">,</span><span class="token string">'FileNotFoundError'</span><span class="token punctuation">,</span><span class="token string">'FloatingPointError'</span><span class="token punctuation">,</span><span class="token string">'FutureWarning'</span><span class="token punctuation">,</span><span class="token string">'GeneratorExit'</span><span class="token punctuation">,</span><span class="token string">'IOError'</span><span class="token punctuation">,</span><span class="token string">'ImportError'</span><span class="token punctuation">,</span><span class="token string">'ImportWarning'</span><span class="token punctuation">,</span><span class="token string">'IndentationError'</span><span class="token punctuation">,</span><span class="token string">'IndexError'</span><span class="token punctuation">,</span><span class="token string">'InterruptedError'</span><span class="token punctuation">,</span><span class="token string">'IsADirectoryError'</span><span class="token punctuation">,</span><span class="token string">'KeyError'</span><span class="token punctuation">,</span><span class="token string">'KeyboardInterrupt'</span><span class="token punctuation">,</span><span class="token string">'LookupError'</span><span class="token punctuation">,</span><span class="token string">'MemoryError'</span><span class="token punctuation">,</span><span class="token string">'ModuleNotFoundError'</span><span class="token punctuation">,</span><span class="token string">'NameError'</span><span class="token punctuation">,</span><span class="token string">'None'</span><span class="token punctuation">,</span><span class="token string">'NotADirectoryError'</span><span class="token punctuation">,</span><span class="token string">'NotImplemented'</span><span class="token punctuation">,</span><span class="token string">'NotImplementedError'</span><span class="token punctuation">,</span><span class="token string">'OSError'</span><span class="token punctuation">,</span><span class="token string">'OverflowError'</span><span class="token punctuation">,</span><span class="token string">'PendingDeprecationWarning'</span><span class="token punctuation">,</span><span class="token string">'PermissionError'</span><span class="token punctuation">,</span><span class="token string">'ProcessLookupError'</span><span class="token punctuation">,</span><span class="token string">'RecursionError'</span><span class="token punctuation">,</span><span class="token string">'ReferenceError'</span><span class="token punctuation">,</span><span class="token string">'ResourceWarning'</span><span class="token punctuation">,</span><span class="token string">'RuntimeError'</span><span class="token punctuation">,</span><span class="token string">'RuntimeWarning'</span><span class="token punctuation">,</span><span class="token string">'StopAsyncIteration'</span><span class="token punctuation">,</span><span class="token string">'StopIteration'</span><span class="token punctuation">,</span><span class="token string">'SyntaxError'</span><span class="token punctuation">,</span><span class="token string">'SyntaxWarning'</span><span class="token punctuation">,</span><span class="token string">'SystemError'</span><span class="token punctuation">,</span><span class="token string">'SystemExit'</span><span class="token punctuation">,</span><span class="token string">'TabError'</span><span class="token punctuation">,</span><span class="token string">'TimeoutError'</span><span class="token punctuation">,</span><span class="token string">'True'</span><span class="token punctuation">,</span><span class="token string">'TypeError'</span><span class="token punctuation">,</span><span class="token string">'UnboundLocalError'</span><span class="token punctuation">,</span><span class="token string">'UnicodeDecodeError'</span><span class="token punctuation">,</span><span class="token string">'UnicodeEncodeError'</span><span class="token punctuation">,</span><span class="token string">'UnicodeError'</span><span class="token punctuation">,</span><span class="token string">'UnicodeTranslateError'</span><span class="token punctuation">,</span><span class="token string">'UnicodeWarning'</span><span class="token punctuation">,</span><span class="token string">'UserWarning'</span><span class="token punctuation">,</span><span class="token string">'ValueError'</span><span class="token punctuation">,</span><span class="token string">'Warning'</span><span class="token punctuation">,</span><span class="token string">'WindowsError'</span><span class="token punctuation">,</span><span class="token string">'ZeroDivisionError'</span><span class="token punctuation">,</span><span class="token string">'__IPYTHON__'</span><span class="token punctuation">,</span><span class="token string">'__build_class__'</span><span class="token punctuation">,</span><span class="token string">'__debug__'</span><span class="token punctuation">,</span><span class="token string">'__doc__'</span><span class="token punctuation">,</span><span class="token string">'__import__'</span><span class="token punctuation">,</span><span class="token string">'__loader__'</span><span class="token punctuation">,</span><span class="token string">'__name__'</span><span class="token punctuation">,</span><span class="token string">'__package__'</span><span class="token punctuation">,</span><span class="token string">'__spec__'</span><span class="token punctuation">,</span><span class="token string">'abs'</span><span class="token punctuation">,</span><span class="token string">'all'</span><span class="token punctuation">,</span><span class="token string">'any'</span><span class="token punctuation">,</span><span class="token string">'ascii'</span><span class="token punctuation">,</span><span class="token string">'bin'</span><span class="token punctuation">,</span><span class="token string">'bool'</span><span class="token punctuation">,</span><span class="token string">'breakpoint'</span><span class="token punctuation">,</span><span class="token string">'bytearray'</span><span class="token punctuation">,</span><span class="token string">'bytes'</span><span class="token punctuation">,</span><span class="token string">'callable'</span><span class="token punctuation">,</span><span class="token string">'cell_count'</span><span class="token punctuation">,</span><span class="token string">'chr'</span><span class="token punctuation">,</span><span class="token string">'classmethod'</span><span class="token punctuation">,</span><span class="token string">'compile'</span><span class="token punctuation">,</span><span class="token string">'complex'</span><span class="token punctuation">,</span><span class="token string">'copyright'</span><span class="token punctuation">,</span><span class="token string">'credits'</span><span class="token punctuation">,</span><span class="token string">'debugcell'</span><span class="token punctuation">,</span><span class="token string">'debugfile'</span><span class="token punctuation">,</span><span class="token string">'delattr'</span><span class="token punctuation">,</span><span class="token string">'dict'</span><span class="token punctuation">,</span><span class="token string">'dir'</span><span class="token punctuation">,</span><span class="token string">'display'</span><span class="token punctuation">,</span><span class="token string">'divmod'</span><span class="token punctuation">,</span><span class="token string">'enumerate'</span><span class="token punctuation">,</span><span class="token string">'eval'</span><span class="token punctuation">,</span><span class="token string">'exec'</span><span class="token punctuation">,</span><span class="token string">'filter'</span><span class="token punctuation">,</span><span class="token string">'float'</span><span class="token punctuation">,</span><span class="token string">'format'</span><span class="token punctuation">,</span><span class="token string">'frozenset'</span><span class="token punctuation">,</span><span class="token string">'get_ipython'</span><span class="token punctuation">,</span><span class="token string">'getattr'</span><span class="token punctuation">,</span><span class="token string">'globals'</span><span class="token punctuation">,</span><span class="token string">'hasattr'</span><span class="token punctuation">,</span><span class="token string">'hash'</span><span class="token punctuation">,</span><span class="token string">'help'</span><span class="token punctuation">,</span><span class="token string">'hex'</span><span class="token punctuation">,</span><span class="token string">'id'</span><span class="token punctuation">,</span><span class="token string">'input'</span><span class="token punctuation">,</span><span class="token string">'int'</span><span class="token punctuation">,</span><span class="token string">'isinstance'</span><span class="token punctuation">,</span><span class="token string">'issubclass'</span><span class="token punctuation">,</span><span class="token string">'iter'</span><span class="token punctuation">,</span><span class="token string">'len'</span><span class="token punctuation">,</span><span class="token string">'license'</span><span class="token punctuation">,</span><span class="token string">'list'</span><span class="token punctuation">,</span><span class="token string">'locals'</span><span class="token punctuation">,</span><span class="token string">'map'</span><span class="token punctuation">,</span><span class="token string">'max'</span><span class="token punctuation">,</span><span class="token string">'memoryview'</span><span class="token punctuation">,</span><span class="token string">'min'</span><span class="token punctuation">,</span><span class="token string">'next'</span><span class="token punctuation">,</span><span class="token string">'object'</span><span class="token punctuation">,</span><span class="token string">'oct'</span><span class="token punctuation">,</span><span class="token string">'open'</span><span class="token punctuation">,</span><span class="token string">'ord'</span><span class="token punctuation">,</span><span class="token string">'pow'</span><span class="token punctuation">,</span><span class="token string">'print'</span><span class="token punctuation">,</span><span class="token string">'property'</span><span class="token punctuation">,</span><span class="token string">'range'</span><span class="token punctuation">,</span><span class="token string">'repr'</span><span class="token punctuation">,</span><span class="token string">'reversed'</span><span class="token punctuation">,</span><span class="token string">'round'</span><span class="token punctuation">,</span><span class="token string">'runcell'</span><span class="token punctuation">,</span><span class="token string">'runfile'</span><span class="token punctuation">,</span><span class="token string">'set'</span><span class="token punctuation">,</span><span class="token string">'setattr'</span><span class="token punctuation">,</span><span class="token string">'slice'</span><span class="token punctuation">,</span><span class="token string">'sorted'</span><span class="token punctuation">,</span><span class="token string">'staticmethod'</span><span class="token punctuation">,</span><span class="token string">'str'</span><span class="token punctuation">,</span><span class="token string">'sum'</span><span class="token punctuation">,</span><span class="token string">'super'</span><span class="token punctuation">,</span><span class="token string">'tuple'</span><span class="token punctuation">,</span><span class="token string">'type'</span><span class="token punctuation">,</span><span class="token string">'vars'</span><span class="token punctuation">,</span><span class="token string">'zip'</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>Python的内置函数从abs开始一直到到zip结束，共计75个。<br>可以用help()函数查询各种函数的具体用法，输入的格式就是help()的括号内输入需要查询的函数。<br><strong>例5.2Python函数的查询</strong></p><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">49</span><span class="token punctuation">]</span><span class="token punctuation">:</span> help<span class="token punctuation">(</span>zip<span class="token punctuation">)</span>Help on <span class="token keyword">class</span> <span class="token class-name">zip</span> <span class="token keyword">in</span> module builtins<span class="token punctuation">:</span><span class="token keyword">class</span> <span class="token class-name">zip</span><span class="token punctuation">(</span>object<span class="token punctuation">)</span><span class="token operator">|</span> zip<span class="token punctuation">(</span><span class="token operator">*</span>iterables<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">-</span><span class="token operator">></span> zip object<span class="token operator">|</span><span class="token operator">|</span> Return a zip object whose <span class="token punctuation">.</span>__next__<span class="token punctuation">(</span><span class="token punctuation">)</span> method returns a tuple where<span class="token operator">|</span> the i<span class="token operator">-</span>th element comes <span class="token keyword">from</span> the i<span class="token operator">-</span>th iterable argument<span class="token punctuation">.</span> The <span class="token punctuation">.</span>__next__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">|</span> method continues until the shortest iterable <span class="token keyword">in</span> the argument sequence<span class="token operator">|</span> <span class="token keyword">is</span> exhausted <span class="token operator">and</span> then it raises StopIteration<span class="token punctuation">.</span><span class="token operator">|</span><span class="token operator">|</span> Methods defined here<span class="token punctuation">:</span><span class="token operator">|</span><span class="token operator">|</span> __getattribute__<span class="token punctuation">(</span>self<span class="token punctuation">,</span> name<span class="token punctuation">,</span> <span class="token operator">/</span><span class="token punctuation">)</span><span class="token operator">|</span>Return getattr<span class="token punctuation">(</span>self<span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token operator">|</span><span class="token operator">|</span> __iter__<span class="token punctuation">(</span>self<span class="token punctuation">,</span> <span class="token operator">/</span><span class="token punctuation">)</span><span class="token operator">|</span> Implement iter<span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token operator">|</span><span class="token operator">|</span> __next__<span class="token punctuation">(</span>self<span class="token punctuation">,</span> <span class="token operator">/</span><span class="token punctuation">)</span><span class="token operator">|</span> Implement next<span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token operator">|</span><span class="token operator">|</span> __reduce__<span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token operator">|</span> Return state information <span class="token keyword">for</span> pickling<span class="token punctuation">.</span><span class="token operator">|</span><span class="token operator">|</span> <span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">|</span> Static methods defined here<span class="token punctuation">:</span><span class="token operator">|</span><span class="token operator">|</span> __new__<span class="token punctuation">(</span><span class="token operator">*</span>args<span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span> <span class="token keyword">from</span> builtins<span class="token punctuation">.</span>type<span class="token operator">|</span> Create <span class="token operator">and</span> <span class="token keyword">return</span> a new object<span class="token punctuation">.</span> See help<span class="token punctuation">(</span>type<span class="token punctuation">)</span> <span class="token keyword">for</span> acc<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="6-自定义函数"><a href="#6-自定义函数" class="headerlink" title="6.自定义函数"></a>6.自定义函数</h2><p>在Python中定义函数有两种方式：一种是利用def 语法构建新的函数，另一种是直接运用lambda函数构建新的函数。</p><h3 id="6-1运用def语法"><a href="#6-1运用def语法" class="headerlink" title="6.1运用def语法"></a>6.1运用def语法</h3><p>运用def语法时，函数的基本框架如下：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">def</span> 函数名（参数）<span class="token punctuation">:</span>    <span class="token triple-quoted-string string">'''函数说明文档'''</span>    函数主体    <span class="token keyword">return</span> 返回对象<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><strong>注意：</strong>函数说明文档可以选择选择不写。此外，要注意缩进，具体就是在输入函数主体以及return的前面要缩进，在Python中的缩进是运用 Tab键来完成，但是在IPython中会自动进行缩进。<br><strong>例6.1利用def(）函数计算算术平均收益率</strong></p><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token keyword">def</span> <span class="token function">mean_a</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true">#定义mean_a()函数求解5日涨跌幅的算术平均收益率</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">'''定义一个求解算术平均收益率的函数      ...:     r:代表收益率的一个列表'''</span>       <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>     total <span class="token operator">=</span> sum<span class="token punctuation">(</span>r<span class="token punctuation">)</span>      <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>     <span class="token keyword">return</span> total<span class="token operator">/</span>len<span class="token punctuation">(</span>r<span class="token punctuation">)</span>In <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">:</span> list1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">0.0054</span><span class="token punctuation">,</span><span class="token number">0.0077</span><span class="token punctuation">,</span><span class="token number">0.0024</span><span class="token punctuation">,</span><span class="token number">0.0087</span><span class="token punctuation">,</span><span class="token number">0.0038</span><span class="token punctuation">]</span>In <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">:</span> mean_a<span class="token punctuation">(</span>r <span class="token operator">=</span> list1<span class="token punctuation">)</span>Out<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">0.00344</span>In <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">:</span> sum<span class="token punctuation">(</span>list1<span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">5</span>    <span class="token comment" spellcheck="true">#第二种方法计算算术平均收益率</span>Out<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">0.00344</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="6-2运用lambda函数"><a href="#6-2运用lambda函数" class="headerlink" title="6.2运用lambda函数"></a>6.2运用lambda函数</h3><p> lambda（）函数在Python中被称为匿名函数，具体的函数基本格式如下：<br> 函数名 = lambda 参数：表达式<br> 运用lambda()函数时，撰写的代码通常控制在一行之内，因此可以用lambda写相对简单 函数，或者是复杂函数的一个组成部分。<br><strong>例6.2利用lambda函数计算算术平均收益率</strong></p><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">:</span> mean_A <span class="token operator">=</span> <span class="token keyword">lambda</span> r<span class="token punctuation">:</span> sum<span class="token punctuation">(</span>r<span class="token punctuation">)</span><span class="token operator">/</span>len<span class="token punctuation">(</span>r<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">#用lambda()定义函数</span>In <span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">:</span> mean_A<span class="token punctuation">(</span>r <span class="token operator">=</span> list1<span class="token punctuation">)</span>Out<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">0.00344</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="7-Python的语句"><a href="#7-Python的语句" class="headerlink" title="7.Python的语句"></a>7.Python的语句</h2><p>在Python中，除了顺序语句之外，还有条件语句和循环语句两大类，可以单独运用，也可以结合运用。</p><h3 id="7-1条件语句"><a href="#7-1条件语句" class="headerlink" title="7.1条件语句"></a>7.1条件语句</h3><p>条件语句是通过一条或多条语句的执行结果（True或False）来决定执行的代码块。条件语句的基本语法框架分为以下三大类型：<br>第1种类型是只有一个判断条件，即单分支。</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">if</span> 判断语句<span class="token punctuation">:</span>    执行语句 <span class="token number">1</span><span class="token keyword">else</span><span class="token punctuation">:</span>    执行语句 <span class="token number">2</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>第二种类型是有两个判断条件，即双分支。</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">if</span> 判断语句 <span class="token number">1</span><span class="token punctuation">:</span>     执行语句 <span class="token number">1</span><span class="token keyword">elif</span> 判断语句 <span class="token number">2</span><span class="token punctuation">:</span>     执行语句 <span class="token number">2</span><span class="token keyword">else</span><span class="token punctuation">:</span>     执行语句 <span class="token number">3</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第三种类型是有3个或3个以上的判断条件，即多分支。</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">if</span> 判断语句 <span class="token number">1</span><span class="token punctuation">:</span>     执行语句 <span class="token number">1</span><span class="token keyword">elif</span> 判断语句 <span class="token number">2</span><span class="token punctuation">:</span>     执行语句 <span class="token number">2</span><span class="token keyword">elif</span> 判断语句 <span class="token number">3</span><span class="token punctuation">:</span>     执行语句 <span class="token number">3</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token keyword">elif</span> 判断语句 n<span class="token punctuation">:</span>     执行语句 n<span class="token keyword">else</span><span class="token punctuation">:</span>    执行语句 n<span class="token operator">+</span><span class="token number">1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>** 例7.1只有一个判断条件**</p><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">:</span> r1 <span class="token operator">=</span> <span class="token number">0.024</span>     <span class="token comment" spellcheck="true"># 用于判断收益率是正的还是非正收益</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span> <span class="token keyword">if</span> r1 <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">:</span>   <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'正收益:'</span><span class="token punctuation">,</span>r1<span class="token punctuation">)</span>   <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span> <span class="token keyword">else</span><span class="token punctuation">:</span>   <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'非正收益:'</span><span class="token punctuation">,</span>r1<span class="token punctuation">)</span>正收益<span class="token punctuation">:</span> <span class="token number">0.024</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>例7.2运用两个条件</strong></p><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">:</span> r2 <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">0.0074</span>In <span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token keyword">if</span> r2 <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">:</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'正收益:'</span><span class="token punctuation">,</span>r2<span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>       <span class="token keyword">elif</span> r2 <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'零收益:'</span><span class="token punctuation">,</span>r2<span class="token punctuation">)</span>   <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>       <span class="token keyword">else</span><span class="token punctuation">:</span>   <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'负收益:'</span><span class="token punctuation">,</span>r2<span class="token punctuation">)</span>负收益<span class="token punctuation">:</span> <span class="token operator">-</span><span class="token number">0.0074</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="7-2循环语句"><a href="#7-2循环语句" class="headerlink" title="7.2循环语句"></a>7.2循环语句</h3><p>在Pyhton中，循环语句包括for循环和while循环。<br><strong>1.for循环</strong><br>for循环可以遍历各种序列的项目，如一个列表或字符串。for循环的语法结构如下：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">for</span> 迭代变量<span class="token punctuation">(</span>iterating_var<span class="token punctuation">)</span> <span class="token keyword">in</span> 序列（比如列表、字符串等）：    陈述<span class="token punctuation">(</span> statements<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><strong>例7.3计算几何平均收益率</strong></p><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token keyword">def</span> <span class="token function">mean_g</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>     <span class="token triple-quoted-string string">'''定义一个计算几何平均收益率的函数   ...:     r:代表收益率的一个列表'''</span>   <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>     total <span class="token operator">=</span> <span class="token number">1</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>     <span class="token keyword">for</span> i <span class="token keyword">in</span> r<span class="token punctuation">:</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>        total <span class="token operator">*=</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">+</span>i<span class="token punctuation">)</span>   <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> pow<span class="token punctuation">(</span>total<span class="token punctuation">,</span><span class="token number">1</span><span class="token operator">/</span>len<span class="token punctuation">(</span>r<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span>In <span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span><span class="token punctuation">:</span> list1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">0.0054</span><span class="token punctuation">,</span><span class="token number">0.0077</span><span class="token punctuation">,</span><span class="token number">0.0024</span><span class="token punctuation">,</span><span class="token number">0.0087</span><span class="token punctuation">,</span><span class="token number">0.0038</span><span class="token punctuation">]</span>In <span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">]</span><span class="token punctuation">:</span> mean_g<span class="token punctuation">(</span>list1<span class="token punctuation">)</span>Out<span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">0.0034274943754675213</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>2.while循环</strong><br>while循环在某条件下，循环执行某段程序，以处理需要重复处理的相同任务。基本的语法结构如下：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">while</span> 判断条件：        循环语句<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><strong>例7.4利用while循环输出0-10</strong></p><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">14</span><span class="token punctuation">]</span><span class="token punctuation">:</span> n <span class="token operator">=</span> <span class="token number">0</span>In <span class="token punctuation">[</span><span class="token number">15</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token keyword">while</span> n <span class="token operator">&lt;=</span> <span class="token number">10</span><span class="token punctuation">:</span>   <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'输出数字是:'</span><span class="token punctuation">,</span>n<span class="token punctuation">)</span>   <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>            n <span class="token operator">+=</span> <span class="token number">1</span>输出数字是<span class="token punctuation">:</span> <span class="token number">0</span>输出数字是<span class="token punctuation">:</span> <span class="token number">1</span>输出数字是<span class="token punctuation">:</span> <span class="token number">2</span>输出数字是<span class="token punctuation">:</span> <span class="token number">3</span>输出数字是<span class="token punctuation">:</span> <span class="token number">4</span>输出数字是<span class="token punctuation">:</span> <span class="token number">5</span>输出数字是<span class="token punctuation">:</span> <span class="token number">6</span>输出数字是<span class="token punctuation">:</span> <span class="token number">7</span>输出数字是<span class="token punctuation">:</span> <span class="token number">8</span>输出数字是<span class="token punctuation">:</span> <span class="token number">9</span>输出数字是<span class="token punctuation">:</span> <span class="token number">10</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在Python中通过range()函数生成整数数列，同时，可以通过while循环生成同样的整数数列。<br><strong>例7.5通过while循环生成0-9的整数数列</strong></p><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">20</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span>   <span class="token comment" spellcheck="true">#通过range函数生成0-9的整数</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'i='</span><span class="token punctuation">,</span>i<span class="token punctuation">)</span>i <span class="token operator">=</span> <span class="token number">0</span>i <span class="token operator">=</span> <span class="token number">1</span>i <span class="token operator">=</span> <span class="token number">2</span>i <span class="token operator">=</span> <span class="token number">3</span>i <span class="token operator">=</span> <span class="token number">4</span>i <span class="token operator">=</span> <span class="token number">5</span>i <span class="token operator">=</span> <span class="token number">6</span>i <span class="token operator">=</span> <span class="token number">7</span>i <span class="token operator">=</span> <span class="token number">8</span>i <span class="token operator">=</span> <span class="token number">9</span>In <span class="token punctuation">[</span><span class="token number">23</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token keyword">while</span> n<span class="token operator">&lt;</span><span class="token number">10</span><span class="token punctuation">:</span>   <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'n='</span><span class="token punctuation">,</span>n<span class="token punctuation">)</span>   <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>            list1<span class="token punctuation">.</span>append<span class="token punctuation">(</span>n<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">#使用append()函数在列表中添加元素</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>            n<span class="token operator">+=</span><span class="token number">1</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>         <span class="token keyword">print</span><span class="token punctuation">(</span>list1<span class="token punctuation">)</span>n<span class="token operator">=</span> <span class="token number">0</span>n<span class="token operator">=</span> <span class="token number">1</span>n<span class="token operator">=</span> <span class="token number">2</span>n<span class="token operator">=</span> <span class="token number">3</span>n<span class="token operator">=</span> <span class="token number">4</span>n<span class="token operator">=</span> <span class="token number">5</span>n<span class="token operator">=</span> <span class="token number">6</span>n<span class="token operator">=</span> <span class="token number">7</span>n<span class="token operator">=</span> <span class="token number">8</span>n<span class="token operator">=</span> <span class="token number">9</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>3.循环控制语句</strong><br> 在Python中，循环控制语句包括break,continue,和pass。<br>| 循环控制语句名称 |                    具体功能                    |<br>| :————–: | :——————————————–: |<br>|      break       |          终止当前循环，且跳出整个循环          |<br>|     continue     | 终止当次循环，跳出该次循环，直接执行下一次循环 |<br>|       pass       |      不执行任何操作，一般用于占据一个位置      |</p><h3 id="3-1条件语句和循环语句"><a href="#3-1条件语句和循环语句" class="headerlink" title="3.1条件语句和循环语句"></a>3.1条件语句和循环语句</h3><p><strong>例7.6for、if、break搭配的语句，输出已经访问的数据</strong></p><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">24</span><span class="token punctuation">]</span><span class="token punctuation">:</span> r_list <span class="token operator">=</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">0.0137</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">0.0016</span><span class="token punctuation">,</span><span class="token number">0.024</span><span class="token punctuation">,</span><span class="token number">0.0061</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">0.0022</span><span class="token punctuation">,</span><span class="token number">0.0101</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">0.0019</span><span class="token punctuation">,</span><span class="token number">0.0072</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">0.0087</span><span class="token punctuation">,</span><span class="token number">0.0196</span><span class="token punctuation">,</span><span class="token number">0.0002</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">0.0055</span><span class="token punctuation">,</span><span class="token number">0.0182</span><span class="token punctuation">]</span>In <span class="token punctuation">[</span><span class="token number">25</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> r_list<span class="token punctuation">:</span>   <span class="token comment" spellcheck="true">#print函数和if一致，满足条件退出循环，不满足条件打印</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> i<span class="token operator">></span><span class="token number">0.02</span><span class="token punctuation">:</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>            <span class="token keyword">break</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'收益率数据:'</span><span class="token punctuation">,</span>i<span class="token punctuation">)</span>收益率数据<span class="token punctuation">:</span> <span class="token operator">-</span><span class="token number">0.0137</span>收益率数据<span class="token punctuation">:</span> <span class="token operator">-</span><span class="token number">0.0016</span><span class="token comment" spellcheck="true">#print函数和for循环一致，满足条件退出循环，打印第一次满足条件的值</span>In <span class="token punctuation">[</span><span class="token number">26</span><span class="token punctuation">]</span><span class="token punctuation">:</span> r_list <span class="token operator">=</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">0.0137</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">0.0016</span><span class="token punctuation">,</span><span class="token number">0.024</span><span class="token punctuation">,</span><span class="token number">0.0061</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">0.0022</span><span class="token punctuation">,</span><span class="token number">0.0101</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">0.0019</span><span class="token punctuation">,</span><span class="token number">0.0072</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">0.0087</span><span class="token punctuation">,</span><span class="token number">0.0196</span><span class="token punctuation">,</span><span class="token number">0.0002</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">0.0055</span><span class="token punctuation">,</span><span class="token number">0.0182</span><span class="token punctuation">]</span>In <span class="token punctuation">[</span><span class="token number">28</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> r_list<span class="token punctuation">:</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> i <span class="token operator">></span> <span class="token number">0.02</span><span class="token punctuation">:</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>            <span class="token keyword">break</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>       <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'收益率数据:'</span><span class="token punctuation">,</span>i<span class="token punctuation">)</span>收益率数据<span class="token punctuation">:</span> <span class="token number">0.024</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>例7.7for、if 和continue搭配的语句</strong></p><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">29</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> r_list<span class="token punctuation">:</span>  <span class="token comment" spellcheck="true">#当值为负数时，跳过这些负数的数据，并且输出全部非负的数据</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>            <span class="token keyword">if</span> i<span class="token operator">&lt;</span><span class="token number">0</span><span class="token punctuation">:</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>                <span class="token keyword">continue</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>           <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'非负收益率数据:'</span><span class="token punctuation">,</span>i<span class="token punctuation">)</span>非负收益率数据<span class="token punctuation">:</span> <span class="token number">0.024</span>非负收益率数据<span class="token punctuation">:</span> <span class="token number">0.0061</span>非负收益率数据<span class="token punctuation">:</span> <span class="token number">0.0101</span>非负收益率数据<span class="token punctuation">:</span> <span class="token number">0.0072</span>非负收益率数据<span class="token punctuation">:</span> <span class="token number">0.0196</span>非负收益率数据<span class="token punctuation">:</span> <span class="token number">0.0002</span>非负收益率数据<span class="token punctuation">:</span> <span class="token number">0.0182</span><span class="token comment" spellcheck="true">#for、if、pass、else搭配的语句</span>In <span class="token punctuation">[</span><span class="token number">30</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> r_list<span class="token punctuation">:</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>            <span class="token keyword">if</span> i<span class="token operator">&lt;</span><span class="token number">0</span><span class="token punctuation">:</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>                <span class="token keyword">pass</span>   <span class="token comment" spellcheck="true">#涨跌幅为负数时，不执行任何操作</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>            <span class="token keyword">else</span><span class="token punctuation">:</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'非负收益率数据'</span><span class="token punctuation">,</span>i<span class="token punctuation">)</span>非负收益率数据 <span class="token number">0.024</span>非负收益率数据 <span class="token number">0.0061</span>非负收益率数据 <span class="token number">0.0101</span>非负收益率数据 <span class="token number">0.0072</span>非负收益率数据 <span class="token number">0.0196</span>非负收益率数据 <span class="token number">0.0002</span>非负收益率数据 <span class="token number">0.0182</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>例7.8运用for、if、elif和else搭配的语句</strong></p><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">31</span><span class="token punctuation">]</span><span class="token punctuation">:</span> r3 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        <span class="token comment" spellcheck="true">#存放涨幅超过1%的数据列表</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>       r4 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        <span class="token comment" spellcheck="true">#存放跌幅超过1%的数据列表</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>       r5 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        <span class="token comment" spellcheck="true">#存放涨跌幅处于-1%至1%区间的数据列表</span>In <span class="token punctuation">[</span><span class="token number">32</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> r_list<span class="token punctuation">:</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>            <span class="token keyword">if</span> i <span class="token operator">></span> <span class="token number">0.01</span><span class="token punctuation">:</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>                r3<span class="token punctuation">.</span>append<span class="token punctuation">(</span>i<span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>            <span class="token keyword">elif</span> i <span class="token operator">&lt;</span> <span class="token operator">-</span><span class="token number">0.01</span><span class="token punctuation">:</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>                r4<span class="token punctuation">.</span>append<span class="token punctuation">(</span>i<span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>            <span class="token keyword">else</span><span class="token punctuation">:</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>                r5<span class="token punctuation">.</span>append<span class="token punctuation">(</span>i<span class="token punctuation">)</span>In <span class="token punctuation">[</span><span class="token number">33</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'涨幅超过1%的数据列表:'</span><span class="token punctuation">,</span>r3<span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>       <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'跌幅超过-1%的数据列表:'</span><span class="token punctuation">,</span>r4<span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>       <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'涨跌幅处于[-1%,1%]区间的数据列表:'</span><span class="token punctuation">,</span>r5<span class="token punctuation">)</span>涨幅超过<span class="token number">1</span><span class="token operator">%</span>的数据列表<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">0.024</span><span class="token punctuation">,</span> <span class="token number">0.0101</span><span class="token punctuation">,</span> <span class="token number">0.0196</span><span class="token punctuation">,</span> <span class="token number">0.0182</span><span class="token punctuation">]</span>跌幅超过<span class="token operator">-</span><span class="token number">1</span><span class="token operator">%</span>的数据列表<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">0.0137</span><span class="token punctuation">]</span>涨跌幅处于<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token operator">%</span><span class="token punctuation">]</span>区间的数据列表<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">0.0016</span><span class="token punctuation">,</span> <span class="token number">0.0061</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">0.0022</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">0.0019</span><span class="token punctuation">,</span> <span class="token number">0.0072</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">0.0087</span><span class="token punctuation">,</span> <span class="token number">0.0002</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">0.0055</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="8-模块的导入与math模块"><a href="#8-模块的导入与math模块" class="headerlink" title="8.模块的导入与math模块"></a>8.模块的导入与math模块</h2><p>Python的基本库可以完成基本的运算，但涉及比较复杂的数学运算、统计分析等，就需要用到大量的模块。Python中默认安装好的模块被称为“标准库”，“标准库”中的模块无需另行安装，就可以直接使用，比如math模块属于标准库，不用安装就可以直接使用，而其他的模块（非标准库）如NumPy、Pandas、SciPy、Matplotlib等则需要安装。</p><h3 id="8-1模块导入的若干种方法"><a href="#8-1模块导入的若干种方法" class="headerlink" title="8.1模块导入的若干种方法"></a>8.1模块导入的若干种方法</h3><p>在Python中，模块不能直接使用，在每次启动Python以后如果要使用相关模块，需要导入该模块，对于模块的导入存在多种方法：</p><table><thead><tr><th align="left"></th><th align="left">Python的代码</th><th align="left">具体说明与示例</th></tr></thead><tbody><tr><td align="left">方法1</td><td align="left">import 模块名</td><td align="left">直接导入整个模块，这种导入方式比较占用内存。具体的示例如下：import math</td></tr><tr><td align="left">方法2</td><td align="left">import 模块名 as 名称缩写</td><td align="left">导入整个模块的同时给该模块取一个别名，往往是用在模块名字比较长的情况下，这样能节省调用该模块时的输入时间。具体的示例如下： import matplotlib as np</td></tr><tr><td align="left">方法3</td><td align="left">import 模块名.子模块名 as 名称缩写</td><td align="left">导入某个模块的子模块，并且给该子模块取一个别名，当然是否取别名是一个可选项，这样占用的内存也比较少。具体的示例如下：import matplotlib.pyplot as plt</td></tr><tr><td align="left">方法4</td><td align="left">from 模块名 import 函数名</td><td align="left">从特定模块中导入某个或某几个函数（不同函数之间用英文逗号隔开，这样不仅占用的内存比较少，而且这些函数可以直接以函数名字的方式使用 ）。具体的示例如下：from math import exp,log,sqrt</td></tr><tr><td align="left">方法5</td><td align="left">from 模块名.子模块名 import 函数名</td><td align="left">与方法4很相似，只不过是从特定模块的子模块中导入某个或者几个函数。具体的示例如下：from matplotlib.pyplot import figure,plot</td></tr></tbody></table><h3 id="8-2math模块"><a href="#8-2math模块" class="headerlink" title="8.2math模块"></a>8.2math模块</h3><p>针对比较复杂的数学运算，比如求解正弦、余弦以及对数运算等，就会用到Python的数学模块math。依然可以通过dir命令查看math模块包含了那些函数和数学符号，具体加代码如下:<br><strong>例8.1math模块</strong></p><pre class="line-numbers language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token keyword">import</span> mathIn <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">:</span> dir<span class="token punctuation">(</span>math<span class="token punctuation">)</span>Out<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">'__doc__'</span><span class="token punctuation">,</span><span class="token string">'__loader__'</span><span class="token punctuation">,</span><span class="token string">'__name__'</span><span class="token punctuation">,</span><span class="token string">'__package__'</span><span class="token punctuation">,</span><span class="token string">'__spec__'</span><span class="token punctuation">,</span><span class="token string">'acos'</span><span class="token punctuation">,</span><span class="token string">'acosh'</span><span class="token punctuation">,</span><span class="token string">'asin'</span><span class="token punctuation">,</span><span class="token string">'asinh'</span><span class="token punctuation">,</span><span class="token string">'atan'</span><span class="token punctuation">,</span><span class="token string">'atan2'</span><span class="token punctuation">,</span><span class="token string">'atanh'</span><span class="token punctuation">,</span><span class="token string">'ceil'</span><span class="token punctuation">,</span><span class="token string">'comb'</span><span class="token punctuation">,</span><span class="token string">'copysign'</span><span class="token punctuation">,</span><span class="token string">'cos'</span><span class="token punctuation">,</span><span class="token string">'cosh'</span><span class="token punctuation">,</span><span class="token string">'degrees'</span><span class="token punctuation">,</span><span class="token string">'dist'</span><span class="token punctuation">,</span><span class="token string">'e'</span><span class="token punctuation">,</span><span class="token string">'erf'</span><span class="token punctuation">,</span><span class="token string">'erfc'</span><span class="token punctuation">,</span><span class="token string">'exp'</span><span class="token punctuation">,</span><span class="token string">'expm1'</span><span class="token punctuation">,</span><span class="token string">'fabs'</span><span class="token punctuation">,</span><span class="token string">'factorial'</span><span class="token punctuation">,</span><span class="token string">'floor'</span><span class="token punctuation">,</span><span class="token string">'fmod'</span><span class="token punctuation">,</span><span class="token string">'frexp'</span><span class="token punctuation">,</span><span class="token string">'fsum'</span><span class="token punctuation">,</span><span class="token string">'gamma'</span><span class="token punctuation">,</span><span class="token string">'gcd'</span><span class="token punctuation">,</span><span class="token string">'hypot'</span><span class="token punctuation">,</span><span class="token string">'inf'</span><span class="token punctuation">,</span><span class="token string">'isclose'</span><span class="token punctuation">,</span><span class="token string">'isfinite'</span><span class="token punctuation">,</span><span class="token string">'isinf'</span><span class="token punctuation">,</span><span class="token string">'isnan'</span><span class="token punctuation">,</span><span class="token string">'isqrt'</span><span class="token punctuation">,</span><span class="token string">'ldexp'</span><span class="token punctuation">,</span><span class="token string">'lgamma'</span><span class="token punctuation">,</span><span class="token string">'log'</span><span class="token punctuation">,</span><span class="token string">'log10'</span><span class="token punctuation">,</span><span class="token string">'log1p'</span><span class="token punctuation">,</span><span class="token string">'log2'</span><span class="token punctuation">,</span><span class="token string">'modf'</span><span class="token punctuation">,</span><span class="token string">'nan'</span><span class="token punctuation">,</span><span class="token string">'perm'</span><span class="token punctuation">,</span><span class="token string">'pi'</span><span class="token punctuation">,</span><span class="token string">'pow'</span><span class="token punctuation">,</span><span class="token string">'prod'</span><span class="token punctuation">,</span><span class="token string">'radians'</span><span class="token punctuation">,</span><span class="token string">'remainder'</span><span class="token punctuation">,</span><span class="token string">'sin'</span><span class="token punctuation">,</span><span class="token string">'sinh'</span><span class="token punctuation">,</span><span class="token string">'sqrt'</span><span class="token punctuation">,</span><span class="token string">'tan'</span><span class="token punctuation">,</span><span class="token string">'tanh'</span><span class="token punctuation">,</span><span class="token string">'tau'</span><span class="token punctuation">,</span><span class="token string">'trunc'</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>从acos开始一直到trune共计50个函数。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 入门篇 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2020/08/27/hello-world/"/>
      <url>/2020/08/27/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
